name: nix + bazel

on:
  pull_request: {}
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  nix-home:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Nix
        uses: actions/cache@v3
        id: nix-cache
        with:
          path: |
            /tmp/nixcache
          key: ${{ runner.os }}-nix-home-${{ hashFiles('flake.nix','flake.lock','flake.json') }}
          restore-keys: |
            ${{ runner.os }}-nix-home-

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Import Nix store cache
        if: steps.nix-cache.outputs.cache-hit == 'true'
        run: mkdir -p /tmp/nixcache && nix copy --from /tmp/nixcache --no-check-sigs

      - name: Install Cachix
        uses: cachix/cachix-action@v12
        with:
          name: defn
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: nix build
        run: nix build

      - name: Export Nix store cache
        if: steps.nix-cache.outputs.cache-hit != 'true'
        run: mkdir -p /tmp/nixcache && nix copy --to /tmp/nixcache --no-check-sigs

  nix-m:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Nix
        uses: actions/cache@v3
        id: nix-cache
        with:
          path: |
            /nix/store
          key: ${{ runner.os }}-nix-m-${{ hashFiles('m/flake.nix',',/flake.lock','m/flake.json') }}
          restore-keys: |
            ${{ runner.os }}-nix-m-

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Install Cachix
        uses: cachix/cachix-action@v12
        with:
          name: defn
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: nix build
        run: cd m && nix build

      - name: Export Nix store cache
        if: steps.nix-cache.outputs.cache-hit != 'true'
        run: nix-store --export $(find /nix/store -maxdepth 1 -name '*-*') > /tmp/nixcache

  build-m:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Bazel
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/bazel
          key: ${{ runner.os }}-bazel-${{ hashFiles('m/.bazelversion', 'm/.bazelrc', 'm/WORKSPACE') }}
          restore-keys: |
            ${{ runner.os }}-bazel-

      - name: bazel build
        run: cd m && make build
