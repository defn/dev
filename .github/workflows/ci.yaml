name: CI
"on":
  push:
    branches:
      - main
    tags:
      - v**
  pull_request: {}
jobs:
  build_amd:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build amd target
        run: |-
          make docker-dev \
          	cache=ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd \
          	tag=ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd \
          	platform=linux/amd64 \
          	arch=amd64
          docker push ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd
  build_arm:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build arm target
        run: |-
          make docker-dev \
          	cache=ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm \
          	tag=ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm \
          	platform=linux/arm/v7 \
          	arch=arm64
          docker push ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm
  build_k3d_amd:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build amd k3d-base target
        run: |-
          make docker-k3d \
          	cache=ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd-k3d \
          	tag=ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd-k3d \
          	platform=linux/amd64 \
          	arch=amd64
          docker push ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd-k3d
  build_k3d_arm:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build arm k3d-base target
        run: |-
          make docker-k3d \
          	cache=ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm-k3d \
          	tag=ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm-k3d \
          	platform=linux/arm/v7 \
          	arch=arm64
          docker push ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm-k3d
