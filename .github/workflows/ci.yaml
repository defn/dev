name: CI
"on":
  push:
    branches:
      - main
    tags:
      - v**
  pull_request: {}
jobs:
  build_amd:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |-
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
            echo "BRANCH=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
            echo "TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
          else
            branch="${GITHUB_REF_NAME}"
            echo "BRANCH=${branch}" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          fi

          git checkout -b "$branch" || true

          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

          git config --unset http.https://github.com/.extraheader
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download latest earthly
        run: sudo /bin/sh -c 'wget -q https://github.com/earthly/earthly/releases/download/v0.6.28/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Build amd target
        run: |-
          earthly --strict --push --no-output \
          	--cache-from ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd \
          	--remote-cache ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-amd \
          	+build-amd
  build_arm:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |-
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
            echo "BRANCH=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
            echo "TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
          else
            branch="${GITHUB_REF_NAME}"
            echo "BRANCH=${branch}" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          fi

          git checkout -b "$branch" || true

          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

          git config --unset http.https://github.com/.extraheader
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download latest earthly
        run: sudo /bin/sh -c 'wget -q https://github.com/earthly/earthly/releases/download/v0.6.28/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Build arm target
        run: |-
          earthly --strict --push --no-output \
          	--cache-from ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm \
          	--remote-cache ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-arm \
          	+build-arm
  publish:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    needs:
      - build_amd
      - build_arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |-
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
            echo "BRANCH=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
            echo "TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
          else
            branch="${GITHUB_REF_NAME}"
            echo "BRANCH=${branch}" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          fi

          git checkout -b "$branch" || true

          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

          git config --unset http.https://github.com/.extraheader
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish images
        run: |-
          docker manifest create ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-amd ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-arm
          docker manifest push ghcr.io/${GITHUB_REPOSITORY}:${TAG}
  build_k3d_amd:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |-
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
            echo "BRANCH=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
            echo "TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
          else
            branch="${GITHUB_REF_NAME}"
            echo "BRANCH=${branch}" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          fi

          git checkout -b "$branch" || true

          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

          git config --unset http.https://github.com/.extraheader
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download latest earthly
        run: sudo /bin/sh -c 'wget -q https://github.com/earthly/earthly/releases/download/v0.6.28/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Build amd k3d target
        run: |-
          earthly --strict --push --no-output \
          	--cache-from ghcr.io/${GITHUB_REPOSITORY}-cache:main-amd \
          	--cache-from ghcr.io/${GITHUB_REPOSITORY}-cache:main-k3d-amd \
          	--remote-cache ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-k3d-amd \
          	+build-amd-k3d
  build_k3d_arm:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |-
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
            echo "BRANCH=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
            echo "TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
          else
            branch="${GITHUB_REF_NAME}"
            echo "BRANCH=${branch}" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          fi

          git checkout -b "$branch" || true

          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

          git config --unset http.https://github.com/.extraheader
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download latest earthly
        run: sudo /bin/sh -c 'wget -q https://github.com/earthly/earthly/releases/download/v0.6.28/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Build arm k3d target
        run: |-
          earthly --strict --push --no-output \
          	--cache-from ghcr.io/${GITHUB_REPOSITORY}-cache:main-arm \
          	--cache-from ghcr.io/${GITHUB_REPOSITORY}-cache:main-k3d-arm \
          	--remote-cache ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-k3d-arm \
          	+build-arm-k3d
  publish_k3d:
    runs-on: ubuntu-latest
    env:
      FORCE_COLOR: 1
    needs:
      - build_k3d_amd
      - build_k3d_arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Put back the git branch into git (Earthly uses it for tagging)
        run: |-
          branch=""
          if [ -n "$GITHUB_HEAD_REF" ]; then
            branch="$GITHUB_HEAD_REF"
            echo "BRANCH=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
            echo "TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV
          else
            branch="${GITHUB_REF_NAME}"
            echo "BRANCH=${branch}" >> $GITHUB_ENV
            echo "TAG=latest" >> $GITHUB_ENV
          fi

          git checkout -b "$branch" || true

          if [ "$GITHUB_REF_TYPE" = "tag" ]; then
            echo "BRANCH=${GITHUB_REF_NAME}" >> $GITHUB_ENV
            echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          fi

          git config --unset http.https://github.com/.extraheader
      - name: Login to Packages Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: not-used
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Publish images
        run: |-
          docker manifest create ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-k3d-amd ghcr.io/${GITHUB_REPOSITORY}-cache:${BRANCH}-k3d-arm
          docker manifest push ghcr.io/${GITHUB_REPOSITORY}:${TAG}
