dummy_host = "crouching.tiger-mamba.ts.net"
dummy_ip = "169.254.32.1"

analytics_settings(False)

load("ext://uibutton", "cmd_button", "location")

allow_k8s_contexts("pod")

update_settings(max_parallel_updates=20)

cmd_button(
    name="ui argocd",
    text="argocd",
    icon_name="stream",
    resource="argocd",
    argv=[
        "bash",
        "-c",
        """
            cd;
            kubectl --context argocd get -o json secret argocd-initial-admin-secret | jq -r '.data.password | @base64d' | ssh super pbcopy;
            xdg-open https://{domain}:603;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui traefik",
    text="traefik",
    icon_name="traffic",
    resource="traefik",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:605;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vc kuma",
    text="kuma",
    icon_name="rss_feed",
    resource="kuma",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:606/gui;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vc2",
    text="vc2",
    icon_name="signal_cellular_alt_2_bar",
    resource="vc2",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:607;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vc3",
    text="vc3",
    icon_name="signal_cellular_alt",
    resource="vc3",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:608;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui loft",
    text="loft",
    resource="loft",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:602;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

local_resource(
    name="registry pod",
    serve_cmd="exec socat TCP-LISTEN:5000,fork,reuseaddr TCP:{ip}:5000".format(
        ip=dummy_ip
    ),
    allow_parallel=True,
    labels=["tunnels"],
)

local_resource(
    name="registry buildkitd",
    serve_cmd="""
        cd;
        earthly bootstrap;
        docker exec earthly-buildkitd apk add socat || true;
        docker exec earthly-buildkitd pkill socat;
        rm -f /home/ubuntu/.registry.txt;
        exec docker exec earthly-buildkitd socat TCP-LISTEN:5000,fork,reuseaddr TCP:{ip}:5000;
    """.format(
        ip=dummy_ip
    ),
    allow_parallel=True,
    deps=["/home/ubuntu/.registry.txt"],
    labels=["tunnels"],
)

local_resource(
    name="shell-operator",
    serve_cmd="""
        cd;
        sudo install -d -m 0700 -o ubuntu -g ubuntu /var/run/shell-operator /tmp/shell-operator;
        exec /shell-operator start --listen-port=9116;
    """,
    allow_parallel=True,
    deps=["hooks"],
    labels=["automation"],
)

local_resource(
    "dev",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff dev --local k/dev; then echo No difference; fi;
    """,
    deps=["k/dev"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync dev",
    resource="dev",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync dev --local k/dev --assumeYes --prune; 
            touch k/dev/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "argocd",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff argocd --local k/argocd; then echo No difference; fi;
    """,
    deps=["k/argocd"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync argocd",
    resource="argocd",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync argocd --local k/argocd --assumeYes --prune; 
            touch k/argocd/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "traefik",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff traefik --local k/traefik; then echo No difference; fi;
    """,
    deps=["k/traefik"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync traefik",
    resource="traefik",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync traefik --local k/traefik --assumeYes --prune; 
            touch k/traefik/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "loft",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff loft --local k/loft; then echo No difference; fi;
    """,
    deps=["k/loft"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync loft",
    resource="loft",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync loft --local k/loft --assumeYes --prune; 
            touch k/loft/main.yaml;
        """,
    ],
    icon_name="build",
)
