dummy_host = "169.254.32.1"
dummy_ip = "169.254.32.1"

analytics_settings(False)

load("ext://uibutton", "cmd_button", "location")

allow_k8s_contexts("pod")

update_settings(max_parallel_updates=20)

cmd_button(
    name="ui argocd",
    text="argocd",
    icon_name="stream",
    resource="argocd",
    argv=[
        "bash",
        "-c",
        """
            cd;
            kubectl --context argocd get -o json secret argocd-initial-admin-secret | jq -r '.data.password | @base64d' | ssh super pbcopy;
            xdg-open https://{domain}:9603;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui traefik",
    text="traefik",
    icon_name="traffic",
    resource="traefik",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:9605;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vault",
    text="vault",
    icon_name="key",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            pass Initial_Root_Token | ssh super pbcopy;
            xdg-open https://{domain}:8200/ui;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vc kuma",
    text="kuma",
    icon_name="rss_feed",
    resource="kuma",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:9606/gui;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vc2",
    text="vc2",
    icon_name="signal_cellular_alt_2_bar",
    resource="vc2",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:9607;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui vc3",
    text="vc3",
    icon_name="signal_cellular_alt",
    resource="vc3",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:9608;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

cmd_button(
    name="ui loft",
    text="loft",
    resource="loft",
    argv=[
        "bash",
        "-c",
        """
            cd;
            xdg-open https://{domain}:9602;
        """.format(
            domain=dummy_host
        ),
    ],
    location="nav",
)

local_resource(
    name="registry pod",
    serve_cmd="exec socat -d -d TCP-LISTEN:5000,fork,reuseaddr TCP:{ip}:5000".format(
        ip="host.k3d.internal"
    ),
    allow_parallel=True,
    labels=["tunnels"],
)

local_resource(
    name="registry buildkitd",
    serve_cmd="""
        cd;
        earthly bootstrap;
        docker exec earthly-buildkitd apk add socat || true;
        docker exec earthly-buildkitd pkill socat;
        rm -f /home/ubuntu/.registry.txt;
        exec docker exec earthly-buildkitd socat -d -d TCP-LISTEN:5000,fork,reuseaddr TCP:{ip}:5000;
    """.format(
        ip="169.254.32.1"
    ),
    allow_parallel=True,
    deps=["/home/ubuntu/.registry.txt"],
    labels=["tunnels"],
)

local_resource(
    name="shell-operator",
    serve_cmd="""
        cd;
        sudo install -d -m 0700 -o ubuntu -g ubuntu /var/run/shell-operator /tmp/shell-operator;
        exec /shell-operator start --listen-port=9116;
    """,
    allow_parallel=True,
    deps=["hooks"],
    labels=["automation"],
)

local_resource(
    "argocd",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff argocd --local k/argocd; then echo No difference; fi;
    """,
    deps=["k/argocd"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync argocd",
    resource="argocd",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync argocd --local k/argocd --assumeYes --prune;
            touch k/argocd/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "traefik",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff traefik --local k/traefik; then echo No difference; fi;
    """,
    deps=["k/traefik"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync traefik",
    resource="traefik",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync traefik --local k/traefik --assumeYes --prune;
            touch k/traefik/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "kuma",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff kuma --local k/kuma; then echo No difference; fi;
    """,
    deps=["k/kuma"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync kuma",
    resource="kuma",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync kuma --local k/kuma --assumeYes --prune;
            touch k/kuma/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "kong",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff kong --local k/kong; then echo No difference; fi;
    """,
    deps=["k/kong"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync kong",
    resource="kong",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync kong --local k/kong --assumeYes --prune;
            touch k/kong/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "loft",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff loft --local k/loft; then echo No difference; fi;
    """,
    deps=["k/loft"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync loft",
    resource="loft",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync loft --local k/loft --assumeYes --prune;
            touch k/loft/main.yaml;
        """,
    ],
    icon_name="build",
)

local_resource(
    "vault",
    cmd="""
        cd;
        if argocd --kube-context argocd app diff vault --local k/vault; then echo No difference; fi;
    """,
    deps=["k/vault"],
    allow_parallel=True,
    labels=["deploy"],
)

cmd_button(
    name="sync vault",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            argocd --kube-context argocd app sync vault --local k/vault --assumeYes --prune;
            touch k/vault/main.yaml;
        """,
    ],
    icon_name="build",
)

cmd_button(
    name="init vault",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            kubectl exec -n vault -ti vault-0 -- vault operator init
        """,
    ],
    icon_name="build",
)

cmd_button(
    name="seal vault",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            pass Initial_Root_Token | env VAULT_ADDR=http://vault.vault.svc:8200 vault login - | grep ^policies;
            env VAULT_ADDR=http://vault.vault.svc:8200 vault operator seal;
            rm -f ~/.vault-token;
        """,
    ],
    icon_name="build",
)

cmd_button(
    name="backup vault",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            rm -rf ~/.password-store/vault;
            kubectl exec -n vault vault-0 -- tar cfz - /vault/data | (cd ~/.password-store && tar xvfz - && git add vault && git add -u vault && git commit -m 'vault backup' && git push);
        """,
    ],
    icon_name="build",
)

cmd_button(
    name="restore vault",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            ts="$(date +%s)";
            kubectl exec -i -n vault vault-0 -- mkdir -p /vault/data-${ts};
            kubectl exec -i -n vault vault-0 -- mv /vault/data/{core,logical,sys} /vault/data-${ts}/;
            (cd ~/.password-store && tar cfz - vault) | kubectl exec -i -n vault vault-0 -- tar xvfz - -C /;
        """,
    ],
    icon_name="build",
)

cmd_button(
    name="unseal vault",
    resource="vault",
    argv=[
        "bash",
        "-c",
        """
            cd;
            kubectl exec -n vault -ti vault-0 -- vault operator unseal -reset;
            pass Unseal_Key_1 | curl -sSL -X PUT -d @<(jq -nrR 'inputs|{key:.}|@json') http://vault.vault.svc:8200/v1/sys/unseal;
            pass Unseal_Key_3 | curl -sSL -X PUT -d @<(jq -nrR 'inputs|{key:.}|@json') http://vault.vault.svc:8200/v1/sys/unseal;
            pass Unseal_Key_5 | curl -sSL -X PUT -d @<(jq -nrR 'inputs|{key:.}|@json') http://vault.vault.svc:8200/v1/sys/unseal;
            kubectl exec -n vault -ti vault-0 -- vault status;
        """,
    ],
    icon_name="build",
)

for kname, vname in [
    ("vc1", "vc1"),
    ("vc2", "vc2"),
    ("vc3", "vc3"),
]:
    local_resource(
        kname,
        cmd="""
            cd;
            if argocd --kube-context argocd app diff {kname} --local k/{kname}; then echo No difference; fi;
        """.format(
            vname=vname, kname=kname
        ),
        deps=["k/" + kname],
        allow_parallel=True,
        labels=[vname],
    )

    cmd_button(
        name="sync " + kname,
        resource=kname,
        argv=[
            "bash",
            "-c",
            """
                cd;
                kubectl --context argocd apply -f k/{kname}-application.yaml;
                argocd --kube-context argocd app sync {kname} --local k/{kname} --assumeYes --prune;
                argocd --kube-context argocd app wait {kname};
                kubectl --context pod wait -n {vname} -l statefulset.kubernetes.io/pod-name={vname}-0 --for=condition=ContainersReady pod || true;
                {vname} get ns;
                ~/bin/e env KUBECONFIG=$KUBECONFIG_ALL argocd cluster add loft-vcluster_{vname}_{vname}_loft-cluster --name {vname} --yes;
                touch k/{kname}/main.yaml ;
            """.format(
                vname=vname, kname=kname
            ),
        ],
        icon_name="build",
    )

    cmd_button(
        name="delete " + kname,
        resource=kname,
        argv=[
            "bash",
            "-c",
            """
                cd;
                argocd --kube-context argocd app delete --yes {kname};
            """.format(
                vname=vname, kname=kname
            ),
        ],
        icon_name="build",
    )

    cmd_button(
        name="sleep " + vname,
        resource=vname,
        argv=[
            "bash",
            "-c",
            """
                cd;
                loft sleep --prevent-wakeup 0 {vname}
            """.format(
                vname=vname
            ),
        ],
        icon_name="build",
    )
    cmd_button(
        name="wakeup " + vname,
        resource=vname,
        argv=[
            "bash",
            "-c",
            """
                cd;
                loft wakeup {vname}
            """.format(
                vname=vname
            ),
        ],
        icon_name="build",
    )
