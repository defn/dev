#!/usr/bin/env bash

#export PATH="/opt/bazel-bin:/bin:/sbin:/usr/bin:/usr/sbin"

bopts="--sandbox_writable_path=/nix --sandbox_writable_path=${HOME}/.cache/nix --sandbox_writable_path=${HOME}/.cache/go-mod --sandbox_writable_path=${HOME}/.cache/go-build  --sandbox_writable_path=${HOME}/.earthly --sandbox_writable_path=${HOME}/m/k --sandbox_writable_path=${HOME}/work --action_env=HOME=${HOME} --test_env=HOME=${HOME}"

function bazel {
	local cmd="$1"
	shift

	case "${cmd}" in
	build | test | run)
		command bazel --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1 "${cmd}" --macos_sdk_version="$(/usr/bin/xcrun -show-sdk-version || true)" "$@"
		;;
	*)
		command bazel --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1 "${cmd}" "$@"
		;;
	esac
}

function main {
	set -efu -o pipefail

	case "${1-}" in
	logout)
		open https://signin.aws.amazon.com/oauth?Action=logout &
		;;
	login)
		shift
		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$(b pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		b logout
		b pass run //aws:aws__cli "${account}" aws-vault login "${account}"
		;;
	exec)
		shift
		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$(b pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		shift
		b pass run //aws:aws__cli "${account}" aws-vault exec "${account}" -- "$@"
		;;
	aws)
		shift

		if [[ $# == 0 ]]; then
			b pass run //aws:aws__list_accounts
			return $?
		fi

		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$(b pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		shift
		b pass run //aws:aws__cli "${account}" aws "$@"
		;;
	graph)
		shift

		local rule
		case "${1-}" in
		"")
			rule="$(b | fzf --select-1)"
			;;
		/*)
			rule="$(b | fzf --query="${1#/}" --select-1)"
			shift
			;;
		*)
			rule="$1"
			;;
		esac

		local tmp_dot
		tmp_dot="$(mktemp -d -t graphiz-XXXXXX || true)"
		set -x
		b query --noimplicit_deps "deps(${rule})" --output graph >"${tmp_dot}/graph.in" && dot -Tpng <"${tmp_dot}/graph.in" >"${tmp_dot}/graph.png" && code "${tmp_dot}/graph.png"
		;;
	*)
		if [[ $# == 0 ]]; then
			local bazel_prefix
			bazel_prefix="$(git rev-parse --show-prefix | sed 's#/$##; s#^m/##')"

			bazel query "..." | sed "s#^//${bazel_prefix}:##" | grep -v ^_
		else
			local rule

			case "$1" in
			build)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule="$(b | fzf --query="$1" --select-1)"
					shift
				fi

				# shellcheck disable=SC2086
				bazel build ${bopts} "${rule}"
				;;
			test)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule="$(b | fzf --query="$1" --select-1)"
					shift
				fi

				# shellcheck disable=SC2086
				bazel test --color=yes ${bopts} "${rule}" | grep -v 'There were tests whose specified size is too big'

				;;
			outputs)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule=":$(b | fzf --query="$1" --select-1)"
					shift
				fi

				local w
				w="$(bazel info workspace)"

				bazel cquery "${rule}" --output=files | grep bazel-out/
				;;
			in)
				shift

				rule=":$(b | fzf --query="${1-}" --select-1 || true)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep -v bazel-out/ | sed "s#^#${w}/#" || true)"

				cat "${out}"
				;;
			out)
				shift

				rule=":$(b | fzf --query="${1-}" --select-1)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep bazel-out/ | sed "s#^#${w}/#" || true)"

				cat "${out}"
				;;
			cat)
				shift

				rule=":$(b | fzf --query="${1-}" --select-1)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep bazel-out/ | sed "s#^#${w}/#" || true)"

				if [[ -z ${out} ]]; then
					# shellcheck disable=SC2310
					out="$(bazel cquery "${rule}" --output=files | grep -v bazel-out/ | sed "s#^#${w}/#" || true)"
				fi

				cat "${out}"
				;;
			run)
				shift

				if [[ -z ${1-} ]]; then
					rule="$(b | grep __ | fzf --select-1)"
				else
					rule="$(b | fzf --query="${1}" --select-1)"
					shift
				fi

				# shellcheck disable=SC2086
				bazel run ${bopts} "${rule}" --sandbox_debug -- "$@"
				;;
			pass)
				shift
				cmd="$1"
				shift
				# shellcheck disable=SC2086
				bazel "${cmd}" ${bopts} "$@"
				;;
			*)
				bazel "$@"
				;;
			esac
		fi
		;;
	esac
}

main "$@"
