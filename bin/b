#!/usr/bin/env bash

function bazel {
	local cmd="$1"
	shift

	case "${cmd}" in
	build | run)
		if [[ "$(uname -s || true)" == "Darwin" ]]; then
			PATH="/usr/bin:${PATH}"
			command bazel --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1 "${cmd}" --macos_sdk_version="$(xcrun -show-sdk-version || true)" "$@"
			return $?
		fi
		;;
	*)
		true
		;;
	esac

	command bazel --host_jvm_args=-DBAZEL_TRACK_SOURCE_DIRECTORIES=1 "${cmd}" "$@"
}

function main {
	set -efu -o pipefail

	case "${1:-}" in
	login)
		shift
		local account
		account="$(grep '^\[profile ' ~/.aws/config | grep \\-sso | awk '{print $2}' | cut -d']' -f1 | sort | fzf --query="${1:-}" --select-1)"
		b logout
		aws-vault login "${account}"
		;;
	logout)
		open https://signin.aws.amazon.com/oauth?Action=logout &
		;;
	exec)
		shift
		local account
		account="$(grep '^\[profile ' ~/.aws/config | grep \\-sso | awk '{print $2}' | cut -d']' -f1 | sort | fzf --query="${1:-}" --select-1)"
		shift
		aws-vault exec "${account}" -- "$@"
		;;
	tilt)
		shift
		open 'http://localhost/r/(all)/overview'
		;;
	*)
		if [[ $# == 0 ]]; then
			local bazel_prefix
			bazel_prefix="$(git rev-parse --show-prefix | sed 's#/$##; s#^m/##')"

			bazel query "..." | sed "s#^//${bazel_prefix}:##" | grep -v ^_
		else
			local rule

			case "$1" in
			build)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule="$(b | fzf --query="$1" --select-1)"
					shift
				fi

				bazel build --sandbox_writable_path=/nix --sandbox_writable_path="${HOME}/.cache/nix" --sandbox_writable_path="${HOME}/.earthly" "${rule}"
				;;
			test)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule="$(b | fzf --query="$1" --select-1)"
					shift
				fi

				bazel test --sandbox_writable_path=/nix --sandbox_writable_path="${HOME}/.cache/nix" --sandbox_writable_path="${HOME}/.earthly" "${rule}"
				;;
			outputs)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule=":$(b | fzf --query="$1" --select-1)"
					shift
				fi

				local w
				w="$(bazel info workspace)"

				bazel cquery "${rule}" --output=files | grep bazel-out/
				;;
			in)
				shift

				rule=":$(b | fzf --query="${1:-}" --select-1 || true)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep -v bazel-out/ | sed "s#^#${w}/#" || true)"

				cat "${out}"
				;;
			out)
				shift

				rule=":$(b | fzf --query="${1:-}" --select-1)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep bazel-out/ | sed "s#^#${w}/#" || true)"

				cat "${out}"
				;;
			cat)
				shift

				rule=":$(b | fzf --query="${1:-}" --select-1)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep bazel-out/ | sed "s#^#${w}/#" || true)"

				if [[ -z ${out} ]]; then
					# shellcheck disable=SC2310
					out="$(bazel cquery "${rule}" --output=files | grep -v bazel-out/ | sed "s#^#${w}/#" || true)"
				fi

				cat "${out}"
				;;
			run)
				shift

				rule="$(b | fzf --query="${1}" --select-1)"
				shift

				bazel run --sandbox_writable_path=/nix --sandbox_writable_path="${HOME}/.cache/nix" --sandbox_writable_path="${HOME}/.earthly" "${rule}" --sandbox_debug -- "$@"
				;;
			pass)
				shift
				cmd="$1"; shift
				bazel "${cmd}" --sandbox_writable_path=/nix --sandbox_writable_path="${HOME}/.cache/nix" --sandbox_writable_path="${HOME}/.earthly" "$@"
				;;
			*)
				bazel "$@"
				;;
			esac
		fi
		;;
	esac
}

main "$@"
