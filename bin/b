#!/usr/bin/env bash

source ~/.bash_profile

bopts=""

export HOME="${HOME:-/home/ubuntu}"

function bazel {
	local cmd="$1"
	shift

	case "${cmd}" in
	watch)
		if [[ $# == 0 ]]; then set -- .; fi
		command ibazel build "$@"
		;;
	build | test | run | query | cquery)
		# shellcheck disable=SC2065
		if [[ -n ${DEBUG:=} ]]; then
			command bazel "${cmd}" --sandbox_debug --verbose_failures "$@"
		else
			command bazel "${cmd}" "$@"
		fi
		;;
	*)
		command bazel "${cmd}" "$@"
		;;
	esac
}

function main {
	set -efu -o pipefail

	case "${1-}" in
	diff)
		shift
		env GIT_EXTERNAL_DIFF="b dyff" git diff "$@"
		;;
	dyff)
		shift
		shift # path
		old="$1"
		shift
		shift # hex
		shift # mode
		new="$1"
		shift
		shift # hex
		shift # mode
		case "${old}" in
		*.yaml | *.yml | *.json)
			dyff --color=yes between "${old}" "${new}" || true
			;;
		*)
			true
			;;
		meh)
			echo diff "${old}" "${new}"
			diff "${old}" "${new}" || true
			;;
		esac
		;;
	open)
		shift
		folder="$(cd "$1" && pwd -P)"
		shift
		open "${CODER_AGENT_URL/\/\//\/\/${DFD_APP}--${DFD_AGENT:-main}--${DFD_NAME}--${DFD_OWNER}.}?folder=$folder"
		;;
	forward)
		shift
		local remote
		local a
		remote="$1"
		shift
		a=$(date +%s)
		coder config-ssh --yes
		rsync -ia ~/.gnupg/pubring.kbx ~/.gnupg/trustdb.gpg "${remote}:.gnupg/"
		ssh "${remote}" ln -nfs "/tmp/S.gpg-agent.${a}" /home/ubuntu/.gnupg/S.gpg-agent
		ssh -v "${remote}" -N -o ServerAliveInterval=30 -o RemoteForward="/tmp/S.gpg-agent.${a} ${HOME}/.gnupg/S.gpg-agent.extra" "$@"
		;;
	logout)
		open https://signin.aws.amazon.com/oauth?Action=logout &
		;;
	login)
		shift
		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$("$0" pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		account="${account}-sso-source"
		shift
		local region="${1:-${AWS_REGION:-${AWS_DEFAULT_REGION:-us-east-1}}}"
		url=$("$0" pass run //aws:aws__cli "${account}" aws-vault login "${account}" -- --region=${region} -s | sed 's#://#://us-east-1.#')
		encoded_url=$(printf "%s" "$url" | python -c 'import sys; from urllib.parse import quote_plus; print(quote_plus(sys.stdin.read().strip()))')
		open "https://signin.aws.amazon.com/oauth?Action=logout&redirect_uri=${encoded_url}"
		;;
	server)
		shift
		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$("$0" pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		account="${account}-sso-source"
		shift
		"$0" pass run //aws:aws__cli "${account}" -- aws-vault exec --prompt=osascript --lazy --ecs-server "${account}" -- "$@"
		;;
	exec)
		shift
		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$("$0" pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		account="${account}-sso-source"
		shift
		"$0" pass run //aws:aws__cli "${account}" -- aws-vault exec "${account}" -- "$@"
		;;
	aws)
		shift

		if [[ $# == 0 ]]; then
			"$0" pass run //aws:aws__list_accounts
			return $?
		fi

		local account
		case "${1-}" in
		"" | /*)
			account="${1-}"
			account="$("$0" pass run //aws:aws__list_accounts | fzf --query="${account#/}" --select-1)"
			;;
		*)
			account="$1"
			;;
		esac
		account="${account}-sso-source"
		shift
		"$0" pass run //aws:aws__cli "${account}" aws "$@"
		;;
	graph)
		shift

		local rule
		case "${1-}" in
		"")
			rule="$("$0" | fzf --select-1)"
			;;
		/*)
			rule="$("$0" | fzf --query="${1#/}" --select-1)"
			shift
			;;
		*)
			rule="$1"
			;;
		esac

		local tmp_dot
		tmp_dot="$(mktemp -d -t graphiz-XXXXXX || true)"
		"$0"query --noimplicit_deps "deps(${rule})" --output graph >"${tmp_dot}/graph.in" && dot -Tpng <"${tmp_dot}/graph.in" >"${tmp_dot}/graph.png" && code "${tmp_dot}/graph.png"
		;;
	*)
		if [[ $# == 0 ]]; then
			local bazel_prefix
			bazel_prefix="$(git rev-parse --show-prefix | sed 's#/$##; s#^m/##')"

			bazel query "..." | sed "s#^//${bazel_prefix}:##" | grep -v ^_
		else
			local rule

			case "$1" in
			build)
				shift

				case "${1-}" in
				"")
					rule="/..."
					;;
				//*)
					rule="$1"
					shift
					;;
				/*)
					rule="$("$0" | fzf --query="${1#/}" --select-1)"
					;;
				*)
					rule="$1"
					shift
					;;
				esac

				# shellcheck disable=SC2086
				bazel build ${bopts} "${rule}"
				;;
			test)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule="$("$0" | fzf --query="$1" --select-1)"
					shift
				fi

				# shellcheck disable=SC2086
				bazel test --color=yes ${bopts} "${rule}" | grep -v 'There were tests whose specified size is too big'

				;;
			outputs)
				shift

				if [[ $# == 0 ]]; then
					rule="/..."
				else
					rule=":$("$0" | fzf --query="$1" --select-1)"
					shift
				fi

				local w
				w="$(command bazel info workspace)"

				command bazel cquery $bopts "${rule}" --output=files | grep bazel-out/
				;;
			in)
				shift

				rule=":$("$0" | fzf --query="${1-}" --select-1 || true)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep -v bazel-out/ | sed "s#^#${w}/#" || true)"

				cat "${out}"
				;;
			out)
				shift

				case "${1-}" in
				"")
					rule="$("$0" | grep _ | fzf --select-1)"
					;;
				/*)
					rule="$("$0" | fzf --query="${1#/}" --select-1)"
					;;
				*)
					rule="$1"
					shift
					;;
				esac

				local w
				w="$(command bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(command bazel cquery $bopts "${rule}" --output=files | grep bazel-out/ | sed "s#^#${w}/#" || true)"

				cat "${out}"
				;;
			cat)
				shift

				rule=":$("$0" | fzf --query="${1-}" --select-1)"

				local w
				w="$(bazel info workspace)"

				local out
				# shellcheck disable=SC2310
				out="$(bazel cquery "${rule}" --output=files | grep bazel-out/ | sed "s#^#${w}/#" || true)"

				if [[ -z ${out} ]]; then
					# shellcheck disable=SC2310
					out="$(bazel cquery "${rule}" --output=files | grep -v bazel-out/ | sed "s#^#${w}/#" || true)"
				fi

				cat "${out}"
				;;
			run)
				shift

				case "${1-}" in
				"")
					rule="$("$0" | grep _ | fzf --select-1)"
					;;
				//*)
					rule="$1"
					shift
					;;
				/*)
					rule="$("$0" | fzf --query="${1#/}" --select-1)"
					;;
				*)
					rule="$1"
					shift
					;;
				esac

				if [[ $# -gt 0 ]]; then shift; fi

				# shellcheck disable=SC2086
				bazel run ${bopts} "${rule}" -- "$@"
				;;
			pass)
				shift
				cmd="$1"
				shift
				# shellcheck disable=SC2086
				bazel "${cmd}" ${bopts} "$@"
				;;
			*)
				bazel "$@"
				;;
			esac
		fi
		;;
	esac
}

main "$@"
