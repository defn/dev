load("@rules_oci//oci:defs.bzl", "oci_image")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("//cue:cue.bzl", "cue_export")
load("//nix:nix.bzl", "nix_flake")
load("//oci:oci.bzl", "skopeo_copy")
load("//out:out.bzl", "copy_files")


filegroup(
    name = "template_org",
    srcs = ["template_org.txt"],
)

filegroup(
    name = "template_account",
    srcs = ["template_account.txt"],
)

filegroup(
    name = "aws_config_script",
    srcs = ["aws_config.sh"],
)

# aws configuration
genrule(
    name = "aws_config_cfg",
    srcs = [
        "app_config",
        "template_account",
        "template_org",
    ],
    outs = ["aws_config.txt"],
    cmd = "$(location aws_config_script) $(location app_config) $(location template_org) $(location template_account) $@",
    tools = ["aws_config_script"],
)

# nix flake
nix_flake(
    name = "flake",
    flakes = [
        "cue",
        "awscli",
    ],
    cmds = [
        "aws-vault",
    ]
)

# app configuration
cue_export(
    name = "app_config",
    srcs = ["flake_cue"],
    cues = glob(["*.cue"]),
)

# aws cli wrapper
sh_binary(
    name = "aws__cli",
    srcs = ["aws_cli.sh"],
    args = [
        "$(location flake_awscli)",
        "$(location flake_aws-vault)",
        "$(location aws_config_cfg)",
    ],
    data = [
        "flake_awscli",
        "flake_aws-vault",
        "aws_config_cfg",
    ],
)

sh_binary(
    name = "aws__list_accounts",
    srcs = ["aws_list_accounts.sh"],
    args = [
        "$(location app_config)",
    ],
    data = [
        "app_config",
    ],
)

# oci
pkg_tar(
    name = "aws_config_tar",
    srcs = [
        "app_config",
        "aws_config_cfg",
    ],
    package_dir = "/app",
)

oci_image(
    name = "aws_image",
    base = "@ubuntu_2204",
    tars = [
        "aws_config_tar",
        "flake_store",
    ],
)

skopeo_copy(
    name = "aws_push",
    image = ":aws_image",
    remote_tags = ["latest"],
    repository = "169.254.32.1:5000/defn/dev/aws",
)
