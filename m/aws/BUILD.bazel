load("//cue:cue.bzl", "cue_export")
load("//earthly:earthly.bzl", "earthly_build")
load("//nix:nix.bzl", "nix_flake")

filegroup(
    name = "aws_orgs",
    srcs = ["aws_orgs.txt"],
)

filegroup(
    name = "aws_accounts",
    srcs = ["aws_accounts.txt"],
)

filegroup(
    name = "template_org",
    srcs = ["template_org.txt"],
)

filegroup(
    name = "template_account",
    srcs = ["template_account.txt"],
)

filegroup(
    name = "aws_config_script",
    srcs = ["aws_config.sh"],
)

# aws configuration
genrule(
    name = "aws_config_cfg",
    srcs = [
        "aws_accounts",
        "aws_orgs",
        "template_account",
        "template_org",
    ],
    outs = ["aws_config.txt"],
    cmd = "$(location aws_config_script) $(location aws_orgs) $(location aws_accounts) $(location template_org) $(location template_account) $@",
    tools = ["aws_config_script"],
)

# nix flake
nix_flake(
    name = "flake",
    flakes = [
        "cue",
        "awscli",
        "earthly",
    ],
)

# app configuration
cue_export(
    name = "app_config",
    srcs = ["flake_cue"],
    cues = glob(["*.cue"]),
)

# aws cli wrapper
sh_binary(
    name = "aws_cli",
    srcs = ["aws_cli.sh"],
    args = [
        "$(location flake_awscli)",
        "$(location app_config)",
        "$(location aws_config_cfg)",
    ],
    data = [
        "app_config",
        "aws_config_cfg",
        "flake_awscli",
    ],
)

# build docker image
earthly_build(
    name = "aws",
    data = [
        "app_config",
        "aws_config_cfg",
        "flake_archives",
    ],
    earthly_bin = "flake_earthly",
    image = "aws",
)
