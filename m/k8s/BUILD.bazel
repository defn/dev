load("//cue:cue.bzl", "cue_export")
load("//nix:nix.bzl", "nix_flake")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@bazel_skylib//rules:write_file.bzl", "write_file")

# nix flake
nix_flake(
    name = "flake",
    flakes = [
        "cue",
    ],
)

# app configuration
cue_export(
    name = "app_config",
    srcs = ["flake_cue"],
    cues = glob(["*.cue"]),
    visibility = ["//visibility:public"],
)

# https://www.aspect.dev/blog/bazel-can-write-to-the-source-folder
_GENERATED = {
    "k8s/app_config.json": "//k8s:app_config"
}

[
    diff_test(
        name = "check_" + k,
        failure_message = "Please run: b run //:update_repo",
        file1 = k,
        file2 = v,
    )
    for [k, v] in _GENERATED.items()
]

write_file(
    name = "gen_update_script",
    out = "update.sh",
    content = [
        "#!/usr/bin/env bash",
        "cd $BUILD_WORKSPACE_DIRECTORY",
    ] + [
        "cp -fv bazel-bin/{1} {0}; chmod 644 {0}".format(
            k,
            # Convert label to path
            v.replace(":", "/"),
        )
        for [k, v] in _GENERATED.items()
    ],
)

sh_binary(
    name = "update__repo",
    srcs = ["update.sh"],
    data = _GENERATED.values(),
)