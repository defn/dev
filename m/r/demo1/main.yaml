apiVersion: v1
kind: Namespace
metadata:
  labels:
    kuma.io/sidecar-injection: enabled
  name: kuma-demo
  namespace: kuma-demo
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    3001.service.kuma.io/protocol: http
  name: backend
  namespace: kuma-demo
spec:
  ports:
  - name: api
    port: 3001
  selector:
    app: kuma-demo-backend
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    8080.service.kuma.io/protocol: http
    ingress.kubernetes.io/service-upstream: "true"
  name: frontend
  namespace: kuma-demo
spec:
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: kuma-demo-frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
  namespace: kuma-demo
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    app: postgres
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
    role: master
    tier: backend
  name: redis
  namespace: kuma-demo
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-app
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-frontend
      env: prod
      version: v8
  template:
    metadata:
      labels:
        app: kuma-demo-frontend
        env: prod
        version: v8
    spec:
      containers:
      - args:
        - -P
        - http://backend:3001
        image: kvn0218/kuma-demo-fe:latest
        imagePullPolicy: IfNotPresent
        name: kuma-fe
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v0
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-demo-backend
      env: prod
      version: v0
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        env: prod
        version: v0
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST
          value: postgres
        - name: SPECIAL_OFFER
          value: "false"
        - name: REDIS_HOST
          value: redis
        image: kvn0218/kuma-demo-be:latest
        imagePullPolicy: IfNotPresent
        name: kuma-be
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v1
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      env: intg
      version: v1
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        env: intg
        version: v1
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST
          value: postgres
        - name: REDIS_HOST
          value: redis
        image: kvn0218/kuma-demo-be:latest
        imagePullPolicy: IfNotPresent
        name: kuma-be
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-demo-backend-v2
  namespace: kuma-demo
spec:
  replicas: 0
  selector:
    matchLabels:
      app: kuma-demo-backend
      env: dev
      version: v2
  template:
    metadata:
      labels:
        app: kuma-demo-backend
        env: dev
        version: v2
    spec:
      containers:
      - env:
        - name: POSTGRES_HOST
          value: postgres
        - name: TOTAL_OFFER
          value: "2"
        - name: REDIS_HOST
          value: redis
        image: kvn0218/kuma-demo-be:latest
        imagePullPolicy: IfNotPresent
        name: kuma-be
        ports:
        - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
  name: postgres-master
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_USER
          value: kumademo
        - name: POSTGRES_PASSWORD
          value: kumademo
        - name: POSTGRES_DB
          value: kumademo
        image: kvn0218/postgres:latest
        name: master
        ports:
        - containerPort: 5432
        resources:
          limits:
            cpu: 150m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis
  name: redis-master
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  template:
    metadata:
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - image: kvn0218/kuma-redis
        name: master
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: 150m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
