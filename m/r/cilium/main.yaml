apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5LQVhMV1JrQkVVYnJpUjNGRTJkbmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05USXpNREkxTVZvWERUSTJNRFl3TkRJegpNREkxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwalBUWEcvSUNRQW1MbTFWQzZiS2U5OHJlRFJGTVJIVS83T2VGb2YvbjQwQU45YUEKVzBJcUswcGV1dFJUQTZ6bFI4TEhGakQ2dWNIdHFtdlg2WFVVSnNxc3NoUGtFdnpsczQ2TVUrUHEwV0xRcnlrawoyaW5CcEp0bVptbWx1V3JPemhrOUFVcVlLK05vbE9xV01RTHN2bzNCbmZCOUZJNDR4Uy9jTEdxWGJaTE1KNERVCjNUbWF5ZzIzYkUyTEMrMFRvVnAvbHFNSEdpTDFPOFpIRVVZRzluSVhmSGFXQkhlU0JsakpnVXFiajB5K0lGOEcKbkdHYkQwRERxS2ErMEtHMVRRZDVzWGxPNmZaS1B4Z3JpZ2ZVUzZONzA5Zzl3bFFaTFNFbkNWTyt6K29wZTBnegpNSkxOQWk5WUl3MXpDbHdYeXp4TW0rV05aZnFTdU55YW5xVnRsUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ05iT1ArSXlDN2hqUm5TNC9uTS8vV2JGa0ZxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjRPMUJTN1Jkc0xzdE8zMlloUVJMRFRPOXRzT25teHF4aHF0YzYwRGJqSDdRWnZQTjVadEsxCkRqOW5uZEl2cThnRFAyaE4yNVlFN04ya3NJRzhLTlhRbFEyM0ZGV0s3WCtCMnhDR2VwdUdrUXdhSndQMzZXeVoKcVErUlNkWE0rOW53aGxPZlFxMjFMd3oyYzJVYkl2YUIxMTVvd2NlRUdUR1JReU9vaUl1ZlExTXJlTk9qQ05HbQpBaGZydEVlOEduaVBXQS8vRnJEbk5RWVR5L1VsellFRHpmeHBVdjZieUFlcEFJOGtTenpJNDhwWW55VXVGTWE4CmY4bTdSMEFNRjNzcGx6Qk1EekxvbS9uUXpJbXgwanlxWjVqTU4yenlXc3FwbmtXWi9rRVNZN012YlBnTElmQngKTHZNOEF6dVF3cWhYa3RVb05adXJYNGpDZkY4MkFOeHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGpQVFhHL0lDUUFtTG0xVkM2YktlOThyZURSRk1SSFUvN09lRm9mL240MEFOOWFBClcwSXFLMHBldXRSVEE2emxSOExIRmpENnVjSHRxbXZYNlhVVUpzcXNzaFBrRXZ6bHM0Nk1VK1BxMFdMUXJ5a2sKMmluQnBKdG1abW1sdVdyT3poazlBVXFZSytOb2xPcVdNUUxzdm8zQm5mQjlGSTQ0eFMvY0xHcVhiWkxNSjREVQozVG1heWcyM2JFMkxDKzBUb1ZwL2xxTUhHaUwxTzhaSEVVWUc5bklYZkhhV0JIZVNCbGpKZ1VxYmoweStJRjhHCm5HR2JEMEREcUthKzBLRzFUUWQ1c1hsTzZmWktQeGdyaWdmVVM2TjcwOWc5d2xRWkxTRW5DVk8reitvcGUwZ3oKTUpMTkFpOVlJdzF6Q2x3WHl6eE1tK1dOWmZxU3VOeWFucVZ0bFFJREFRQUJBb0lCQUMyMkw0U3VtbVc2cnBMeQpHOGlJNFFmSEpJRGpmUmlLdEROWE1FM2VEV3o1RU04VHlwNE42WFc0bXBrdWkwOEZUbWNvcUhyZTgrZHBrUEc2CnVoMSs1SDc3SEVzdG9DK3c1NU1Bc091ZGFQZFg4ZUhscEtuODRxdVZUOU45cmhpQWJiRE1ORVFQb01BS21EZXEKUERjMFY1K28zQzRvbWtyYUV1WnUzZ2FhdDR1UU43T0N3Y3JqYW9zWHFVa1JVeEloSjh5ZUxNbDJ3TWxkKzZqRQpVNFNuYkhZMGJSdXpwY2o4YmhtbUJUb2VNQXpsMThNNzhZOUZaWFJzVnROM1p1bXNuNVpBenZhUTVaaFBCdEVnCmxzbU9zWmpsa25LZTlrMWkrUGIxbjB6MDQrelRMc3JsQmhpNmRkOFI3ZVVsRmJyS3lYU0NPNVJMUGI0QkU4VEEKWU4zUVN3RUNnWUVBMWVSbytsQmt3Q0U5b0x0NE9vRU15WEQrcElrNUNSK3ZBVmJFcnJnOGxKNHVraUI4RTVrNQo1dVB3R2doYWhYTlRGMnJGT1l4NSs3WTh6OXFvS1Z5YzFwbXBieU1HM2dvWHJGNytUWi9xUzFVYWh5QWxLVmhVCjk1c3VuQzdxVDN6L1JZSEswR0Q5QjA3cFJGOFZqQWxDelBnYzh4K3JZUlNUUmJBRGxyMnlaRVVDZ1lFQSs1VjEKNGFJNGpqei90OVlUaUtxemtKSFN2ZERzeWl3eDU0OFRES2VXWlQwcEY3YnRNTWxTODg4UHJ4eFZraU5YZVpHSgpudUNBdUlqRFg0SzZXeGVPbFRmK21ta1dlSGdKS3RkcS9JNUQySlJuUlN1RTc0eUlpWUJ4QjJUY3p6WldZbVI2CklvdS93ZS9HVDdSbE5LMEdpUHk2bldqWld1ME5CcWsybXllT2dSRUNnWUJJT29pa3RzOCsvanFrYzRvbkgzc2sKNzA1ZVc2UnlDMHY2eE1WSVJ4aldDeENvOGVWVWJQTGJvRzl0S3hMK2E3Sk1meGE0MTFJK0NRMUNGNUdmM2hGcwplcGwzMlRreGMvRUltVStCQVJhS2QrT3NhOU9Bd2I1M211VERneWhHeld3YW1ialdZMW91eEp3TEpaek9IRFo5CnB1K0h2bE1PUm5keEdmNHNRa1RpalFLQmdRQ1hkc1FoczZpWStlQjZyVWZWWCsvN2VjK0d0K0hYVmdRMWhNM1QKTUpJN0lUYzhMOFZkT2RmWE1USWdHczdwekowOWM0R0hSV0k1dHh6b3c2dXVhK0JMdGdweXJCSDdOVWxQb2FHbgpxMzd0Uld0bkdXeFBUQ3hubkF4d2h5anBGNjJxVHhPNCtLblorS0ZNR3k5VEoxaG40TC81Uk1hWEYyQmdRais5CjZYTENBUUtCZ1FDUjZvN21hYmVQQWFCWnpBcFpuMzUrRWhHckhzazl0UmZZM2QvdEhHN1pzRENkaEFhMUlKN0IKZlhiNkhvS3l5UU5UWHViTFBqdEo5ZmhNVDJ1UUFtMFgyMmFUZjFSR29nc0NoYS9kaXR3RDFtWEdIRjFWOWFuMAo0RUtZempzQm90SVl0RUMrK2xkcmdHK0lOR3ZzZHlPNjlxOE1kTmlPMytPekJnTGJzejBoZ0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5LQVhMV1JrQkVVYnJpUjNGRTJkbmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05USXpNREkxTVZvWERUSTJNRFl3TkRJegpNREkxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwalBUWEcvSUNRQW1MbTFWQzZiS2U5OHJlRFJGTVJIVS83T2VGb2YvbjQwQU45YUEKVzBJcUswcGV1dFJUQTZ6bFI4TEhGakQ2dWNIdHFtdlg2WFVVSnNxc3NoUGtFdnpsczQ2TVUrUHEwV0xRcnlrawoyaW5CcEp0bVptbWx1V3JPemhrOUFVcVlLK05vbE9xV01RTHN2bzNCbmZCOUZJNDR4Uy9jTEdxWGJaTE1KNERVCjNUbWF5ZzIzYkUyTEMrMFRvVnAvbHFNSEdpTDFPOFpIRVVZRzluSVhmSGFXQkhlU0JsakpnVXFiajB5K0lGOEcKbkdHYkQwRERxS2ErMEtHMVRRZDVzWGxPNmZaS1B4Z3JpZ2ZVUzZONzA5Zzl3bFFaTFNFbkNWTyt6K29wZTBnegpNSkxOQWk5WUl3MXpDbHdYeXp4TW0rV05aZnFTdU55YW5xVnRsUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ05iT1ArSXlDN2hqUm5TNC9uTS8vV2JGa0ZxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjRPMUJTN1Jkc0xzdE8zMlloUVJMRFRPOXRzT25teHF4aHF0YzYwRGJqSDdRWnZQTjVadEsxCkRqOW5uZEl2cThnRFAyaE4yNVlFN04ya3NJRzhLTlhRbFEyM0ZGV0s3WCtCMnhDR2VwdUdrUXdhSndQMzZXeVoKcVErUlNkWE0rOW53aGxPZlFxMjFMd3oyYzJVYkl2YUIxMTVvd2NlRUdUR1JReU9vaUl1ZlExTXJlTk9qQ05HbQpBaGZydEVlOEduaVBXQS8vRnJEbk5RWVR5L1VsellFRHpmeHBVdjZieUFlcEFJOGtTenpJNDhwWW55VXVGTWE4CmY4bTdSMEFNRjNzcGx6Qk1EekxvbS9uUXpJbXgwanlxWjVqTU4yenlXc3FwbmtXWi9rRVNZN012YlBnTElmQngKTHZNOEF6dVF3cWhYa3RVb05adXJYNGpDZkY4MkFOeHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMGpQVFhHL0lDUUFtTG0xVkM2YktlOThyZURSRk1SSFUvN09lRm9mL240MEFOOWFBClcwSXFLMHBldXRSVEE2emxSOExIRmpENnVjSHRxbXZYNlhVVUpzcXNzaFBrRXZ6bHM0Nk1VK1BxMFdMUXJ5a2sKMmluQnBKdG1abW1sdVdyT3poazlBVXFZSytOb2xPcVdNUUxzdm8zQm5mQjlGSTQ0eFMvY0xHcVhiWkxNSjREVQozVG1heWcyM2JFMkxDKzBUb1ZwL2xxTUhHaUwxTzhaSEVVWUc5bklYZkhhV0JIZVNCbGpKZ1VxYmoweStJRjhHCm5HR2JEMEREcUthKzBLRzFUUWQ1c1hsTzZmWktQeGdyaWdmVVM2TjcwOWc5d2xRWkxTRW5DVk8reitvcGUwZ3oKTUpMTkFpOVlJdzF6Q2x3WHl6eE1tK1dOWmZxU3VOeWFucVZ0bFFJREFRQUJBb0lCQUMyMkw0U3VtbVc2cnBMeQpHOGlJNFFmSEpJRGpmUmlLdEROWE1FM2VEV3o1RU04VHlwNE42WFc0bXBrdWkwOEZUbWNvcUhyZTgrZHBrUEc2CnVoMSs1SDc3SEVzdG9DK3c1NU1Bc091ZGFQZFg4ZUhscEtuODRxdVZUOU45cmhpQWJiRE1ORVFQb01BS21EZXEKUERjMFY1K28zQzRvbWtyYUV1WnUzZ2FhdDR1UU43T0N3Y3JqYW9zWHFVa1JVeEloSjh5ZUxNbDJ3TWxkKzZqRQpVNFNuYkhZMGJSdXpwY2o4YmhtbUJUb2VNQXpsMThNNzhZOUZaWFJzVnROM1p1bXNuNVpBenZhUTVaaFBCdEVnCmxzbU9zWmpsa25LZTlrMWkrUGIxbjB6MDQrelRMc3JsQmhpNmRkOFI3ZVVsRmJyS3lYU0NPNVJMUGI0QkU4VEEKWU4zUVN3RUNnWUVBMWVSbytsQmt3Q0U5b0x0NE9vRU15WEQrcElrNUNSK3ZBVmJFcnJnOGxKNHVraUI4RTVrNQo1dVB3R2doYWhYTlRGMnJGT1l4NSs3WTh6OXFvS1Z5YzFwbXBieU1HM2dvWHJGNytUWi9xUzFVYWh5QWxLVmhVCjk1c3VuQzdxVDN6L1JZSEswR0Q5QjA3cFJGOFZqQWxDelBnYzh4K3JZUlNUUmJBRGxyMnlaRVVDZ1lFQSs1VjEKNGFJNGpqei90OVlUaUtxemtKSFN2ZERzeWl3eDU0OFRES2VXWlQwcEY3YnRNTWxTODg4UHJ4eFZraU5YZVpHSgpudUNBdUlqRFg0SzZXeGVPbFRmK21ta1dlSGdKS3RkcS9JNUQySlJuUlN1RTc0eUlpWUJ4QjJUY3p6WldZbVI2CklvdS93ZS9HVDdSbE5LMEdpUHk2bldqWld1ME5CcWsybXllT2dSRUNnWUJJT29pa3RzOCsvanFrYzRvbkgzc2sKNzA1ZVc2UnlDMHY2eE1WSVJ4aldDeENvOGVWVWJQTGJvRzl0S3hMK2E3Sk1meGE0MTFJK0NRMUNGNUdmM2hGcwplcGwzMlRreGMvRUltVStCQVJhS2QrT3NhOU9Bd2I1M211VERneWhHeld3YW1ialdZMW91eEp3TEpaek9IRFo5CnB1K0h2bE1PUm5keEdmNHNRa1RpalFLQmdRQ1hkc1FoczZpWStlQjZyVWZWWCsvN2VjK0d0K0hYVmdRMWhNM1QKTUpJN0lUYzhMOFZkT2RmWE1USWdHczdwekowOWM0R0hSV0k1dHh6b3c2dXVhK0JMdGdweXJCSDdOVWxQb2FHbgpxMzd0Uld0bkdXeFBUQ3hubkF4d2h5anBGNjJxVHhPNCtLblorS0ZNR3k5VEoxaG40TC81Uk1hWEYyQmdRais5CjZYTENBUUtCZ1FDUjZvN21hYmVQQWFCWnpBcFpuMzUrRWhHckhzazl0UmZZM2QvdEhHN1pzRENkaEFhMUlKN0IKZlhiNkhvS3l5UU5UWHViTFBqdEo5ZmhNVDJ1UUFtMFgyMmFUZjFSR29nc0NoYS9kaXR3RDFtWEdIRjFWOWFuMAo0RUtZempzQm90SVl0RUMrK2xkcmdHK0lOR3ZzZHlPNjlxOE1kTmlPMytPekJnTGJzejBoZ0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5LQVhMV1JrQkVVYnJpUjNGRTJkbmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05USXpNREkxTVZvWERUSTJNRFl3TkRJegpNREkxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwalBUWEcvSUNRQW1MbTFWQzZiS2U5OHJlRFJGTVJIVS83T2VGb2YvbjQwQU45YUEKVzBJcUswcGV1dFJUQTZ6bFI4TEhGakQ2dWNIdHFtdlg2WFVVSnNxc3NoUGtFdnpsczQ2TVUrUHEwV0xRcnlrawoyaW5CcEp0bVptbWx1V3JPemhrOUFVcVlLK05vbE9xV01RTHN2bzNCbmZCOUZJNDR4Uy9jTEdxWGJaTE1KNERVCjNUbWF5ZzIzYkUyTEMrMFRvVnAvbHFNSEdpTDFPOFpIRVVZRzluSVhmSGFXQkhlU0JsakpnVXFiajB5K0lGOEcKbkdHYkQwRERxS2ErMEtHMVRRZDVzWGxPNmZaS1B4Z3JpZ2ZVUzZONzA5Zzl3bFFaTFNFbkNWTyt6K29wZTBnegpNSkxOQWk5WUl3MXpDbHdYeXp4TW0rV05aZnFTdU55YW5xVnRsUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ05iT1ArSXlDN2hqUm5TNC9uTS8vV2JGa0ZxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjRPMUJTN1Jkc0xzdE8zMlloUVJMRFRPOXRzT25teHF4aHF0YzYwRGJqSDdRWnZQTjVadEsxCkRqOW5uZEl2cThnRFAyaE4yNVlFN04ya3NJRzhLTlhRbFEyM0ZGV0s3WCtCMnhDR2VwdUdrUXdhSndQMzZXeVoKcVErUlNkWE0rOW53aGxPZlFxMjFMd3oyYzJVYkl2YUIxMTVvd2NlRUdUR1JReU9vaUl1ZlExTXJlTk9qQ05HbQpBaGZydEVlOEduaVBXQS8vRnJEbk5RWVR5L1VsellFRHpmeHBVdjZieUFlcEFJOGtTenpJNDhwWW55VXVGTWE4CmY4bTdSMEFNRjNzcGx6Qk1EekxvbS9uUXpJbXgwanlxWjVqTU4yenlXc3FwbmtXWi9rRVNZN012YlBnTElmQngKTHZNOEF6dVF3cWhYa3RVb05adXJYNGpDZkY4MkFOeHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9oSGtyMlNkVlJUak5DUUsxZFZZM0V3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05USXpNREkxTVZvWERUSTJNRFl3TkRJegpNREkxTVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTE3MUVTYmU3ZnU1VFZGRTZqVHptOUVkMk5VSVgKQ09VbElCOWJNbmJESDl4aUNxOE4wQUZKMjVSd2lUN0JrY2VvN1BnTGJtYUFqMlU5VUtGQjFpTjZyRWdBSUEwYwp3M2FaOUpmN3BlTFplVXM4WUt1b0h2ZFIyWFI4WHhvM2wyakxrNWVIMVdvdUpVZkxaeW1ZMGZVYlVqQTdlQStxCjRwMWY1aCsvbmczTnhISWdUSElmNTJWNzRXdi95a0g2M3E4SXplcEhMMGJ6RUVqQ0w3YWx3alZ5aGxRd1hWeFgKa3lGZm1uOW15R1grbk5mZUVmeFpIWVUwSzRNUExHK1ZsTHE0ZFVLdnNETmJFdmlrK09aTUV2d2FLc2p5cTRJTQpVSURiUzljMGhwTTJMMEJKQnNJb3ZDYlhXZEVmeWNvUzVKeGhBdUtvSVJjZFZBOWRudW5CM2lMd2N3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWpXemovaU1ndTRZMFowdVA1elAvMQpteFpCYWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTXBFekw0Qy96aFBkRXhJL1BkNlJOQzZpaFVaRTU2QUwwSWI0WlJaSFBSUU9Bak0KU05KaFpTZG5qV3ViTlcwTmFKNVdSM0xyZEp5cnB4K1A0aThqbi9PTm1VYlMwK3pqM1lGY0lCRTZtRncrTU9SSwprcncyaEtzeTIyR0cyQnkyMk41VWFqQXBQaUs2Nk1oS25pUVBVWlNiS1MzUTVvMWRKU0lwY0JQem5jSHNYNTRzClZVZjc3TkMvZUU5K1BsakNZQS9KZ2dsN05Wd1B3TkxYSEFHV0ZxckoxWElQcXZNTXk1dm9ZS2tuOXBaclJtckMKVC9NcDZMQ2JxQnBESTVqN0RUem1IbkJNNjdFSlhvRnNqOCtmWWwvcGVzN0x0QXdSRzVPTlh2eWpvVFJQMUdUVwpvWnltUW0rcG85SDVpQW5iK1BiT3lsZFdWK21aTXB6d1hpaVhEU0U9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMTcxRVNiZTdmdTVUVkZFNmpUem05RWQyTlVJWENPVWxJQjliTW5iREg5eGlDcThOCjBBRkoyNVJ3aVQ3QmtjZW83UGdMYm1hQWoyVTlVS0ZCMWlONnJFZ0FJQTBjdzNhWjlKZjdwZUxaZVVzOFlLdW8KSHZkUjJYUjhYeG8zbDJqTGs1ZUgxV291SlVmTFp5bVkwZlViVWpBN2VBK3E0cDFmNWgrL25nM054SElnVEhJZgo1MlY3NFd2L3lrSDYzcThJemVwSEwwYnpFRWpDTDdhbHdqVnlobFF3WFZ4WGt5RmZtbjlteUdYK25OZmVFZnhaCkhZVTBLNE1QTEcrVmxMcTRkVUt2c0ROYkV2aWsrT1pNRXZ3YUtzanlxNElNVUlEYlM5YzBocE0yTDBCSkJzSW8KdkNiWFdkRWZ5Y29TNUp4aEF1S29JUmNkVkE5ZG51bkIzaUx3Y3dJREFRQUJBb0lCQUJLNk9raFA2N1c4Q0gzRQpRMW5wVkg4V0NQdmNqZFZXMXQ4dithR3F6NHRmZlI5Q1RPZW1oUHZMcWUwd0JtdWFNbDdIdFc1UzlZdjlGTkovCi9SQVNxbDUwTFphYXJNbUc3UnhmYVJmZ1ZsS0NKbTZaMkJGQUZOblVrOHRKb2xQQlpCS2V6OHJGMmRXZ290YUUKdE9CYzc0ODE0cU9zY0lBVmV6S2x4T042ZlVjMUhCVWxHTXdFMVFJbGk0OTFleVFOWWFVbDdCdWlidEczZjVoNQpsV1FyK2hBdVFWdU1PK0pmdVVQMFlpazJPRXR3cXFabFJEZ2huNHIxVmVFMlhlMlRwM2FmV0RyakVlS2JwekxPClJoamFWeG1FUHFBekFOM0RFTU54dFQ2SWJndzMyaU44by9RZ1dBcklDc1dCVHE2Q0h1WXZRd2YxMEZueTVFQVUKM2dSOVlxRUNnWUVBKzZadGpwbWp6dkxvKzNvL21FQlY3WTkzQVZQSVd2WGFNVnZ2RVQvVXdzQlFxYy9tMno4cQpTRUNEaythUGtFRmcyZGtVYVlpejdLa0RJWWVnZ3YybG04UEZoajdhL0xFZklkMXlxTmFnV1VhQkJ0T1N1eTlZCjZpbGMvNnY5Y0MyZmxJNWJ6TTNwUEZhSkF5RkdsU2NmWWVaRzR2enoydlA5SVJueG04TUdzOUVDZ1lFQTIzZnUKUUNwRTJNTUVpWm1KT0hteC9ra2ljV1E0OWNqaEV3NVF2bE1SS1ovQUREVjFndDdab2cyaXoyOTZTNHNUWW1jVQpML1VJWDNmWEpOVkRCMjdUdWY5dm43Q2xQTWhKMXJIb1V5R3pBa2dwMnY1cy94dFBLRk5leFdGVHU4NnhlVHg0CmtGMTNEOU1zZ0txcmlEQXpMZnl5WlJwaFFRazJSWkRBK2JoL3hRTUNnWUVBNFFKcnZYREZGbHIrVlRWMnZZVHgKRUN3U1JYNkxqRUY5NmxxQWhaVGtnWXFCMVlTT3NBVm5vaGtGVFc1L2VZWHJ1bjR1a1RwcFhyZTBrL3Q0V3dlLwpWMnFTS0RuMWhySTgyd1B0N09lVGtwL0c2THF1M1c0MWU1S21rL2xOOEVyckFHTFYxR2RkSDlWa1J3Y3UzRmlSCjUvQ0YrNW9mMU93S3J0bEt2bktBZ0xFQ2dZRUFuTjZ3a1hTbEdUcnI5MTZqVXBiSnZ6U1BSZldaTVRXUWk0cGoKOUdaemtnajV3TUJGYW5IWHBabVJraXZnZ2phNmVFK3Rna25tM2paT3Rha3A3Qm92aEhjc1ZqeHhIMjBhT2plWQpGRE8yUEI5UXE1UElYT0FzU0dxdkJ1NTJaM3RxSjNvdHd5TExnNmd4MnhZaTNZbDJTNXlmOXR4UVA2aFIvbzlsCklCbmNXZmtDZ1lFQWxqYS9lTzNvbnFxSVpvU0JBQldWRVRVazFkQVZzRDZRRUpzMUNOOERYWjJjd2Y1Q1FMZkoKZjB5T1Y1Z1VFaHBJZS9relBaTlRLT2ZjZ2k4aFU2STBwNDkxNWcyQUErUlc3K0ZiMUdGQ2w5LzR3cmJmUk9Vegp6U25Jak1EZ1luSzdibE5VR2JLZlJCWVhKaUs2QkNDaG1jYmRkbDVGdkFmUkRpamx3ZFZzT1lRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU5LQVhMV1JrQkVVYnJpUjNGRTJkbmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05USXpNREkxTVZvWERUSTJNRFl3TkRJegpNREkxTVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwalBUWEcvSUNRQW1MbTFWQzZiS2U5OHJlRFJGTVJIVS83T2VGb2YvbjQwQU45YUEKVzBJcUswcGV1dFJUQTZ6bFI4TEhGakQ2dWNIdHFtdlg2WFVVSnNxc3NoUGtFdnpsczQ2TVUrUHEwV0xRcnlrawoyaW5CcEp0bVptbWx1V3JPemhrOUFVcVlLK05vbE9xV01RTHN2bzNCbmZCOUZJNDR4Uy9jTEdxWGJaTE1KNERVCjNUbWF5ZzIzYkUyTEMrMFRvVnAvbHFNSEdpTDFPOFpIRVVZRzluSVhmSGFXQkhlU0JsakpnVXFiajB5K0lGOEcKbkdHYkQwRERxS2ErMEtHMVRRZDVzWGxPNmZaS1B4Z3JpZ2ZVUzZONzA5Zzl3bFFaTFNFbkNWTyt6K29wZTBnegpNSkxOQWk5WUl3MXpDbHdYeXp4TW0rV05aZnFTdU55YW5xVnRsUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ05iT1ArSXlDN2hqUm5TNC9uTS8vV2JGa0ZxTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQjRPMUJTN1Jkc0xzdE8zMlloUVJMRFRPOXRzT25teHF4aHF0YzYwRGJqSDdRWnZQTjVadEsxCkRqOW5uZEl2cThnRFAyaE4yNVlFN04ya3NJRzhLTlhRbFEyM0ZGV0s3WCtCMnhDR2VwdUdrUXdhSndQMzZXeVoKcVErUlNkWE0rOW53aGxPZlFxMjFMd3oyYzJVYkl2YUIxMTVvd2NlRUdUR1JReU9vaUl1ZlExTXJlTk9qQ05HbQpBaGZydEVlOEduaVBXQS8vRnJEbk5RWVR5L1VsellFRHpmeHBVdjZieUFlcEFJOGtTenpJNDhwWW55VXVGTWE4CmY4bTdSMEFNRjNzcGx6Qk1EekxvbS9uUXpJbXgwanlxWjVqTU4yenlXc3FwbmtXWi9rRVNZN012YlBnTElmQngKTHZNOEF6dVF3cWhYa3RVb05adXJYNGpDZkY4MkFOeHcKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUlRdkk2OWRaUk9CYnZFQkpPWHBoOG93RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05USXpNREkxTVZvWERUSTJNRFl3TkRJegpNREkxTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1UU3RkMWFUejJjNEdMYllrQnQKNmo5a0w5YnVwRVRsZHBOb1hGcEJ2RlRKeUtLYk1HMTMrMXQ4K2JwdDUyNlFHUDdPZlN4NnhBU0ExZ1Q0T0RmVgpVNkJhWVFlZEltdzJBcktFTW8yR3MxeXlQYktqcFVXSUx5TlRmbmNHRmxDeHBFMTdtWFBzdUs2YWtpQ0FXbmw4CnFWd0pWYU8xbmlrNXdlcHpEWEJRY1dDeG9LYVAyOGkwakJ0cGNzRW5YMm1HS1ZXN1UxVTZtdExhYU8wSW9ZUnAKdDFnWVlNNlNRKzFTb1NTWDJTVWVCcVZsbG1qSklyNS9pT0VVanZzdjVvVldPVFVGZEJlb2txSDd4NXlqMWRwSwpVdG5NS013bFNYQ1lET1pUYlEyUmU5Q3ZFd1RNVHRDRlQ3OEo3d1RLYzZmMEJuYjFhSXVWV3JFSzkwTC9hN0VkCjdsRUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUkxczQvNGpJTHVHTgpHZExqK2N6Lzlac1dRV293S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWhOZS9oNkVGM3JSVmIyNTNBZkE5OVJqU3ZmUkQKV1hwZXNMUjJjK2hEQ2RBWERFOE9YVG5jVkVNWmI3dDNpdExwcnNxZDZaWGxocHBKd0ZTYmZaQi9tTjd3T1FsQQpUY1R2SkI1Y0lWc1g3QmdaZ2FNZnNQNi9yK1MvS0lURWZDRDlvNVozMmhwUTNaNjlhelV4ZE9JdktONkJJeGRpClB6UVFFNEtWTFIybk05RkdzMGIvblFQYmp2VlhXaDJzeHJFVEtxRGUxQSs2N3BONnRrV0l6RW10QkltSE8wdDUKWFFZaytMeVpzNlN2RXVFSWtUM0NMVDJvU1U5dXBRY1haMENIRG1MOGlRRWdzMWVhMkQrdi95WTFEUENnK1BnWgpXVThwUE93Y3dEakNReUFkVEhlM3VzWmZSbTFCTCtpZUtLTmdTYjBVbFMzeUU1QW82aDVtSHNscmlnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeE5LMTNWcFBQWnpnWXR0aVFHM3FQMlF2MXU2a1JPVjJrMmhjV2tHOFZNbklvcHN3CmJYZjdXM3o1dW0zbmJwQVkvczU5TEhyRUJJRFdCUGc0TjlWVG9GcGhCNTBpYkRZQ3NvUXlqWWF6WExJOXNxT2wKUllndkkxTitkd1lXVUxHa1RYdVpjK3k0cnBxU0lJQmFlWHlwWEFsVm83V2VLVG5CNm5NTmNGQnhZTEdncG8vYgp5TFNNRzJseXdTZGZhWVlwVmJ0VFZUcWEwdHBvN1FpaGhHbTNXQmhnenBKRDdWS2hKSmZaSlI0R3BXV1dhTWtpCnZuK0k0UlNPK3kvbWhWWTVOUVYwRjZpU29mdkhuS1BWMmtwUzJjd296Q1ZKY0pnTTVsTnREWkY3MEs4VEJNeE8KMElWUHZ3bnZCTXB6cC9RR2R2Vm9pNVZhc1FyM1F2OXJzUjN1VVFJREFRQUJBb0lCQUZhWVprK0hSa25UVlozbwo2K2R3OUprRFdWRDFHZXorRUJkMjJQc1U1T2xoQmhjVXRFL1ZkQStpZ3JVVldiZDVTcVlBNzIyOGJiV1ZnWlFhCktaSFhGNzM3UmFsMTV3azVFaUs4cXdrOWRIaWFLeThIZE5XTXYwQ0pvYUI0V3lVUm96bzc0UjN4enFkemRrczYKYlpQNTF3R1pVY1ovUjZEWHVvdU9KeUY5SXdUcEcvWkZOTWhQOUhLNkN0R0haeFloWXBTRDJnL01Vbis3TTAzRQo2SUpWODRSYjFqY0ZDQVlNV0dCSjJpUzJqTzZ0eFFiSGgyMTAzWVRhZlZXd3YyL09odXZQQi9pL01NcGF4YjArCkZDT1ZtbCs5QUUrcEZXWFdHSmJFRzJJU3pNT1VBcTBIa0c3eHl0dkdiMkFGYjJ6ekhnUVBYa2tETTRxUm05SDQKQ09JVmFBRUNnWUVBN1JwWmNLVXQ0Z3IrSjJHTkRENjQvWWpmY0NRR3JySFJFS2kxSlpYTGM2VDF2bjN6Um9uTQpmRjBzM0I4NjFNcm1BVVlNa25TVVlxdEZlbFNxMVEvL2hSZXN6Y3owbVhWQVF3ME5oSys3VTNmdS80QjV0MkpNCkc4aEJTSG90b0x2cktKeDlEZy90K0FtRE0xczVhTU5FZmZobG9lREF4MURzcHFWaDQ4cm93MEVDZ1lFQTFJS0cKVlNSeFhmem1hQTMwZlE5R01mc0JTOFBqY2lPbVFLalQ2cXVaay9VeVJjL2tEZmJMdGdxMjEzWmFYU2JHZ1lKdwozVThlWXdNVDNtL3p6clNmMGRZbzNqRTJNQ3Z2OCs1MnBQYXhkc1JtNnhIZ2pDY0V4TTU2aUt0WHBrQlEzZk5nCitxQktIcmFyUkREQ2dBeWlPWW1CV3J6dDIwSFFxVEMvNW9ZMk54RUNnWUFDeElUNHdLVFpkNkZoMmt5b01PODkKM21RbFRmWmFBYTljRDJ3VjVUcTd2ZGcwZ2duZDcrdllJOHBMUTM0UFQ5TUJmc3pVeE5HYW1UODFYMW1qSlEycApndzQ4Vk1FaUxYRXpseXBxT3hibnNZV3pxODgvNmNEVHJqRzg0OWcyZ1JzTW5VOEVaQUUySFA1UUVpZUlab2NkCkpWSWlZcG85ZVY5WnpxSm00MDUyUVFLQmdDWHZZdkdCL3ViTFJZb2ZxNXhEaE1GWlVHTHBCZ29UQ1JPVHo3aWQKaDEzZE1Hczc4RGI1N21XQnhoL3lWYkU1UWNoT3M3MGQ2WXU5T2VmRVRsNkE2ZUs0ZXpVbXpjaU5uMWtKSVk3VApKdHpQdEp1VDVtUytkbUIzaDNJc1BBcEdndWtNRUN6TlBrMzdSOWwxWnRNYTdqNmRLRVU5WXF4NE5EcHZwR0lQClpWQXhBb0dBTUZkUEJyZEZFM1ZDQ2phanEyaEN0UEJDaytxYlBKTGw0WXM3UXNkRVlvVkxicDNwY1FYSjZwa2kKNmlKcDZsT2ZqVjQ3RllkZXVYaW9hbUh4VjRITDRVc2Jqb3Fva0hISlhPc09yQ0pyazYraDgxU0llMSt3NHcvdQpkREkvL09RL0hpeTlHc01EZTV1RmJFWDQxV0VnN1JwL0xzUi91YUdRK1RvSFZobVY3ekE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
