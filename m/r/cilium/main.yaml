apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlYdFpic0d3cEJlY2hrMGFmRlJuODR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBOVGN4T1ZvWERUSTJNRFV3TlRBMApOVGN4T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsWmJJS0VIbHBwaks1Y3lCSXZ2alhrOXc4RUQ4UVQ4a0dNaDFGT1crMUZnaVJYMTIKNWtWV0tOemhJSmdicHpCb0R6dG1TcHB3QXF6MFc4UTJSeWNGajJqK1VMMU5FV1BaMlEva2haZWN0OWcxZnloQgpZSS9HY3JwNnhPU1V6VnlpdjVaUjFJZjV4eHZ2YTgrWjNBRkR2NjFWeWovcDZ6YW5qK1dBWEozV3h1cllIdGVUCmNYQ0RBb0ozYmhucjQzWTRWZXduaURJeXF4cXZQNG9ORDdtZlRsSkZuUnk2OWtUblRpOUJSWVY5OGx6YlhDelQKb1NwY3lleWhXRmtobitmeW80SjJMM0k1Ylk4M2FQQzI5VlljRC9LMExWdEFhTC9vNzBaT1BHTlJ3ZkFESmNndgo4VFgreERhMk1hdis4ck92Z2o1cFNXbjJPaFZSTy9mNi9RMFpwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR3pYV2pXTnlJeFgvSTJ4Z25MKzYvc3lyUHpwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1welBNQ3Q4dEFDZGV3aE1aQkZlTlJGZC96SlhLbk5KckRzK2Z6YXowUDU2Q0w1T1NQYy8zCjlMZzNwOUdzR0dsSUEwT3F4UzlSZWtNOVFBV2NIT1VUUjFFY0NNVzd5elgrdHhaN0taN1BnZW5mcFk0VFJmVzEKVHVxT2VQeWZLb05UbWhhY2Y4ZjFmd3RUc2NCcXArcndteHltWGZlQzNTdW0zQlVmWTBXVHF0MlErTUdNWUsyKwpCdWQyeEoxaGdqckNNNi9DQ3VZbm1ieTYwZnByMjYrVVZGMmd6b0RyZ1pQZGM3TkFTZmFJSUEyOENPUm90NFVMCi90MGQrY0hzMDZ6d1lxUzJzN1F6Vkd5YUV2U3ZvaVEzWWw4TldjM2tDc1ZEL0lKaU43Z1lWWHJKWEtWYXBURlAKWTZZbTlhT3lXVk45Z2JVNUVGTUpoc1FONXdkWkJjS2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbFpiSUtFSGxwcGpLNWN5Qkl2dmpYazl3OEVEOFFUOGtHTWgxRk9XKzFGZ2lSWDEyCjVrVldLTnpoSUpnYnB6Qm9EenRtU3Bwd0FxejBXOFEyUnljRmoyaitVTDFORVdQWjJRL2toWmVjdDlnMWZ5aEIKWUkvR2NycDZ4T1NVelZ5aXY1WlIxSWY1eHh2dmE4K1ozQUZEdjYxVnlqL3A2emFuaitXQVhKM1d4dXJZSHRlVApjWENEQW9KM2JobnI0M1k0VmV3bmlESXlxeHF2UDRvTkQ3bWZUbEpGblJ5NjlrVG5UaTlCUllWOThsemJYQ3pUCm9TcGN5ZXloV0ZraG4rZnlvNEoyTDNJNWJZODNhUEMyOVZZY0QvSzBMVnRBYUwvbzcwWk9QR05Sd2ZBREpjZ3YKOFRYK3hEYTJNYXYrOHJPdmdqNXBTV24yT2hWUk8vZjYvUTBacFFJREFRQUJBb0lCQUJNVmhubWtWcEVYZ3lNbwpJUDErbHpaTCtrT2NkdEk0SlBuSWNTOTJWQTh4STBZc1NJUCtLb3pTQ1NLb1pUYkNOVFJrUnB1VDhtQlZBbVBHCnQ0b0NUM0pKV2RDaEpmam0vVDcxQ1JtR0N5ZGxQUVg0ODhaRzhYRm5td3dOZ1hKbHRCbXZLc2RyaFpGQ1hod3EKQXg0UFJ6NW45Yjcwd25vUW9mWDR1SlNZU25OY0JzSHZpdDJXMXl5RGNQaEQvUzB3K3dseFpLZlRzeDBhSk5CKwpRNHIwVG1NM3VPSkVlYm53MXlJUHUzZnNhSm9wa3dmcDUramN2alNSYjdFeHc5cktkeDJOK0tnemJZWXBqY0FNCm15SGxYZS94b3B4Vm5aL2c3eVM0S0VBc2dSaUY1SDJReXIwNjMreGdOVld5VHBZdTEzWTA1Tm0wNHYvTU9vSjQKamJRc0xxRUNnWUVBdzdnNVE2MGJTS2VTem9OTVNTTmYxZmdna1RFUi94akk4SW05bnkwc2VnQ2wyaElNemUyRwowM1NUam1mdGtkcFpBWHFTbHRScXNYdlFRVHUzb0RVdzM5MlB4bkpxalBqRm1VTHRtU1RCM3Rmbks2VDA0Z3pGCldwekJieG5kMWpPRXdIcDR1bEZHWm4wY3gwUyt2Nk1taGZ4Y2VsQjBDNnd0c2s0aGtpOXRNWGtDZ1lFQXc2bFQKbStGT2ozYWdmeUhUWU9KL1plK09XUGwwRVNISi9Gc2lubWlLdDJYcmZhT1RsY0pWWkNKa1lyOTRBSGZZVmlWcwpqM0loQ0k4ZjQzblJzb0w4VmJ3bHdGdmdGN0czT0FTUTU0c3V2cEpwc3NsODBDY05tWkhqeWhjRU5DZEw5OUxzCkFIS2FHbzBYUDJ5T0U2b2pVMURIaWVuZnNrRy8vY05tQ09KaktvMENnWUVBaVlWTGIxc1YzYklwUEVRVGVSeUsKL1V5UWpaUmVJZEZuZDJSQlFiUTdHU3FWWHFucUoxUHJ0VzZuTTV1ZzJTZ0QvRDhFKzBnY0E4T01yQmxxeC80Mwo3a1MrL21Cc3I4c3BCS3g3U0cwRWNERmlORTkrNWNxMWJSclI2OS9QK085UUt2S2pHNzk1NlErbUJmb3UwWGF3CjNkcFpuSFFsWmdKQVJaWVNqcVlXWW5rQ2dZRUFzamthbjNLclRLS1JyenZ3ZnQvUmk5aVpvUklZVjBLZjZlNVoKcWxFdmliNmNzdVM5R2p6WjYwd29oSXBEbEttVnRXS0JjR2hWRHFiUU5UUlJmbmt4d0NhUmZKWXptV0dYc3I3MQovdk1Zc1I1TWlUNWZJbnR3TitKYnkwa0wyeld3VFIwak80VW9PZWNxdGVyN3Y0M0tmNm1sR0VxZ0tJOGJndHJwCnBrNFFaa0VDZ1lBcUpWbzF2dm1UTTg4ZFVFOVVWQUFqNzgzU3dSNUJ3cnVvOVJCWEtVZ2dzejZ0N21XSGlTUUYKV3p4Nlo4Z3E3TTVrbUtVM2hZcmwrcC9KZ2V5aXFTdjUyRUtoeDZKbXc3c1FvcDhTbGdFbGkyUFArVmc3WjFQSwpSTXJOWjBpY01uc3gwNGN2VHlXazFhczJlM2pZa2xyTytxTXgvSUJURE90elM0QUdRRWM4ZXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlYdFpic0d3cEJlY2hrMGFmRlJuODR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBOVGN4T1ZvWERUSTJNRFV3TlRBMApOVGN4T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsWmJJS0VIbHBwaks1Y3lCSXZ2alhrOXc4RUQ4UVQ4a0dNaDFGT1crMUZnaVJYMTIKNWtWV0tOemhJSmdicHpCb0R6dG1TcHB3QXF6MFc4UTJSeWNGajJqK1VMMU5FV1BaMlEva2haZWN0OWcxZnloQgpZSS9HY3JwNnhPU1V6VnlpdjVaUjFJZjV4eHZ2YTgrWjNBRkR2NjFWeWovcDZ6YW5qK1dBWEozV3h1cllIdGVUCmNYQ0RBb0ozYmhucjQzWTRWZXduaURJeXF4cXZQNG9ORDdtZlRsSkZuUnk2OWtUblRpOUJSWVY5OGx6YlhDelQKb1NwY3lleWhXRmtobitmeW80SjJMM0k1Ylk4M2FQQzI5VlljRC9LMExWdEFhTC9vNzBaT1BHTlJ3ZkFESmNndgo4VFgreERhMk1hdis4ck92Z2o1cFNXbjJPaFZSTy9mNi9RMFpwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR3pYV2pXTnlJeFgvSTJ4Z25MKzYvc3lyUHpwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1welBNQ3Q4dEFDZGV3aE1aQkZlTlJGZC96SlhLbk5KckRzK2Z6YXowUDU2Q0w1T1NQYy8zCjlMZzNwOUdzR0dsSUEwT3F4UzlSZWtNOVFBV2NIT1VUUjFFY0NNVzd5elgrdHhaN0taN1BnZW5mcFk0VFJmVzEKVHVxT2VQeWZLb05UbWhhY2Y4ZjFmd3RUc2NCcXArcndteHltWGZlQzNTdW0zQlVmWTBXVHF0MlErTUdNWUsyKwpCdWQyeEoxaGdqckNNNi9DQ3VZbm1ieTYwZnByMjYrVVZGMmd6b0RyZ1pQZGM3TkFTZmFJSUEyOENPUm90NFVMCi90MGQrY0hzMDZ6d1lxUzJzN1F6Vkd5YUV2U3ZvaVEzWWw4TldjM2tDc1ZEL0lKaU43Z1lWWHJKWEtWYXBURlAKWTZZbTlhT3lXVk45Z2JVNUVGTUpoc1FONXdkWkJjS2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbFpiSUtFSGxwcGpLNWN5Qkl2dmpYazl3OEVEOFFUOGtHTWgxRk9XKzFGZ2lSWDEyCjVrVldLTnpoSUpnYnB6Qm9EenRtU3Bwd0FxejBXOFEyUnljRmoyaitVTDFORVdQWjJRL2toWmVjdDlnMWZ5aEIKWUkvR2NycDZ4T1NVelZ5aXY1WlIxSWY1eHh2dmE4K1ozQUZEdjYxVnlqL3A2emFuaitXQVhKM1d4dXJZSHRlVApjWENEQW9KM2JobnI0M1k0VmV3bmlESXlxeHF2UDRvTkQ3bWZUbEpGblJ5NjlrVG5UaTlCUllWOThsemJYQ3pUCm9TcGN5ZXloV0ZraG4rZnlvNEoyTDNJNWJZODNhUEMyOVZZY0QvSzBMVnRBYUwvbzcwWk9QR05Sd2ZBREpjZ3YKOFRYK3hEYTJNYXYrOHJPdmdqNXBTV24yT2hWUk8vZjYvUTBacFFJREFRQUJBb0lCQUJNVmhubWtWcEVYZ3lNbwpJUDErbHpaTCtrT2NkdEk0SlBuSWNTOTJWQTh4STBZc1NJUCtLb3pTQ1NLb1pUYkNOVFJrUnB1VDhtQlZBbVBHCnQ0b0NUM0pKV2RDaEpmam0vVDcxQ1JtR0N5ZGxQUVg0ODhaRzhYRm5td3dOZ1hKbHRCbXZLc2RyaFpGQ1hod3EKQXg0UFJ6NW45Yjcwd25vUW9mWDR1SlNZU25OY0JzSHZpdDJXMXl5RGNQaEQvUzB3K3dseFpLZlRzeDBhSk5CKwpRNHIwVG1NM3VPSkVlYm53MXlJUHUzZnNhSm9wa3dmcDUramN2alNSYjdFeHc5cktkeDJOK0tnemJZWXBqY0FNCm15SGxYZS94b3B4Vm5aL2c3eVM0S0VBc2dSaUY1SDJReXIwNjMreGdOVld5VHBZdTEzWTA1Tm0wNHYvTU9vSjQKamJRc0xxRUNnWUVBdzdnNVE2MGJTS2VTem9OTVNTTmYxZmdna1RFUi94akk4SW05bnkwc2VnQ2wyaElNemUyRwowM1NUam1mdGtkcFpBWHFTbHRScXNYdlFRVHUzb0RVdzM5MlB4bkpxalBqRm1VTHRtU1RCM3Rmbks2VDA0Z3pGCldwekJieG5kMWpPRXdIcDR1bEZHWm4wY3gwUyt2Nk1taGZ4Y2VsQjBDNnd0c2s0aGtpOXRNWGtDZ1lFQXc2bFQKbStGT2ozYWdmeUhUWU9KL1plK09XUGwwRVNISi9Gc2lubWlLdDJYcmZhT1RsY0pWWkNKa1lyOTRBSGZZVmlWcwpqM0loQ0k4ZjQzblJzb0w4VmJ3bHdGdmdGN0czT0FTUTU0c3V2cEpwc3NsODBDY05tWkhqeWhjRU5DZEw5OUxzCkFIS2FHbzBYUDJ5T0U2b2pVMURIaWVuZnNrRy8vY05tQ09KaktvMENnWUVBaVlWTGIxc1YzYklwUEVRVGVSeUsKL1V5UWpaUmVJZEZuZDJSQlFiUTdHU3FWWHFucUoxUHJ0VzZuTTV1ZzJTZ0QvRDhFKzBnY0E4T01yQmxxeC80Mwo3a1MrL21Cc3I4c3BCS3g3U0cwRWNERmlORTkrNWNxMWJSclI2OS9QK085UUt2S2pHNzk1NlErbUJmb3UwWGF3CjNkcFpuSFFsWmdKQVJaWVNqcVlXWW5rQ2dZRUFzamthbjNLclRLS1JyenZ3ZnQvUmk5aVpvUklZVjBLZjZlNVoKcWxFdmliNmNzdVM5R2p6WjYwd29oSXBEbEttVnRXS0JjR2hWRHFiUU5UUlJmbmt4d0NhUmZKWXptV0dYc3I3MQovdk1Zc1I1TWlUNWZJbnR3TitKYnkwa0wyeld3VFIwak80VW9PZWNxdGVyN3Y0M0tmNm1sR0VxZ0tJOGJndHJwCnBrNFFaa0VDZ1lBcUpWbzF2dm1UTTg4ZFVFOVVWQUFqNzgzU3dSNUJ3cnVvOVJCWEtVZ2dzejZ0N21XSGlTUUYKV3p4Nlo4Z3E3TTVrbUtVM2hZcmwrcC9KZ2V5aXFTdjUyRUtoeDZKbXc3c1FvcDhTbGdFbGkyUFArVmc3WjFQSwpSTXJOWjBpY01uc3gwNGN2VHlXazFhczJlM2pZa2xyTytxTXgvSUJURE90elM0QUdRRWM4ZXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlYdFpic0d3cEJlY2hrMGFmRlJuODR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBOVGN4T1ZvWERUSTJNRFV3TlRBMApOVGN4T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsWmJJS0VIbHBwaks1Y3lCSXZ2alhrOXc4RUQ4UVQ4a0dNaDFGT1crMUZnaVJYMTIKNWtWV0tOemhJSmdicHpCb0R6dG1TcHB3QXF6MFc4UTJSeWNGajJqK1VMMU5FV1BaMlEva2haZWN0OWcxZnloQgpZSS9HY3JwNnhPU1V6VnlpdjVaUjFJZjV4eHZ2YTgrWjNBRkR2NjFWeWovcDZ6YW5qK1dBWEozV3h1cllIdGVUCmNYQ0RBb0ozYmhucjQzWTRWZXduaURJeXF4cXZQNG9ORDdtZlRsSkZuUnk2OWtUblRpOUJSWVY5OGx6YlhDelQKb1NwY3lleWhXRmtobitmeW80SjJMM0k1Ylk4M2FQQzI5VlljRC9LMExWdEFhTC9vNzBaT1BHTlJ3ZkFESmNndgo4VFgreERhMk1hdis4ck92Z2o1cFNXbjJPaFZSTy9mNi9RMFpwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR3pYV2pXTnlJeFgvSTJ4Z25MKzYvc3lyUHpwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1welBNQ3Q4dEFDZGV3aE1aQkZlTlJGZC96SlhLbk5KckRzK2Z6YXowUDU2Q0w1T1NQYy8zCjlMZzNwOUdzR0dsSUEwT3F4UzlSZWtNOVFBV2NIT1VUUjFFY0NNVzd5elgrdHhaN0taN1BnZW5mcFk0VFJmVzEKVHVxT2VQeWZLb05UbWhhY2Y4ZjFmd3RUc2NCcXArcndteHltWGZlQzNTdW0zQlVmWTBXVHF0MlErTUdNWUsyKwpCdWQyeEoxaGdqckNNNi9DQ3VZbm1ieTYwZnByMjYrVVZGMmd6b0RyZ1pQZGM3TkFTZmFJSUEyOENPUm90NFVMCi90MGQrY0hzMDZ6d1lxUzJzN1F6Vkd5YUV2U3ZvaVEzWWw4TldjM2tDc1ZEL0lKaU43Z1lWWHJKWEtWYXBURlAKWTZZbTlhT3lXVk45Z2JVNUVGTUpoc1FONXdkWkJjS2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU14MFhWUS9ndWdteXpDNGxQdDVlYzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBOVGN5TUZvWERUSTJNRFV3TlRBMApOVGN5TUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTNhMXlKK3B4ODQ5WmgxaG5pMTlzb3dEOUtjbXkKN280Y2JoR0ZEWUg1STcxOUt3MDlDdGxUMTRtNnE1TGF2blFyR0JRZXh0SUVVaDZmUDY2V1BXMDI2NEExdG9scwpEeEQzcTlhQnZWcjhoR1UvSFJOYnd0QnRGaUtsQnZiZnhFelB3NkJNOGJMNlhVMXVlRTlBRlo0Y1J2NVY2WVpoCnlWOTRLSjRHNkl6VEJtZENUOWVoU0h4T3RzNkdJN3lQUnlHRERGYU5TQ2VRY1lTZjhNZ3FHQ3doVkRZNmpKdGsKbHR2TldxSk5GUm1XSVNjQlRTSFRud2R5UktWbytTdENTZmdPRVY1L3BwUlh6dW9uTy9yK1Q4NU45YmV0WTRyagpzcEV0aGNuVUN4S1N1ZnpTSXZZNUNLSGNiMWNjR1lhWklYdlRyTGIrelM5NTVWQXZ0YU5BMjBVRGRRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUnMxMW8xamNpTVYveU5zWUp5L3V2NwpNcXo4NlRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQkNkeDRsRlZmMHlKZ09Nd3ROUFZ1OFVncnduNjNUNHoxNFdMdG5FMlVucDB6dzgKOTJKMzRDMk5YQkc2Qy9JWjBRSk92K0ZhWXEremQ3QUljbWpGcXZzVzZNeWEyb05kNjJPRGNSVEd3WjRaWG1mTwp6cXVucGJhNW1qaGxqZGxESjJKWWpOUitRUXJidmozbGdQdnZiT0lFR0NZcEpMMXVsME9tQUxHWFhySFc2QmNrCmhWb0hCK0pRSnlMU0UrQkJKcHpNcUVIejViVm0vUUNKbzFNNHU3Ui9VZUMyYnZYd1BvZ3ZwNmh2K0tVc1gxR0cKbFU4dTdlYjF4RUJIRGZmU093TEt0U0lueWhGWWxLa3dIRU4vdW5zUVhlSVlCbW8vVC8zSVh0a0J4TDY4RVBrYQpVLzg5ZVh5bkdvZ080c3hzd2ovbkQyMUJnYWUxRUY0Rm9hWEM1Rms9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM2ExeUorcHg4NDlaaDFobmkxOXNvd0Q5S2NteTdvNGNiaEdGRFlINUk3MTlLdzA5CkN0bFQxNG02cTVMYXZuUXJHQlFleHRJRVVoNmZQNjZXUFcwMjY0QTF0b2xzRHhEM3E5YUJ2VnI4aEdVL0hSTmIKd3RCdEZpS2xCdmJmeEV6UHc2Qk04Ykw2WFUxdWVFOUFGWjRjUnY1VjZZWmh5Vjk0S0o0RzZJelRCbWRDVDllaApTSHhPdHM2R0k3eVBSeUdEREZhTlNDZVFjWVNmOE1ncUdDd2hWRFk2akp0a2x0dk5XcUpORlJtV0lTY0JUU0hUCm53ZHlSS1ZvK1N0Q1NmZ09FVjUvcHBSWHp1b25PL3IrVDg1TjliZXRZNHJqc3BFdGhjblVDeEtTdWZ6U0l2WTUKQ0tIY2IxY2NHWWFaSVh2VHJMYit6Uzk1NVZBdnRhTkEyMFVEZFFJREFRQUJBb0lCQUczVVAxalRhVDI0Nml5SwplbEt0Sm8va0w0b0NxcXBTc25jK0t1TzBYNUY3a29ZLyt0eGpMSXovYWdNVHNWam5DV3JXblNENGNMZVhBR04yCnhtME1yVWNrc0hnTndnSDg4Qml0SUg2R2s5R3NzQVpoenZiSWVTT2NhcEwyd1lycVc0MmE0RVJuM205WHE4SGoKMGVaai9iS1cxRTN0REluT3lTT21sOW1qMi9HeFRxRVR2c04rTFdUOTltVHVkNU5NaHRLSUhKN3ZVNzhnTStzZwozbnlzZGJMOFRIWXhOTG0waW1ySjNhMEE1d3k2dUZCN2RNVEpjYm01YVJTRXQ1ZXlxVVJzY3VhY0l4amRiRndYCnVhQlc3NCsyREg0Q2U3MTUxTXFPMTd6VUg5VmdGRXIvaWw3VlVOdGVGbzIrVEFBbjRTaHRyeFNDSFBsY2plbWEKMHUrdFlNa0NnWUVBLzREK2FHMmZ6enZ5dXNuQUcvSHh0SVFDWEhkMkt1M0dIYTkrZnhzckQ2M20rWENCWmlVNwowUSsya0gvbDhWaU4wQ0hURHVobEtwN1VCYjZKZW9pY1U4SGpudGloNG5MVWVBdy9xVkwrelM1dkFSakhKRlRzCjd5ZFIyTmIyK2xVdm5TZU5PUjV3TFptSzF6QVVaQjA2dXEyTzIzQ0pSdHc4WVIwSFRyMnR3ODhDZ1lFQTNodWoKUDRQa0kzNWRQZkwrOUNXTXNvMFJXdWlaSjdiMTJRQ1ZkREpiWXkwNVd6dnd5S3FhR2xvKzJTWDNoTEtpaE11WQpaYURHK0Fva3I0eDByb25SNjR2d00wdmhrcUk3OWRrMXVvRUdNRXFiTC8xQldFVzFZYndHaG5rQVEzQURmQUtlCkhOVEViUmRmQ3NadS9ndGQ1V3AwUVk2UUJHMmUwN1F1cXA0aDRYc0NnWUVBK1JJM2IzZUdOVS9jUkdoT0pTL0wKRHMwdFBCU2NsaWFxWGQvcE1XRTdyaEk1dW1vSlNwajdZY2F1a3RpTFFLV3h3UFpvTi8wbU9kRVJJUFJvTXBJZgp5cXFWQ1JGblprZkloYXB6R000Mlk3QmpONjkrMmhVTHorc0ZwNXVPc2VQL0FYVS8vekdENjMvbFQvYW51aHlnClZzREFKWHpqNWJibUNVbHlDVGx3dmhNQ2dZQnFhTWRQV0xybUhsWkJwYmRyOU1seGlaQTFBNWJNcGlVbXI5YnEKY20zQ0dCcVFrU2tNbWw5MkhLSmJtb3I1TWpRV2R3d3VORmJlNHMwc3BaZ0pQdElwalVPbzc4UEVZcUZqYVlzSwpMV0p2cEc2eEVSNUxVaXBTQnFrQnA5cnVkQzNYTGRIZWNqa2hJcjlRQkQyTXpKbFJuaXpRYzZLZjNIenBaRHV2ClZrOVpIUUtCZ1FESGd2QmVBTFU2cGFuNzBiN2kxS2dvWHJMTjl0eGNLaVFUVDJIbDlScmRFL0hqVTYxZHNnWU0KcTI3RVRTb0p2NHg4eUcxOVhlUHRick9tMUZOR3VCUVNubDN3dUh2Um1GaWJ4NUNrdWliaTcrb09BQ0FWZ2JsTApHam1uUUFzU0FtblZJUSs1WWl3NjFxdnlCNjRsam83YW9CN0ExSSswRWZPT1dSNlpuYm1FaFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlYdFpic0d3cEJlY2hrMGFmRlJuODR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBOVGN4T1ZvWERUSTJNRFV3TlRBMApOVGN4T1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFsWmJJS0VIbHBwaks1Y3lCSXZ2alhrOXc4RUQ4UVQ4a0dNaDFGT1crMUZnaVJYMTIKNWtWV0tOemhJSmdicHpCb0R6dG1TcHB3QXF6MFc4UTJSeWNGajJqK1VMMU5FV1BaMlEva2haZWN0OWcxZnloQgpZSS9HY3JwNnhPU1V6VnlpdjVaUjFJZjV4eHZ2YTgrWjNBRkR2NjFWeWovcDZ6YW5qK1dBWEozV3h1cllIdGVUCmNYQ0RBb0ozYmhucjQzWTRWZXduaURJeXF4cXZQNG9ORDdtZlRsSkZuUnk2OWtUblRpOUJSWVY5OGx6YlhDelQKb1NwY3lleWhXRmtobitmeW80SjJMM0k1Ylk4M2FQQzI5VlljRC9LMExWdEFhTC9vNzBaT1BHTlJ3ZkFESmNndgo4VFgreERhMk1hdis4ck92Z2o1cFNXbjJPaFZSTy9mNi9RMFpwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGR3pYV2pXTnlJeFgvSTJ4Z25MKzYvc3lyUHpwTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQk1welBNQ3Q4dEFDZGV3aE1aQkZlTlJGZC96SlhLbk5KckRzK2Z6YXowUDU2Q0w1T1NQYy8zCjlMZzNwOUdzR0dsSUEwT3F4UzlSZWtNOVFBV2NIT1VUUjFFY0NNVzd5elgrdHhaN0taN1BnZW5mcFk0VFJmVzEKVHVxT2VQeWZLb05UbWhhY2Y4ZjFmd3RUc2NCcXArcndteHltWGZlQzNTdW0zQlVmWTBXVHF0MlErTUdNWUsyKwpCdWQyeEoxaGdqckNNNi9DQ3VZbm1ieTYwZnByMjYrVVZGMmd6b0RyZ1pQZGM3TkFTZmFJSUEyOENPUm90NFVMCi90MGQrY0hzMDZ6d1lxUzJzN1F6Vkd5YUV2U3ZvaVEzWWw4TldjM2tDc1ZEL0lKaU43Z1lWWHJKWEtWYXBURlAKWTZZbTlhT3lXVk45Z2JVNUVGTUpoc1FONXdkWkJjS2YKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU5jeFNPWThyYm1oRHhvVWFUbkwxYUF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBOVGN4T1ZvWERUSTJNRFV3TlRBMApOVGN4T1Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1zK0ppM09UU2R1dmw2bWxTeEoKMDI5Qm1ZM0luS21lVUNJeXAzVFFVeEgrUE1EN3NNQmpYU0VSaXFQQlZCR1BCeGoxbmZtL1oyaHQxWEtybFFEbgpKWHFqMXB1NFMxQXVwSHVESlVuaTM0ajhxZ2NOT0RxckoxTkw1K0l5UExmaWk0NFlYVUw3bGZmVFN2OUUyQS9VCjlleWxRa05rellSQ3A2Z2IxN3I0bmJiTXlWeGtGREI2OUhrb1hjQmlFSWNwc2JPT1l2RURyckZsZDYwTktCQ0kKSHFPUHBFZENpZDc2ckNQYUZSbzRMaEpyVWtCc2x6b1ZNUlhFMWJ3SDF6b29OczdXVG1WdnVqSEszUnlZQ1l6ZAppQ2o5dlRJVmovOExQUjZEN0tXak43azh5MUROMGQ0c2FXWWwrZDFtYkRxaDBYZVJyZVZZNjhGTDZpb3JWbEpMCnJsTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVWJOZGFOWTNJakZmOApqYkdDY3Y3cit6S3MvT2t3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWlsR0p1SlRkQXdZYWRtQWZKZzk0N2dNekQwaTYKY2xZbUlnR1VwQXpLeW1QMzlwNjhtMjdJUHdYVmdVZmRPUUNSdG9yVTV0bWNTYU1ZWWpVQUMrdk5ySVlrczRWRwptbnl6MHZvZ2RNQmx3RTVQSVZkZEFYVEZYajk3eU9uTjFPTUl2Q1c5Z1dRbzdvR2dYbDdESEJ2WXdocU81WjR2CmpvTW45eFFhQ0ZmZHYxeGh5dFFRekI3dTFLVWcwSjFaMzVIbVlEZitSZ0ZnVHRDeWtacHlENXpFbDRHNVJRbVQKeExjK1QrSE1zQVhXcnVwbnJSYzVzUGcwSWtMSGlrQ0d5aDc0QTdSWXhGL2UvYlV3cGtwbjRiaVJmdXd1cUxSRgpVOVp6QkJPMTFBM3ZLOG9Cd3lIYlBXMWVwNlJxbWc0dDd6eDlLZHpZbnBDN3QrdWNrMEVvWk9RWU5BPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeXo0bUxjNU5KMjYrWHFhVkxFblRiMEdaamNpY3FaNVFJaktuZE5CVEVmNDh3UHV3CndHTmRJUkdLbzhGVUVZOEhHUFdkK2I5bmFHM1ZjcXVWQU9jbGVxUFdtN2hMVUM2a2U0TWxTZUxmaVB5cUJ3MDQKT3FzblUwdm40akk4dCtLTGpoaGRRdnVWOTlOSy8wVFlEOVQxN0tWQ1EyVE5oRUtucUJ2WHV2aWR0c3pKWEdRVQpNSHIwZVNoZHdHSVFoeW14czQ1aThRT3VzV1YzclEwb0VJZ2VvNCtrUjBLSjN2cXNJOW9WR2pndUVtdFNRR3lYCk9oVXhGY1RWdkFmWE9pZzJ6dFpPWlcrNk1jcmRISmdKak4ySUtQMjlNaFdQL3dzOUhvUHNwYU0zdVR6TFVNM1IKM2l4cFppWDUzV1pzT3FIUmQ1R3Q1Vmpyd1V2cUtpdFdVa3V1VXdJREFRQUJBb0lCQUdoQmZ6QXNEV1BXNlF5QQpnekR1eGVqaVM3UnhYZnVjWEJyT3hSdWs2WmZuUko3eC9SOFRXV2huS1NrTE9PYXc2Y0VoN1dGNWo3Ly81MmdsCklCQVFnaWRBK0F0MUpCMERjQmh6azZNdEgrR1RTbHpIcVRwZkpaTVM4dVlUUXhaSXZiR3NTZHJjVjNlRENZdWMKY3dEY0N6TFRLd1NMSnVsYmo4a3FUeVYzOXQ4WGoxSVN5THlraGV1OGt3RndmRDhNZzZ5eEtaaXQxTTJua2EzUwp2L2RISlNNNVdsS0RXOTBibnBsR1MzNXBlSmpVZ1R1QlBuV2dMeHpVaXROQVFVSmJJRU95ZXVOUFFRdUs4YXhDCm51R3lqR1FTZE9PSE5maGsyZy9DWkpkR2dBWDdFb2YyK1FVKzQ1RXhRY3k1M0VmYkZKeGZlRGNRemtlTTU1c2cKS1NyTDVsRUNnWUVBMnIrK0FyeXNibEVXMHYxa1NUelNNZmFsdmRmYWJ4MC8wc0Z6RFhOMi9xQTJSQWNBSjhzZwpRVEE3LzFDcFVvTjlXbktyT2NtVWd5UjczV3RIQTEzYkdxVnNNR3JXS3F6MW4zQ3ZQK2ZEbFloUnYwVGgxajFBCjRUbGJRdklqZmhBWi92Rk5GVEQ1R2cvdlB3N2lJVm1rekxNdEIvamtIL0N6YnZBWkFad1NtQjhDZ1lFQTdkcHIKcDdzREo0ZnNCbW5XMHB3YkEvQ1h3YXU5QjBNbXd0WW5xdlp4WSt1cHI5ZjdmQ0htTFhKRFN5bXlnTlRQdEtPLwpYc0lDSkw1WDhaSDFxQVl1Ty9TakdtTGd6Ylk5TFF2bXdONjhXL0FhMEJXbTZkZEdEWlFDb1k1QTRHck9neEJBCkJIdnF3M2JrRmFOZmVWemZud3p5clpTS2tKRlNTd0kxd09YaWMwMENnWUVBblViZlJ2aUF3WkJyNktkblE0RUgKWUFVR2hjaDh0UWRDckRXS2sxRkJiVEdqMHFWMTV5YVV1a29EMlQ0VmY4NHFncTJQanF6d3FwbkF0U0k4bko4Twp1Y25XVDdtQTRvNFl5OW9wSnJsc1ZrYjgvNWgzQjZKaTA0eDVvVmlYVER3bmRMWHB4aUsvOTQwZFp5azhUTjQzCkx6WmtXaWNKWGkyaDFWR3JxUXllRWVFQ2dZRUFqbERMYTEvVllsak1tNFhHZU52WXVrSEJ1NnJ6ZnAzcVdsZmoKQWtOVTAxR1ZoVlo0N2V3bW1uaXMxUk5NOEJMbGVKTWxsU0FHUWsvMXROLzltWnloRzFTa0pzeVU3K0VqdDRsUQpkNFNPTllCenVwL0o4RTdUWnBweC9KSnVOUmtUR1k2bWowaEp6c3liYW1zSFhFbDZyK01DYldQY2lPVzYxSkNzCjh3OVpzRjBDZ1lBRmtlQU5mRmcxRUR0OGs4dHZLYVRiK2JLNjZNOUpQdHFrU0ZMQThodXhaZVBZWVVmOWVJY2sKVjkwWW9kb01xVWQ2Q3VUUy91ZnVpWlgrd0pZLzgzVmxPRGZGRzFuU1N1TG83cENKVENodlBkQ3hRcjBiUkpsRApFSllYemFETjhLL1lOenppVStkNjh6K3NDdmFLWUNVeGVqMy96bmtlZzdJZ3liMlNPL2ltSWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
