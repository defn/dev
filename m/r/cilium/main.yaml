apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSzYxNHF1ZU1zYnZvUHhNTGV3T1Q5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTBPVEEwV2hjTk1qWXdOakUyTURJMApPVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzFrNldrWTF1UDVyRVN6NDhNeTBjVXhjSUowcXhORkF0YU9vUXNaN3ZJVG0yR3AwVE0KNVRlRi9yQXllUXRXUGQxdENPSU1NdXlZQWI0SnBKMXo4ZlgvbHNjSDhyVk1BSnFRcGN1TXRjMWZpQ1lmNTFmUwpWRk5EK1NuckM0QkdiZ3JMditvVDRoRFp1Z3o3Mi9GMlJvY2FxWFdFYkpxejAxLzVqLzBBK3hYbFlZVjh5aU1LCnJlSTV4eFhJRnlJOVlSVE1Hb2FxUGlmR01uUVM4SVBKOFIyeEZ4ZXlMQmN4dUhFMVcvMGNCZW52YlBJdmc5dGgKbTA3bWNZNVlXWEd2TWs0SXJ1UVpEM3BQZWxYOG43V1BORUVVWFh4QXphTWNjUUNuRXdvZEhuZGV1VTY5TUdxdgp1cTJPUVNrN0tXTXJJb3dLSURnTkZFbmtyclFndjVpeDBxeXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwZUMvalJWUTNQVkI4ME9yd3NjRFordTc3UjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDVmtPQU5ncGVlSzk3S2RIRHFwUW1wdUtlRzUyVnBidWlmRkpra1RSOE1vd0cxYzVhZWhGY3ZRCkJkcVhvV1lxS29qSEFpT2xYMjlIRWk5Y0JzeXRnWTdoWHR2RTN2RVQ5bVNOMGtwSGVWOW9rMjg4NEh4NGpMclgKSE13ODhVYUw4ZEhpTjVJOWoycExhZjdvWXN3dXkxdzA0MnlpSTMrT1FqUlp1M3VjVmtJaEFOc1Z3NkNIeU9xWApxR29KTHd5bUx3N2IyZTlBTlFkLzdHZXJ2Q0xMVmFXNis2VWE2UW1xT1JIR2tOUy94VU5McFZEdC9wbTl4bkZyCnYrQ1IyU2ZlWWlIWGg3SWFPOG4yck8vYmJSTVFxaEZBd1hLT0s0Tm4rYjJkeVZqaTlwSXNid2RDNmxkb3FsNGwKMGZ0dm9pZFJ1WFZOWXpYaHp0WENtMzJidEdpbzBhZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFpPbHBHTmJqK2F4RXMrUERNdEhGTVhDQ2RLc1RSUUxXanFFTEdlN3lFNXRocWRFCnpPVTNoZjZ3TW5rTFZqM2RiUWppRERMc21BRytDYVNkYy9IMS81YkhCL0sxVEFDYWtLWExqTFhOWDRnbUgrZFgKMGxSVFEva3A2d3VBUm00S3k3L3FFK0lRMmJvTSs5dnhka2FIR3FsMWhHeWFzOU5mK1kvOUFQc1Y1V0dGZk1vagpDcTNpT2NjVnlCY2lQV0VVekJxR3FqNG54akowRXZDRHlmRWRzUmNYc2l3WE1iaHhOVnY5SEFYcDcyenlMNFBiClladE81bkdPV0ZseHJ6Sk9DSzdrR1E5NlQzcFYvSisxanpSQkZGMThRTTJqSEhFQXB4TUtIUjUzWHJsT3ZUQnEKcjdxdGprRXBPeWxqS3lLTUNpQTREUlJKNUs2MElMK1lzZEtzcVFJREFRQUJBb0lCQVFDWTVmVnJrY2IrUzlINwo5dytNUkhoY2c1STdWMDJEc2tkRStWVm5Wd3FIUjVOdStkY3plaWpoQ25Bd2NFRWRwQWFhMUFvVkg2U2U4NGlrCjhoc3NFU21HeWQ1YlVRTmRObnp4Sk10Y2Q1S3l5U0RoYUp0Skgzem1GaUE0TG4wYjBYb0J6Rjg5MHZWQmdpdUEKd2RwNE1EZUFPZ1lkTnA2bW9tMkU1cnl6WUxzMVpSZ1pGRUpQaVkyc08yYyswWHQ2ZU00SkhRRDV5NndyUGZrVQpCYitXUDdOZit3VVdoWjk1NEFTalpqRXBnbHB5U3R5WHlnVUg1Q1NlM1RjZ0VqQkFoZWs3dVFwbVJHSXRST2h3Cm8vQXBoVUVPZkFySWlaeHhEQmFROG9wL2MzaGtOazVlL1ZhUHdKd3NsQXJFMHBWRVJ2V2dhWkJzc05yb0R6d0sKUjIvc255cEpBb0dCQU5IaWpGSy9mbEV0SnRNZXQ1YXdFVFBZd3Q3c1FSL0ZMbDhaU0VRd0ozbm5aMU9sWHdHdQpCNGlqVmJkZG1NRnVnSGtwKzlZUDk2KzRVZHdkSC9VNGN4aGV3dEE5MFpuenE5cENsbnVLWURuSUdnZTUwYkRGCkdBWnl1aGwrTXVXd1FVMm1mUzUwdHRDNHZnaUxzZFZSK2NlY2NLRUFxbllub24xdmJRTGZoc0JMQW9HQkFOMTQKMXd3VzZuRW5UY0dQcVVyVXMrWS9ublA4d2lleFFUaDR4dElBeXNxL0Z2QTJ6RXVpTjVKM2RXT1hkbFdHZmxuMwpVS1hIQSs1dlhZOWcxdS9SMWJNdkJOMzNJdHVONjNWK2dpck9VS21qL1F6TXUzR0VYcTlZMlovWldmVEFISnRWCmZqbDRVUm1XbVZuUVJxajlxbjkvZVp2QVNLYmdZR2lRQ1YxVVJiWmJBb0dBT0k5aG0wY0pobHl4a3NFN1hqdFMKVjNONWlGT0lkVVJRNjhYSGFNREZVcCtlZzdjVDlFTHV1czZ4WWJteVdhWXFydncyWm9obENoQ1Uxc2x1ZkVuYgpFbDB2Q0trd0c5bkRuUXpHdXNJZWpsT3pXQk9tUTRuSm9LczRKWGlSeEw0THl4NHJxK0krQmQ5VExzQmVpd3NOClVkS0JzNUdYWGtIdUV2bDlHZ0ljc1NNQ2dZRUEyTnYyVmxRcUE5cGtmTi9hK1BjRm9MTXl5SWY2NVRyZmpoaFYKTmxTb1BaYVhNMmUwNjJwUDJBODQxdWY4YXdwaXRsMUFqdE1zdWxBNTRLY0dUNVc4RnRRM2c5RDJSTjNXYlJvUApBek02TUtIdXFwWGVCTzJFZVZZYTRqYkZxcTVpVkllR0xXZnVvWXVoWlJ4WDFDbHV4YUZneG0ybHRpR0d4VndrCmowcHhhSGtDZ1lCRCt6RHF3SWxnQWxkOHNPMVNCM3hkRE9HQk9nMml0VVFzRlB2UW90WGc0ZHpOL2c3V21Jc0cKbDhlZ3BaUWZKaEdOVllEaDJGQnlkZUN6R1Y0MHlWcnl5NWZ5cC9KaEdPOEJtdVdXdVNvN2VkaXVreWJSTHlWWApRM0VLSTZrRU9hSWltci94ZFptY2hKMlhBOEZra1FMNkZyU0NNQTI3OEVrVGlpRFFJcE4vTnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSzYxNHF1ZU1zYnZvUHhNTGV3T1Q5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTBPVEEwV2hjTk1qWXdOakUyTURJMApPVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzFrNldrWTF1UDVyRVN6NDhNeTBjVXhjSUowcXhORkF0YU9vUXNaN3ZJVG0yR3AwVE0KNVRlRi9yQXllUXRXUGQxdENPSU1NdXlZQWI0SnBKMXo4ZlgvbHNjSDhyVk1BSnFRcGN1TXRjMWZpQ1lmNTFmUwpWRk5EK1NuckM0QkdiZ3JMditvVDRoRFp1Z3o3Mi9GMlJvY2FxWFdFYkpxejAxLzVqLzBBK3hYbFlZVjh5aU1LCnJlSTV4eFhJRnlJOVlSVE1Hb2FxUGlmR01uUVM4SVBKOFIyeEZ4ZXlMQmN4dUhFMVcvMGNCZW52YlBJdmc5dGgKbTA3bWNZNVlXWEd2TWs0SXJ1UVpEM3BQZWxYOG43V1BORUVVWFh4QXphTWNjUUNuRXdvZEhuZGV1VTY5TUdxdgp1cTJPUVNrN0tXTXJJb3dLSURnTkZFbmtyclFndjVpeDBxeXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwZUMvalJWUTNQVkI4ME9yd3NjRFordTc3UjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDVmtPQU5ncGVlSzk3S2RIRHFwUW1wdUtlRzUyVnBidWlmRkpra1RSOE1vd0cxYzVhZWhGY3ZRCkJkcVhvV1lxS29qSEFpT2xYMjlIRWk5Y0JzeXRnWTdoWHR2RTN2RVQ5bVNOMGtwSGVWOW9rMjg4NEh4NGpMclgKSE13ODhVYUw4ZEhpTjVJOWoycExhZjdvWXN3dXkxdzA0MnlpSTMrT1FqUlp1M3VjVmtJaEFOc1Z3NkNIeU9xWApxR29KTHd5bUx3N2IyZTlBTlFkLzdHZXJ2Q0xMVmFXNis2VWE2UW1xT1JIR2tOUy94VU5McFZEdC9wbTl4bkZyCnYrQ1IyU2ZlWWlIWGg3SWFPOG4yck8vYmJSTVFxaEZBd1hLT0s0Tm4rYjJkeVZqaTlwSXNid2RDNmxkb3FsNGwKMGZ0dm9pZFJ1WFZOWXpYaHp0WENtMzJidEdpbzBhZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFpPbHBHTmJqK2F4RXMrUERNdEhGTVhDQ2RLc1RSUUxXanFFTEdlN3lFNXRocWRFCnpPVTNoZjZ3TW5rTFZqM2RiUWppRERMc21BRytDYVNkYy9IMS81YkhCL0sxVEFDYWtLWExqTFhOWDRnbUgrZFgKMGxSVFEva3A2d3VBUm00S3k3L3FFK0lRMmJvTSs5dnhka2FIR3FsMWhHeWFzOU5mK1kvOUFQc1Y1V0dGZk1vagpDcTNpT2NjVnlCY2lQV0VVekJxR3FqNG54akowRXZDRHlmRWRzUmNYc2l3WE1iaHhOVnY5SEFYcDcyenlMNFBiClladE81bkdPV0ZseHJ6Sk9DSzdrR1E5NlQzcFYvSisxanpSQkZGMThRTTJqSEhFQXB4TUtIUjUzWHJsT3ZUQnEKcjdxdGprRXBPeWxqS3lLTUNpQTREUlJKNUs2MElMK1lzZEtzcVFJREFRQUJBb0lCQVFDWTVmVnJrY2IrUzlINwo5dytNUkhoY2c1STdWMDJEc2tkRStWVm5Wd3FIUjVOdStkY3plaWpoQ25Bd2NFRWRwQWFhMUFvVkg2U2U4NGlrCjhoc3NFU21HeWQ1YlVRTmRObnp4Sk10Y2Q1S3l5U0RoYUp0Skgzem1GaUE0TG4wYjBYb0J6Rjg5MHZWQmdpdUEKd2RwNE1EZUFPZ1lkTnA2bW9tMkU1cnl6WUxzMVpSZ1pGRUpQaVkyc08yYyswWHQ2ZU00SkhRRDV5NndyUGZrVQpCYitXUDdOZit3VVdoWjk1NEFTalpqRXBnbHB5U3R5WHlnVUg1Q1NlM1RjZ0VqQkFoZWs3dVFwbVJHSXRST2h3Cm8vQXBoVUVPZkFySWlaeHhEQmFROG9wL2MzaGtOazVlL1ZhUHdKd3NsQXJFMHBWRVJ2V2dhWkJzc05yb0R6d0sKUjIvc255cEpBb0dCQU5IaWpGSy9mbEV0SnRNZXQ1YXdFVFBZd3Q3c1FSL0ZMbDhaU0VRd0ozbm5aMU9sWHdHdQpCNGlqVmJkZG1NRnVnSGtwKzlZUDk2KzRVZHdkSC9VNGN4aGV3dEE5MFpuenE5cENsbnVLWURuSUdnZTUwYkRGCkdBWnl1aGwrTXVXd1FVMm1mUzUwdHRDNHZnaUxzZFZSK2NlY2NLRUFxbllub24xdmJRTGZoc0JMQW9HQkFOMTQKMXd3VzZuRW5UY0dQcVVyVXMrWS9ublA4d2lleFFUaDR4dElBeXNxL0Z2QTJ6RXVpTjVKM2RXT1hkbFdHZmxuMwpVS1hIQSs1dlhZOWcxdS9SMWJNdkJOMzNJdHVONjNWK2dpck9VS21qL1F6TXUzR0VYcTlZMlovWldmVEFISnRWCmZqbDRVUm1XbVZuUVJxajlxbjkvZVp2QVNLYmdZR2lRQ1YxVVJiWmJBb0dBT0k5aG0wY0pobHl4a3NFN1hqdFMKVjNONWlGT0lkVVJRNjhYSGFNREZVcCtlZzdjVDlFTHV1czZ4WWJteVdhWXFydncyWm9obENoQ1Uxc2x1ZkVuYgpFbDB2Q0trd0c5bkRuUXpHdXNJZWpsT3pXQk9tUTRuSm9LczRKWGlSeEw0THl4NHJxK0krQmQ5VExzQmVpd3NOClVkS0JzNUdYWGtIdUV2bDlHZ0ljc1NNQ2dZRUEyTnYyVmxRcUE5cGtmTi9hK1BjRm9MTXl5SWY2NVRyZmpoaFYKTmxTb1BaYVhNMmUwNjJwUDJBODQxdWY4YXdwaXRsMUFqdE1zdWxBNTRLY0dUNVc4RnRRM2c5RDJSTjNXYlJvUApBek02TUtIdXFwWGVCTzJFZVZZYTRqYkZxcTVpVkllR0xXZnVvWXVoWlJ4WDFDbHV4YUZneG0ybHRpR0d4VndrCmowcHhhSGtDZ1lCRCt6RHF3SWxnQWxkOHNPMVNCM3hkRE9HQk9nMml0VVFzRlB2UW90WGc0ZHpOL2c3V21Jc0cKbDhlZ3BaUWZKaEdOVllEaDJGQnlkZUN6R1Y0MHlWcnl5NWZ5cC9KaEdPOEJtdVdXdVNvN2VkaXVreWJSTHlWWApRM0VLSTZrRU9hSWltci94ZFptY2hKMlhBOEZra1FMNkZyU0NNQTI3OEVrVGlpRFFJcE4vTnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSzYxNHF1ZU1zYnZvUHhNTGV3T1Q5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTBPVEEwV2hjTk1qWXdOakUyTURJMApPVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzFrNldrWTF1UDVyRVN6NDhNeTBjVXhjSUowcXhORkF0YU9vUXNaN3ZJVG0yR3AwVE0KNVRlRi9yQXllUXRXUGQxdENPSU1NdXlZQWI0SnBKMXo4ZlgvbHNjSDhyVk1BSnFRcGN1TXRjMWZpQ1lmNTFmUwpWRk5EK1NuckM0QkdiZ3JMditvVDRoRFp1Z3o3Mi9GMlJvY2FxWFdFYkpxejAxLzVqLzBBK3hYbFlZVjh5aU1LCnJlSTV4eFhJRnlJOVlSVE1Hb2FxUGlmR01uUVM4SVBKOFIyeEZ4ZXlMQmN4dUhFMVcvMGNCZW52YlBJdmc5dGgKbTA3bWNZNVlXWEd2TWs0SXJ1UVpEM3BQZWxYOG43V1BORUVVWFh4QXphTWNjUUNuRXdvZEhuZGV1VTY5TUdxdgp1cTJPUVNrN0tXTXJJb3dLSURnTkZFbmtyclFndjVpeDBxeXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwZUMvalJWUTNQVkI4ME9yd3NjRFordTc3UjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDVmtPQU5ncGVlSzk3S2RIRHFwUW1wdUtlRzUyVnBidWlmRkpra1RSOE1vd0cxYzVhZWhGY3ZRCkJkcVhvV1lxS29qSEFpT2xYMjlIRWk5Y0JzeXRnWTdoWHR2RTN2RVQ5bVNOMGtwSGVWOW9rMjg4NEh4NGpMclgKSE13ODhVYUw4ZEhpTjVJOWoycExhZjdvWXN3dXkxdzA0MnlpSTMrT1FqUlp1M3VjVmtJaEFOc1Z3NkNIeU9xWApxR29KTHd5bUx3N2IyZTlBTlFkLzdHZXJ2Q0xMVmFXNis2VWE2UW1xT1JIR2tOUy94VU5McFZEdC9wbTl4bkZyCnYrQ1IyU2ZlWWlIWGg3SWFPOG4yck8vYmJSTVFxaEZBd1hLT0s0Tm4rYjJkeVZqaTlwSXNid2RDNmxkb3FsNGwKMGZ0dm9pZFJ1WFZOWXpYaHp0WENtMzJidEdpbzBhZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUkhFQmpMMXM4S0RPUEJiK2t3OGI1VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTBPVEEwV2hjTk1qWXdOakUyTURJMApPVEEwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaFIvQkRqZlJSWWtPMVR6dm5NMmlJQVU1bkx1TVkKbFlCa2xIVmtOOGVnRjY4Q3FYK0N5TnY3MklPazFlVVlycTUvRFBkLzMrZFRwakxHQjd3NWdEYkJ1SXhBWEhvbwo3RXhac1lzMTZNc3NPQUFxWTBVWEhYRVJJMjFPOEMxMFdhSldBclV3VlMyTVorbUY0MWRSWEh2REdrOHVXSjdnCjB6ODdGT0FBU2JydGVuZlZmQnlRNVFWcStwajVvbmx2OUsvaWhDdEZMUnlDNVg1YWxMVkVoZmYwaW1qblN1VWcKWVZaL3lqUEhObkVYVi8zeW5ZUWlrd3F2MlY0RzVod3JpVEg2UTMwcE5CVGJwSDNYckhUTGRoaFAvUUtYc1pxOAp4M0MwU0FJNEtvdGkvSytHQngzbThPUGlxaXRRNHRpSnFPQmdEQldjYjliY0RjbnlwUjM2cmJ3TkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZLWGd2NDBWVU56MVFmTkRxOExIQTJmcgp1KzBlTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFRT28xOHpWVW1iaXZpNkFZVDVqamlpbnFtMHVEQ1Z2ZkpZS3JQMWtTZ2JEVTVYTHYKbEozUmk3UzlGOVcwR1pNZVlSRFVETC9aUzJqckl2WHA2Y2lSN0NEckhjU25GNnFORzRLSE5QeUh3UVYxQjNyQgo1c3FFdHhvWEVXaXJSN0N5RHJjL1F2S0l1eFROM2ZkcHBSY3pQVnV0RTlVbjdPR1NsclphaUtIaWJ2ai9hWkFPCnRJbjZBWTJvS3o2VURPTVBqUFpvQkg4TGpyUVRMd05HcVRNekZuRlBaOWxOZmJDVk5MMnplcFl3UjkxMXhlWXgKc0lmU0RvdXhGbi9NRUJSZVpPMlhvVjFQTDB3SWhDSlQzRmdDMzh5Rjd2VnlkMGgxM0JpaUg1TllEOXRUbU5PUgpLYlFEdTlwNlh6VmkxU3FCUTkyeVVGdnZ2QVhXL2prY3hseGxhZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNFVmd1E0MzBVV0pEdFU4NzV6Tm9pQUZPWnk3akdKV0FaSlIxWkRmSG9CZXZBcWwvCmdzamIrOWlEcE5YbEdLNnVmd3ozZjkvblU2WXl4Z2U4T1lBMndiaU1RRng2S094TVdiR0xOZWpMTERnQUttTkYKRngxeEVTTnRUdkF0ZEZtaVZnSzFNRlV0akdmcGhlTlhVVng3d3hwUExsaWU0Tk0vT3hUZ0FFbTY3WHAzMVh3YwprT1VGYXZxWSthSjViL1N2NG9RclJTMGNndVYrV3BTMVJJWDM5SXBvNTBybElHRldmOG96eHpaeEYxZjk4cDJFCklwTUtyOWxlQnVZY0s0a3gra045S1RRVTI2UjkxNngweTNZWVQvMENsN0dhdk1kd3RFZ0NPQ3FMWXZ5dmhnY2QKNXZEajRxb3JVT0xZaWFqZ1lBd1ZuRy9XM0EzSjhxVWQrcTI4RFFJREFRQUJBb0lCQUh6T3NobDdCNlFlNEl3TwpQWTIxT1hBLzZRUFpRZzlZcEMwVTRvU0hNcDFMQWJaajJUVEh1cmdvRjZhMnFabW5EUjF1UGFBbWw2NE1JWXo4CnRCYlhKWDdsa3k0RkRkaW1NUlp2K2tQL21MQUN4blMxVW8yZnpnaEVyRVpUWVp0WUhVdXhiRmcrbUdGMUlEY0EKNEZzKzlZSDlqV2lMeUZtZUx5VzRSdkZoNTZHd2NhRWZ3TGlBTUN2citFM0MySWdnQ3AwQkxMOWVPcjdRS3ZmVApjYlZEMkZJVEJsY0F4cDZMSlJYcldiNGhqc3QzRWRSbVpWVU5FTldLN0xhTFU4YkY5YjJNOUMwRXYyMWFiWFpHCk9XNUo0NCtYVFFRVm9OR1EzRjMrbThsRFRIU0NUanMvZTU5VTJoTzRrbTd3eno1bnlVNVB6MGhPdCtZb2ZqakwKMUYxSHJBRUNnWUVBOGh5SXJsOGpNZUhXV2JZV2M3VFJsZlpYS0hnWGZaZm16ZWtBYUx6TDU4ajlxRHhCQnRXcwpGS0J3QWRpblYrOHJGM05UVjVvK3BGaG5sRGZ4SE5yYkpLLzZSTHVuM3ZGQXNGV0llZDhkSDZJR2NRajJ1bjNICm04UkR2QVZHYjhxa0JIdUpPYlV5c3p1cWl4ems4UUNXb1lDNnhoTStpcTNDaUVxbnh3ZVBDVUVDZ1lFQTdqUSsKemZFNHo0ZXp4WGh2RWQyWTZpclJCekpzODNheFYvaHVCRFpaaW5JSXV4SFJLeVowWFU1L2RDdXVIWDQxeG5aUgp6Z2NXQUVqQW1hZkJIWWk4U25kZEpkczVKakVOeXFCdTFWcGZjZkZSLzdrdmJ1Yy9YQitURGVERkdiVHovZVFSCkplTkhSby9vNFAwNkJLV0krNThJNXViQnF3V1lGRVNyL2xzVGs4MENnWUVBb1NtZlRqdGtLU3RFelRqcFh5SXAKTldMaWg3elJIamhFV2lMVXMrT2c4K3lWOVN3T3VTYjR3azQ5NE96QUVFZlRibXZGT1pZaVJySFdXUktYL0hZdQoxQkFVVHpaL08yZHFnVGFlZjBtbWtFMEJickxoMGlneC9CMDhYV2RCaU43aUtWMjJiZVNSR0VBS2VVbkZtQ3VsCkdXS2djWU9UNlNwYlNQQXhHTXFPUzBFQ2dZQVN2MTNxQzRBekpUVUs1NjJtTkZDaXJYZ0NIdi9nTVlsSHFTL1AKZVErWEM5NlFDcGp4MG5iNkdRR0MvU1VaQVNQdVdNV2JkNGROd213V0s5UFJKVC9jaElSNlJFUzlNc01wSFhOYgpxMTh6c3BDSGxlV2J6dXQzcnF4K1BTQ0dJMjNJbjdpUnlNK0ZTREpGOHVnc0VYTTBpcEhDeW9xWGtUc2s3VHEwCkxDcmdTUUtCZ0NxOGJmTHMzanhQNTIvWWp1Y0FoK3JTZHlJMVQ0cDcyT1ZWUW02NTVKRlJzREpPV2Q5WUg1RW4KRXdRUHY1QUo2dkdKa1ZwK2NuVnArTnQ1eHV3M0V6M3FiNDc0SmRUbUFoL3FnMTkvMlgweXArdVAxRHZLSHF3aQo1dXNyTGVUQnFwVmt5UlQ3aFVLelhCaVJUSEpYQmJydk1qYjhFSDNIQWVuazhxRFUrZExrCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSzYxNHF1ZU1zYnZvUHhNTGV3T1Q5REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTBPVEEwV2hjTk1qWXdOakUyTURJMApPVEEwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzFrNldrWTF1UDVyRVN6NDhNeTBjVXhjSUowcXhORkF0YU9vUXNaN3ZJVG0yR3AwVE0KNVRlRi9yQXllUXRXUGQxdENPSU1NdXlZQWI0SnBKMXo4ZlgvbHNjSDhyVk1BSnFRcGN1TXRjMWZpQ1lmNTFmUwpWRk5EK1NuckM0QkdiZ3JMditvVDRoRFp1Z3o3Mi9GMlJvY2FxWFdFYkpxejAxLzVqLzBBK3hYbFlZVjh5aU1LCnJlSTV4eFhJRnlJOVlSVE1Hb2FxUGlmR01uUVM4SVBKOFIyeEZ4ZXlMQmN4dUhFMVcvMGNCZW52YlBJdmc5dGgKbTA3bWNZNVlXWEd2TWs0SXJ1UVpEM3BQZWxYOG43V1BORUVVWFh4QXphTWNjUUNuRXdvZEhuZGV1VTY5TUdxdgp1cTJPUVNrN0tXTXJJb3dLSURnTkZFbmtyclFndjVpeDBxeXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVwZUMvalJWUTNQVkI4ME9yd3NjRFordTc3UjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDVmtPQU5ncGVlSzk3S2RIRHFwUW1wdUtlRzUyVnBidWlmRkpra1RSOE1vd0cxYzVhZWhGY3ZRCkJkcVhvV1lxS29qSEFpT2xYMjlIRWk5Y0JzeXRnWTdoWHR2RTN2RVQ5bVNOMGtwSGVWOW9rMjg4NEh4NGpMclgKSE13ODhVYUw4ZEhpTjVJOWoycExhZjdvWXN3dXkxdzA0MnlpSTMrT1FqUlp1M3VjVmtJaEFOc1Z3NkNIeU9xWApxR29KTHd5bUx3N2IyZTlBTlFkLzdHZXJ2Q0xMVmFXNis2VWE2UW1xT1JIR2tOUy94VU5McFZEdC9wbTl4bkZyCnYrQ1IyU2ZlWWlIWGg3SWFPOG4yck8vYmJSTVFxaEZBd1hLT0s0Tm4rYjJkeVZqaTlwSXNid2RDNmxkb3FsNGwKMGZ0dm9pZFJ1WFZOWXpYaHp0WENtMzJidEdpbzBhZz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUx3SU8vTmRhSnRXY3RCOG8zbmdUeHN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE56QXlORGt3TkZvWERUSTJNRFl4TmpBeQpORGt3TkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5TVWtWMFowTEJMUzdROVRTaSsKNVRWNjc0SzhFdkN5R0F6TXpYd1pVV29PUmJVS2huRitmRXFVWmZnU0RXeVNJRjBWemVlUnBGRzkrWUtlWUYxVgpmcTN5Z214UE9lcFVmbFBoMzlZajZhanNWN2dKK3NEVXpQUGZrMHN1d3RMLzFaMWU5eDRNQ1FxeGFEdzI3QW4vCkdqbzYvNlNEUFJaeFNicmhJNVhpNTFCTUd4dlBnSUF2V0VZTGIyVkNjeVVSSXcyRjNLb3JZaDlQd05TenVVMUYKcU1EdlNSVWhqaVpqR2dpNkxuNnFPTyt6dmp4QmJmRnEzZXFMcHhCMFZPaTVxOWs0K0JYK1NrbFFDOUkrb3pCRAo3eC9JZm16UC9rWEgxMkVrbTRxbUVKUGVyZTlXbTZJb1h5L0JpNys0eWd6cE9tazdDRnNWeDNaR3RjZERJNGIwCmN1c0NBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXBlQy9qUlZRM1BWQgo4ME9yd3NjRFordTc3UjR3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVB1SmRnYUZQcENCL2dyZjBhNEw5VWFQdFVLOUkKeXI0cUtzdFpHRHNjZXF2bzlmdERoeUhEaWxIbEdFR2E3VVltRkpYaWZVYUdXQ1ZYS0dEZnFLVEtKRFZWVENXbwpvMmVsVnN1b21RUHZweXZDQkRpRUlnMXRvYjNBazArZkpiQnZsbDY4d2xobkRmWS8ydFlQNktXWVNSdzN4U2NnCjVFWk5ZTlFDMXNHKzNacFRIUFJtTWkvOEtTaTUyTU5BRXQ0anl6MjdLN045M1N6eFZYZXczbmU3LzFiTkNGOUUKSGxCYXhtOGszTmNwSHA1V3hHaGlOa1l2RHlBNFd2UFN4djdVcXFtQVorMUo1YVAvdEFjY3JmMVdQRUdxeTdBNQp6aDNXd2hYVzZmbTlOdittMm96REd1U3hhMTF4bU9ObEpPSTVKbStFZUNzMVp1R0laU1hkVWkwYklBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMUpTUlhSblFzRXRMdEQxTktMN2xOWHJ2Z3J3UzhMSVlETXpOZkJsUmFnNUZ0UXFHCmNYNThTcFJsK0JJTmJKSWdYUlhONTVHa1ViMzVncDVnWFZWK3JmS0NiRTg1NmxSK1UrSGYxaVBwcU94WHVBbjYKd05UTTg5K1RTeTdDMHYvVm5WNzNIZ3dKQ3JGb1BEYnNDZjhhT2pyL3BJTTlGbkZKdXVFamxlTG5VRXdiRzgrQQpnQzlZUmd0dlpVSnpKUkVqRFlYY3FpdGlIMC9BMUxPNVRVV293TzlKRlNHT0ptTWFDTG91ZnFvNDc3TytQRUZ0CjhXcmQ2b3VuRUhSVTZMbXIyVGo0RmY1S1NWQUwwajZqTUVQdkg4aCtiTS8rUmNmWFlTU2JpcVlRazk2dDcxYWIKb2loZkw4R0x2N2pLRE9rNmFUc0lXeFhIZGthMXgwTWpodlJ5NndJREFRQUJBb0lCQVFETXRoRlNEWlVZNERtVAo1V0NUZDFsMDZlRVNEWmxUcnIxWVBqVTNaNDR1U25ZNFJGMTVsK3VMU21MenhEYW5NZ1QyZnhQZEJ6U3MvdnZ6CkhCOENZbDF1bDFXZmhaL3BGOXJiWG0zV1lwa1Y4aHI3QUtrMzN2VkxlQ2I0eEp3YTR3RkwzZkt0UGJ2TFQxSm8KZ2g5RjlTTEZwcUVlUkwra0NBNlBaMVdFZHBCNGtqK0dTQnMyVGZEVytPbTFHY3ErVk1GU3JScHVHTGZ5aTU0ZQozNEpCUGNCZCtHTVBzV3VBVkNxMmlCSVB0VlVta1ZtMm05Z1JxaEc1NmVoMklLV1NBMituWlVraG9vcTdHRkIxCk0zRHl3UUorL3pnVjdGdElJa2NZbE5DVGVFbXJ4YW01VUsyVmtuZkN4YzhNZmduZ3ZsSjdjUlJXVWlrYjE0OU8KdzJTWUhUZzVBb0dCQU52ZlRIWFY0V3dVQnlmZ1B1Q29zemU0T20xeHQ0c0E4M256VklqRTlGcExhTFV4SDQ0NQp2M2NIb0VPbi9rQUViZEJOZXdRNmNESU44WDYyOXpvekJJOXZlYWlGTk1oSENKWjUyYktQbS9XdXA2bHZ1ME9SClQwSlZFT1RUL2ZjMW1uSVRFVTdBVy9yRmQ0UktFZ0dObHF4WncvcmpUZlRrSEpteVVUK0l4MVhYQW9HQkFQZUMKaXNpQkxTM2lXZUc0czdIK3VEVHhJamV1STMzMmpxdVN0V2tsM2JQRmdHaHFGNmZleUxsR1hUenp1Y3dFQk5ZTAppVTBsM2U5Q0NtcGFzV2R0eDhOdkM0NUg4dHhkanhNeEd0M09LaG5WK204dGhTSkZBemNKczBvcUlBZEcxT2pUCnZ5ZEJIVHZkOHhIblNCTDdHTlFDVE1oRzlkNVJjRkQ1cWNKY0VzRU5Bb0dCQU1rN2ROSkFIeUY0cnhmcTRBRmoKeFNzUS9NQ2dIRmtuVks5ZmFoWUhGSkR6aFhDWDlnYUlpZGpaN084ZStNOEVmckR2eU5BVTRBeWZ3RSsyQzAyRAoxZitsQ2hhWFc3aVZjcUd1QWZXd0JCQjJlbExUeFBOUk1kWkczc0JmMlllQTBzcm04cWM5M0xFR081Mmk0Um4wCnlWc1NpUkM5S3VNZ1I2RFBtQmJyQzIxZkFvR0JBT3k2UkxjRkpnc094VnpvNWFYR3RMU2VOVllBRGg0NkpiYmcKT1BaNnF4TjRRUnFjN2tjM0E5Q0JCa2gzN0NxL1pVaTcrL1IzMVU4ellQYmNDM1diUUVjaC9IRjNTMGVOakh5VQpxTmVnaWcvdjR2bFhGbER5cE9LTk9wZ2l0a04vY2IvR1ZydmF3WFV6RVhyOE5LbEMxRHBpZ01IRmJQL1g4STdpClc0Vnp2dFE1QW9HQVZPVXhPODNQL3RyVG1PVlowOXRaellJTW5hZVdJTjZGZHlUTnpCZWJ5QnhBRlYrSktPR3QKYkFNR2dhK1Y4YnFLZ0kyTjVzT0p4M0treWdWSWx6Y0lpT1dkZWxmSEtRcjE3NGdTaWM1UHZZQzVkKzI1WllrZgpNaUpCREkrSElZbG40QTU4QnJtVFd2ZTdwS0pPeDVRU3orbVZmaldVWHZmZmNzV3p3dGJSYzFRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
