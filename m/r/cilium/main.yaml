apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT1FZVFlUeDVMQ3pQbnVpdHdPLzE3akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ETXdNelV4V2hjTk1qWXdOakUyTURNdwpNelV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpVOGN0dEp4Qy9BT3gyckJreUtEQStoY1U3bTlpM3RwSDRsQlVoV24rSDB2NTE1ZEYKQWpEaktQaEdzeVVneERiYnozdi9ZcER5YlhzZlAyRGtjd1J3bnVjbUg0V240V3JCMXFBTHRzTmF3N3QxS1pnSgp2S0c5VkpHQy9uR05lRUJzeHpFeHpOcTB3Z3ptN3VBa004WUVYYmpFT1RGRm9oY0QrRHJJUElDWUpWN0lWUnA5CnZDRHFtQUtqei9Sak1SekJ1N0ZPck14NCtFL2JUUTVJbkpzUXpVY0pWNDMzR080dlRQeWovUnhjUXdsUG9XRloKODVRWStiemwxYTZpN0dMb1F5KzdSRTNWOVdwZnJ2bDV4N012MWorNHcyTmIzZ2FlcnF6MkZJNHZxbzQ1VWM0ZgpVYldlMnhUL09jMGhZWnJQTExHbWVwckFFM1d1Ni91dG05SnpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxbkkvOU5OM3A5VGNYVzNzUEl2MlcrSE84WUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEaGNiNmZuM3lUY0Q4OHF5UzhXN2ZtWVZiRjI1MXUxWElTZ0ZsdUtkZ2t2SnYwcERSb1pKZll0CjdrTUJmcnlJb1lEc2ZWUlg4azZjOHgwaFpQLzdQSEd6M1lpemRLdW1WZm1TTWhkbjdJN0l5L1FMU1YrU3NKRkEKQThkcU1EaXl5RWVqckNIK0FxUVFYOFZqMnc4T3ZZQ2lqaG04aHVkc0J2dnhyRSsrYmNJWnErODlCRkMreE5aNApLT3dUWXEzSmRnaFZMU3V3aUJENzUxR1FRT21BaU5ZVnFGT1ZjZFNwdlBIeWRRWnI4Z0QvdTVKUzY5d1gzT25tClFwbGZmdHl5RXdXSUNxbitPWTVkQndSTWo4RGVDM3Bjdk5sTE5JaGVKdmNoMVd2K3BMRVNIS2kyNDJRZWJPQ1cKWDBDNUNJUmVzUVhYUGI2SVU2clNrTStvV3JMcXZ3VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNDFQSExiU2NRdndEc2Rxd1pNaWd3UG9YRk81dll0N2FSK0pRVklWcC9oOUwrZGVYClJRSXc0eWo0UnJNbElNUTIyODk3LzJLUThtMTdIejlnNUhNRWNKN25KaCtGcCtGcXdkYWdDN2JEV3NPN2RTbVkKQ2J5aHZWU1JndjV4alhoQWJNY3hNY3phdE1JTTV1N2dKRFBHQkYyNHhEa3hSYUlYQS9nNnlEeUFtQ1ZleUZVYQpmYndnNnBnQ284LzBZekVjd2J1eFRxek1lUGhQMjAwT1NKeWJFTTFIQ1ZlTjl4anVMMHo4by8wY1hFTUpUNkZoCldmT1VHUG04NWRXdW91eGk2RU12dTBSTjFmVnFYNjc1ZWNlekw5WS91TU5qVzk0R25xNnM5aFNPTDZxT09WSE8KSDFHMW50c1Uvem5OSVdHYXp5eXhwbnFhd0JOMXJ1djdyWnZTY3dJREFRQUJBb0lCQUhFMkFkV3pRcmJoUnYzRwpDVjdIdzdjWFZYTnBJek84QkQwVWFpa05vREdjYUh2dWNEay8xQlR0REdnNVExNUVHWVh5bUxBZzZFcXpWMFBDCmpvQjIvMWtPNmRMRWxBMTlaMnROZGJzZnM3NTZCOXRiY1lvMzFOeXpSeHhUbHoxN0M2cWdzTkU2VWhqL0l1bkgKUVAwR2c3RWM4NjFWUmtLRmJLemZiSGJZR3JxcHdXc0dOWTN6NzU3aFZGQmkyMWxEQ0gwejdnNGkrWEZBSnVHcgpvT1lKTXBTZHROckxsZkxXZ3BqR3FwbjJURUtrTnowaDJzM0VMcitleVc3WWZpdWRzUjRkS0RaUWtZYkdMTEpaCk55c3JVUWdWd2tqVFJMUXlHaW95NUczb1ZEeFVTd0RtWG0xQmsvM3djRkFoalJiNWIzdDJYSFNBaWFaNW1wOXYKQ25nM2VVRUNnWUVBOWxBaFFrNG84SzVnS2g3cElvcE5WT05LcXZScHVVVVppV040aFJsYTZRNE5kSGsyM1hQWgphdE5oa0JHN0lkamZMZFVTaEpXenh3dnBNMUlPbVdJRUl1UDl6dEd3c2F3SXROQjVCYXRFSHVVN0RTbHROaDd4Cld6eHg0bEdEY0xGTmlrNVlNOFZYMmVpMURlM3Zkc3pOS2lma0JIUXFnZnN4VTZ6TEYzRnc1TEVDZ1lFQTdFU0EKRkhSMks1M2xKaVJPWDR5UmdNM0xSNEJMcEw4OUlna3ZKQkU3QWZ4WXZ1OHdXdTk4aG5SOTJvaXVkRDBqam1tWApjWnd0SVE3SE5QNmJ1ekU0bUNZclFicjJ0U0NYMUdsLzA4MDlVSWI2N3cyYlVHVzBlWmNRVkRxMEZMZ2lvZlVaCkk3by9vQktMQVI0Ym9ITE9Ga20xOUZqWlA4SjFLU05MUDNKS0FtTUNnWUFOTmZFQ3VHUnp2RGFHSzlBL1BRRzIKeXRZSFkwS0VZRk5sVGdONXlBbGJOSmkrSlg0dTFIYlZ4dTZWcG8zTjIrN2thMmdwMmttaEpGOW1sRUVhTXVxYgo0SFNOY2l1eTY5SXZ1SHExTmlGYU10cys4bmpjRFQ3T3NPZyt4alp4aGVEdHlSUHIrdXFpVWx2Ym1tWmNqZEYzCk1GcUhicCtWQng3M0tPNWZuSUw4a1FLQmdGNEF4eURjVVdQN04zL2NkQjVLRkY0MkF3b1l2bi8yNHNEVy9KMlMKQ1hNNXpxbHhDMEV6QmMyTkxjRzBIZ3o3Z2xrWUkvdzgwaXZUOEdoaVlOMnlzTHpBZXZkMUJ0RjcvVXl6Q1B2aApMZU1MUVcyNWNURWt0aENtalFXbU1aNEl3U2JGR05LQk9PMWNVMWdIZmFCeDdSTXJFcXo4YUx1WWgvcnRJdlJFCmFiUFhBb0dBY3FCSzQrZSttWUYwUFZzbWVnd05ZK2YyWlg2eUI0QkU3ZS8vR0IxVHZnbGtWTVNHR2FtVFgvcEsKUU1EcU1tWld4RThxYThyV2llS0o1MGpJZWpJSUJEZUU4ZzNUS3Z2SlJYTVlnNlBkdmRUYjltZURJV0gyUC9DLwpCbGVqNmRSSi8wa0NtQm5yQlhYWUpqR2tNWDk1cmU2VXZqeVRnVlRQdjM5OGVuWmU2QmM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT1FZVFlUeDVMQ3pQbnVpdHdPLzE3akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ETXdNelV4V2hjTk1qWXdOakUyTURNdwpNelV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpVOGN0dEp4Qy9BT3gyckJreUtEQStoY1U3bTlpM3RwSDRsQlVoV24rSDB2NTE1ZEYKQWpEaktQaEdzeVVneERiYnozdi9ZcER5YlhzZlAyRGtjd1J3bnVjbUg0V240V3JCMXFBTHRzTmF3N3QxS1pnSgp2S0c5VkpHQy9uR05lRUJzeHpFeHpOcTB3Z3ptN3VBa004WUVYYmpFT1RGRm9oY0QrRHJJUElDWUpWN0lWUnA5CnZDRHFtQUtqei9Sak1SekJ1N0ZPck14NCtFL2JUUTVJbkpzUXpVY0pWNDMzR080dlRQeWovUnhjUXdsUG9XRloKODVRWStiemwxYTZpN0dMb1F5KzdSRTNWOVdwZnJ2bDV4N012MWorNHcyTmIzZ2FlcnF6MkZJNHZxbzQ1VWM0ZgpVYldlMnhUL09jMGhZWnJQTExHbWVwckFFM1d1Ni91dG05SnpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxbkkvOU5OM3A5VGNYVzNzUEl2MlcrSE84WUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEaGNiNmZuM3lUY0Q4OHF5UzhXN2ZtWVZiRjI1MXUxWElTZ0ZsdUtkZ2t2SnYwcERSb1pKZll0CjdrTUJmcnlJb1lEc2ZWUlg4azZjOHgwaFpQLzdQSEd6M1lpemRLdW1WZm1TTWhkbjdJN0l5L1FMU1YrU3NKRkEKQThkcU1EaXl5RWVqckNIK0FxUVFYOFZqMnc4T3ZZQ2lqaG04aHVkc0J2dnhyRSsrYmNJWnErODlCRkMreE5aNApLT3dUWXEzSmRnaFZMU3V3aUJENzUxR1FRT21BaU5ZVnFGT1ZjZFNwdlBIeWRRWnI4Z0QvdTVKUzY5d1gzT25tClFwbGZmdHl5RXdXSUNxbitPWTVkQndSTWo4RGVDM3Bjdk5sTE5JaGVKdmNoMVd2K3BMRVNIS2kyNDJRZWJPQ1cKWDBDNUNJUmVzUVhYUGI2SVU2clNrTStvV3JMcXZ3VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNDFQSExiU2NRdndEc2Rxd1pNaWd3UG9YRk81dll0N2FSK0pRVklWcC9oOUwrZGVYClJRSXc0eWo0UnJNbElNUTIyODk3LzJLUThtMTdIejlnNUhNRWNKN25KaCtGcCtGcXdkYWdDN2JEV3NPN2RTbVkKQ2J5aHZWU1JndjV4alhoQWJNY3hNY3phdE1JTTV1N2dKRFBHQkYyNHhEa3hSYUlYQS9nNnlEeUFtQ1ZleUZVYQpmYndnNnBnQ284LzBZekVjd2J1eFRxek1lUGhQMjAwT1NKeWJFTTFIQ1ZlTjl4anVMMHo4by8wY1hFTUpUNkZoCldmT1VHUG04NWRXdW91eGk2RU12dTBSTjFmVnFYNjc1ZWNlekw5WS91TU5qVzk0R25xNnM5aFNPTDZxT09WSE8KSDFHMW50c1Uvem5OSVdHYXp5eXhwbnFhd0JOMXJ1djdyWnZTY3dJREFRQUJBb0lCQUhFMkFkV3pRcmJoUnYzRwpDVjdIdzdjWFZYTnBJek84QkQwVWFpa05vREdjYUh2dWNEay8xQlR0REdnNVExNUVHWVh5bUxBZzZFcXpWMFBDCmpvQjIvMWtPNmRMRWxBMTlaMnROZGJzZnM3NTZCOXRiY1lvMzFOeXpSeHhUbHoxN0M2cWdzTkU2VWhqL0l1bkgKUVAwR2c3RWM4NjFWUmtLRmJLemZiSGJZR3JxcHdXc0dOWTN6NzU3aFZGQmkyMWxEQ0gwejdnNGkrWEZBSnVHcgpvT1lKTXBTZHROckxsZkxXZ3BqR3FwbjJURUtrTnowaDJzM0VMcitleVc3WWZpdWRzUjRkS0RaUWtZYkdMTEpaCk55c3JVUWdWd2tqVFJMUXlHaW95NUczb1ZEeFVTd0RtWG0xQmsvM3djRkFoalJiNWIzdDJYSFNBaWFaNW1wOXYKQ25nM2VVRUNnWUVBOWxBaFFrNG84SzVnS2g3cElvcE5WT05LcXZScHVVVVppV040aFJsYTZRNE5kSGsyM1hQWgphdE5oa0JHN0lkamZMZFVTaEpXenh3dnBNMUlPbVdJRUl1UDl6dEd3c2F3SXROQjVCYXRFSHVVN0RTbHROaDd4Cld6eHg0bEdEY0xGTmlrNVlNOFZYMmVpMURlM3Zkc3pOS2lma0JIUXFnZnN4VTZ6TEYzRnc1TEVDZ1lFQTdFU0EKRkhSMks1M2xKaVJPWDR5UmdNM0xSNEJMcEw4OUlna3ZKQkU3QWZ4WXZ1OHdXdTk4aG5SOTJvaXVkRDBqam1tWApjWnd0SVE3SE5QNmJ1ekU0bUNZclFicjJ0U0NYMUdsLzA4MDlVSWI2N3cyYlVHVzBlWmNRVkRxMEZMZ2lvZlVaCkk3by9vQktMQVI0Ym9ITE9Ga20xOUZqWlA4SjFLU05MUDNKS0FtTUNnWUFOTmZFQ3VHUnp2RGFHSzlBL1BRRzIKeXRZSFkwS0VZRk5sVGdONXlBbGJOSmkrSlg0dTFIYlZ4dTZWcG8zTjIrN2thMmdwMmttaEpGOW1sRUVhTXVxYgo0SFNOY2l1eTY5SXZ1SHExTmlGYU10cys4bmpjRFQ3T3NPZyt4alp4aGVEdHlSUHIrdXFpVWx2Ym1tWmNqZEYzCk1GcUhicCtWQng3M0tPNWZuSUw4a1FLQmdGNEF4eURjVVdQN04zL2NkQjVLRkY0MkF3b1l2bi8yNHNEVy9KMlMKQ1hNNXpxbHhDMEV6QmMyTkxjRzBIZ3o3Z2xrWUkvdzgwaXZUOEdoaVlOMnlzTHpBZXZkMUJ0RjcvVXl6Q1B2aApMZU1MUVcyNWNURWt0aENtalFXbU1aNEl3U2JGR05LQk9PMWNVMWdIZmFCeDdSTXJFcXo4YUx1WWgvcnRJdlJFCmFiUFhBb0dBY3FCSzQrZSttWUYwUFZzbWVnd05ZK2YyWlg2eUI0QkU3ZS8vR0IxVHZnbGtWTVNHR2FtVFgvcEsKUU1EcU1tWld4RThxYThyV2llS0o1MGpJZWpJSUJEZUU4ZzNUS3Z2SlJYTVlnNlBkdmRUYjltZURJV0gyUC9DLwpCbGVqNmRSSi8wa0NtQm5yQlhYWUpqR2tNWDk1cmU2VXZqeVRnVlRQdjM5OGVuWmU2QmM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT1FZVFlUeDVMQ3pQbnVpdHdPLzE3akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ETXdNelV4V2hjTk1qWXdOakUyTURNdwpNelV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpVOGN0dEp4Qy9BT3gyckJreUtEQStoY1U3bTlpM3RwSDRsQlVoV24rSDB2NTE1ZEYKQWpEaktQaEdzeVVneERiYnozdi9ZcER5YlhzZlAyRGtjd1J3bnVjbUg0V240V3JCMXFBTHRzTmF3N3QxS1pnSgp2S0c5VkpHQy9uR05lRUJzeHpFeHpOcTB3Z3ptN3VBa004WUVYYmpFT1RGRm9oY0QrRHJJUElDWUpWN0lWUnA5CnZDRHFtQUtqei9Sak1SekJ1N0ZPck14NCtFL2JUUTVJbkpzUXpVY0pWNDMzR080dlRQeWovUnhjUXdsUG9XRloKODVRWStiemwxYTZpN0dMb1F5KzdSRTNWOVdwZnJ2bDV4N012MWorNHcyTmIzZ2FlcnF6MkZJNHZxbzQ1VWM0ZgpVYldlMnhUL09jMGhZWnJQTExHbWVwckFFM1d1Ni91dG05SnpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxbkkvOU5OM3A5VGNYVzNzUEl2MlcrSE84WUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEaGNiNmZuM3lUY0Q4OHF5UzhXN2ZtWVZiRjI1MXUxWElTZ0ZsdUtkZ2t2SnYwcERSb1pKZll0CjdrTUJmcnlJb1lEc2ZWUlg4azZjOHgwaFpQLzdQSEd6M1lpemRLdW1WZm1TTWhkbjdJN0l5L1FMU1YrU3NKRkEKQThkcU1EaXl5RWVqckNIK0FxUVFYOFZqMnc4T3ZZQ2lqaG04aHVkc0J2dnhyRSsrYmNJWnErODlCRkMreE5aNApLT3dUWXEzSmRnaFZMU3V3aUJENzUxR1FRT21BaU5ZVnFGT1ZjZFNwdlBIeWRRWnI4Z0QvdTVKUzY5d1gzT25tClFwbGZmdHl5RXdXSUNxbitPWTVkQndSTWo4RGVDM3Bjdk5sTE5JaGVKdmNoMVd2K3BMRVNIS2kyNDJRZWJPQ1cKWDBDNUNJUmVzUVhYUGI2SVU2clNrTStvV3JMcXZ3VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZnZvUE1mQk9mUWNsZHluSlcwTmdhVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ETXdNelV4V2hjTk1qWXdOakUyTURNdwpNelV4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaEY4RFIrNkwyZk5vZzJhQ24ydHdXZ0tmTnV6NDIKNmUxRTRLMHVoTlJpelhEUDRvV3kzb25Rd2dkZDdLbkY1VlE1ZEVuSXI5WlowcDFwTXR3cmVYbTlCQytwWWNYaAo3MmFzb2F0VzZWS2ZuQlhMamRIa0VEd0pPU0YzVFVmaWFyMXNTbHl0OHJNZ0RjZmQwbTZ2OTVTRVcxTXp2dmhZCkhkdTFwL1JZc0tsdVRLeWJHVDY5cDBGdUt3NThEdnNqOUUwbWQyY1RmMXhpTXJWZXFRazRsY3ZJMFNKZVM0MnUKYW5lMnVCZ3lsUklxdnlWZU9WNnpUSHZRSU9IQ0pkV2VySWI5WmhJRW0xRmtiRHBNQ0JrcVJ6bTJIOG10OGpEdgorWWdMcFhxLzBxdTA1RWxncW15U0l1K2hJSFgvSlBtMms4dE5QNEovZGVJV3NTSkNoeWNkSEpncEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZOWnlQL1RUZDZmVTNGMXQ3RHlMOWx2aAp6dkdBTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUF0Y2VXMWxBWWI0NVhYVzhPVFRTSGY0R2c1RUhUSFlWTHRKQ1lBWFc4UjBJZnhjaHIKaG1kbzgvVDUydVJQU0V6QW53NllZWTJ1bU11dmNMNjVQKzRlUWt0b3FJcmF3bVg3QXJrN2hVR1huajdPNlI0RQp3SVVrSTVHcDhhbFppeVppa2NUaERlV3lTNEhmTjlZMkJmZHduQWpualgxNkkyNWZRVXVNYVdoR0V4ZnRlNE1yCkkxd1JGRUF2Vm5ZWkxqdkl6eU1UbEdCZFdDOElIamFpKzQ2T0hXM0FnTTFzWWVSNHN3Qks1eDJJNWpUN1BoWVEKa3ZRd25tdW1VMjZrc2kxMXYybHFNN0lSMjdwVnR5N0Q1bWNnbFhqMmRxK25FSVJPY25UamRIZG83c1J0dU94WgpxelJvS3dROGc5SFViZmw5dlpHWkozSnJaTmthaE9Vb0N6MlNRZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNFJmQTBmdWk5bnphSU5tZ3A5cmNGb0NuemJzK051bnRST0N0TG9UVVlzMXd6K0tGCnN0NkowTUlIWGV5cHhlVlVPWFJKeUsvV1dkS2RhVExjSzNsNXZRUXZxV0hGNGU5bXJLR3JWdWxTbjV3Vnk0M1IKNUJBOENUa2hkMDFING1xOWJFcGNyZkt6SUEzSDNkSnVyL2VVaEZ0VE03NzRXQjNidGFmMFdMQ3Bia3lzbXhrKwp2YWRCYmlzT2ZBNzdJL1JOSm5kbkUzOWNZaksxWHFrSk9KWEx5TkVpWGt1TnJtcDN0cmdZTXBVU0tyOGxYamxlCnMweDcwQ0Rod2lYVm5xeUcvV1lTQkp0UlpHdzZUQWdaS2tjNXRoL0pyZkl3Ny9tSUM2VjZ2OUtydE9SSllLcHMKa2lMdm9TQjEveVQ1dHBQTFRUK0NmM1hpRnJFaVFvY25IUnlZS1FJREFRQUJBb0lCQUJuYkNLTVdMSm56clhxbwpoUFBEQ0JUdG9salhjVVlOaU51b2t6d010ZmpEY0hud296cndwUlA5dGFyc1RIUVc2NTNONWN2UHB1ZWFjY3ByCnRTNnBQWHFneUhqRWFsNlJpVkc3SUZ0VFlkSkRzNTAySlMzMVQzQWZ4K0JVV0RXQjNWQmJHbHBBenFLWDhxVmcKVHFhWDRjOXlUaFJiazF0TDBya0RHZVkySk1BdWgxVXBZZXYxclVEQlVlOWZ5em9aOThqbnQ1V0pmWU9rOCt3eQpZK2tMb09oSE1iLzV1QWcweHBsT0lETm1XWCtaQzMxVEw1RHlqVlRPSlJWeDA4UEJ0dE5aNE1rd0YyR0NrOGUwCmZNd2lwd2ZtSTJSMngxQzRGNGxOTExpNFkyT0s3bUNaTW1ETUk2RXR1OGRVMEp1NUR3Y25WNHF1SjBIUWM3Q0kKcklua1M2RUNnWUVBNXlUQjAwdzdyU3NmTjZDWFZRRFdvRFFZdnl3QzZJZGR0VG5TSFNJUFhWTGRJSnNvdEtiOQpxQ2tTWmRqVlh2dHlTMWF3c0N3bnBoWXJoQ2x0T09hMllRbWZnd3M2RnR0SlJLZ1dEcU55bThNNE1DYjVtRStTCkUrRzF6SWJEeE9jWTNYdmJJblVTSG8reHFud2NqV1JrUkNJLzQ5bDRIbUlxS2pGaWFzaGUxek1DZ1lFQStVeHIKMnMxakdyVmJMOHRiaWcwczJLWTJZQzBZTytqbEVQalRIQi9LWUxtd3ZjY1pVMkx4VnhtWHhWZWZLTWZWbHAzQQpTUzh6Q2tFTXNxQmdKNHY1bU51S0JjR1VXdHIxRXpkalZWSE1ucTJnd1NoKzNHSmxpbXl6V2pzUGsvZDV2YWsrCnVxekNVTUJRczJZczRVamhGWEdENFlFU0dqZndFTXBEQ0dzRll6TUNnWUVBNVdwWE1yaHNWc0VCRi80OWxiSGkKVkZuQTRpWDFzUU9DSDdpRzhrRjNESUtOVmFxS3FWdEJVbUdKa0NxNkJLNy9Ud1Y1RXpLUUc4blBZVHFZM0t3cApBb0ZCb0JoSmpKd1R5YUFuWEZvZ0M3ZWtraTVzOXg2cTl5N0VlWDZjMmxjaEY5dXhzUzZQVUdRQXpCeXBYakR4ClQ2ckt6UVJ3czM5dEtEbWgzQ2lKOFg4Q2dZRUF0UzV6WEd2VTBQNXBMVTB3VkI3TEx4RnRoMngrcGx2V3p3VG4KK1JLcHRLNS80dzBtUE5JMThFVnJaa01PSzBkQTFkd0VlYXZSL212VVhLWHQvQS9nOE5UdGRNMkJrcDU3YXVIZwpVWXZIbUxNN2wrWmtmS3NPZlJJUEwwNnBQYktvU2MwTkNBS3lucG1HalR0KzlxUk80WlRFY2ttcDdHQW5HeXpFCmx3T2d3TDBDZ1lFQWtQRUxTZjgvN3haS3J2TmY4R2JRR2hrOFY0Ry9LbE9qQmkycGZ0aVdTUnFPME9UOVVLazkKM1VDNEZ3a1UvNXF1bVBHV3dtaUlmRmhqZ3lwKzJwYTlPbmltZ3lRS0NwbEFqcU1hVGZjRVUzdk5Rc05HN3NJLworc3FnRGZlb2dRRzYxZmlPdEUzOFF5cmkrbG42Y0hHc09mdUhBeHdYa3dRSlpTY0JTd1JocjVzPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRT1FZVFlUeDVMQ3pQbnVpdHdPLzE3akFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ETXdNelV4V2hjTk1qWXdOakUyTURNdwpNelV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpVOGN0dEp4Qy9BT3gyckJreUtEQStoY1U3bTlpM3RwSDRsQlVoV24rSDB2NTE1ZEYKQWpEaktQaEdzeVVneERiYnozdi9ZcER5YlhzZlAyRGtjd1J3bnVjbUg0V240V3JCMXFBTHRzTmF3N3QxS1pnSgp2S0c5VkpHQy9uR05lRUJzeHpFeHpOcTB3Z3ptN3VBa004WUVYYmpFT1RGRm9oY0QrRHJJUElDWUpWN0lWUnA5CnZDRHFtQUtqei9Sak1SekJ1N0ZPck14NCtFL2JUUTVJbkpzUXpVY0pWNDMzR080dlRQeWovUnhjUXdsUG9XRloKODVRWStiemwxYTZpN0dMb1F5KzdSRTNWOVdwZnJ2bDV4N012MWorNHcyTmIzZ2FlcnF6MkZJNHZxbzQ1VWM0ZgpVYldlMnhUL09jMGhZWnJQTExHbWVwckFFM1d1Ni91dG05SnpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVUxbkkvOU5OM3A5VGNYVzNzUEl2MlcrSE84WUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEaGNiNmZuM3lUY0Q4OHF5UzhXN2ZtWVZiRjI1MXUxWElTZ0ZsdUtkZ2t2SnYwcERSb1pKZll0CjdrTUJmcnlJb1lEc2ZWUlg4azZjOHgwaFpQLzdQSEd6M1lpemRLdW1WZm1TTWhkbjdJN0l5L1FMU1YrU3NKRkEKQThkcU1EaXl5RWVqckNIK0FxUVFYOFZqMnc4T3ZZQ2lqaG04aHVkc0J2dnhyRSsrYmNJWnErODlCRkMreE5aNApLT3dUWXEzSmRnaFZMU3V3aUJENzUxR1FRT21BaU5ZVnFGT1ZjZFNwdlBIeWRRWnI4Z0QvdTVKUzY5d1gzT25tClFwbGZmdHl5RXdXSUNxbitPWTVkQndSTWo4RGVDM3Bjdk5sTE5JaGVKdmNoMVd2K3BMRVNIS2kyNDJRZWJPQ1cKWDBDNUNJUmVzUVhYUGI2SVU2clNrTStvV3JMcXZ3VT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQVBzOEo1NHBjZnhJOURjNHJZYUJ2OE13RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE56QXpNRE0xTVZvWERUSTJNRFl4TmpBegpNRE0xTVZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5nWWp0VnlsQ0YyMGh0aTF5RFYKWGJDVFExM1J2bDkzUDczQ2p5cVpLbjR0bzdwYVNzWFJBNUhpbTN5T2xBYnY5UlR2TVcxa1NKUVpOK2dNbmlXYgpEdE42am1WVUUwUDhQMXU4VXdOZXN2ZHM3aUhob3pGWWRJbTVFRm5welZCK3dudXZnd0xOak1YUVFabFc2SFM5CmN4alloVXNLUjB2U3crRDVsRHVleUlrZHNCWnRPM0xkaWNvOHpVMEo5TXlSVng3dGFaVjJNUTkzeklCTi8zUVMKeTQwOUpSUzBlcU1yYjZJcTFzU252dDZaTmp1T01hS2RjQ0szZXIyeDNtOHEyVEliREJBZmh4S215M1g5Q3pjdQp0WUdBT25oekFRT3RndTBqZjQrakIrQmFWamxZVjFxazBNbkdCZnNIc0N3d1NmQ1BVcnQ4WTV6Ny8vZ09BQXVaCmpTTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTFuSS85Tk4zcDlUYwpYVzNzUEl2MlcrSE84WUF3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQURidzg5NjF3Tmk5R1NDRGdRMmJxY0NaamdxL1MKRWhid2c5VDllSGl6RmxuVjRncGo3S2RJckdteCtES1gra1VVYUpoeW9GTXd6Z0wxQkUxYkR6TTVOL09GTVR3QQpHVmdnMVc2RDRQd1RvZ040NVdTOFZudytxeHkxYzRGU2JRWUhuaGpqa2J5VUxOUlVndlBlM3cxdWdoZFY1VTgzCkVPaWV2eGtiajk4VVAxdU9QcEx0Szk3djJUMEJyRzMxdFJWTlFFSFZXc2Y1cHdyaXNHNGpvS1lnckE3SHVTN0YKMzQ1bk94SndicjlYRW1NY244REZkYVExUHFnZlNqdTlsNGpoNmxFcTlDWVJ5dnR2NDdtLzVhZytqajRMbWRUawpDZlZrT0dXYXhjWERSUTRmbGpxUDg5aFRlTXJGeXdka1hDTm5VRlRWTHRHTXlhVk9YcDA3cDdoL1hRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMkJpTzFYS1VJWGJTRzJMWElOVmRzSk5EWGRHK1gzYy92Y0tQS3BrcWZpMmp1bHBLCnhkRURrZUtiZkk2VUJ1LzFGTzh4YldSSWxCazM2QXllSlpzTzAzcU9aVlFUUS93L1c3eFRBMTZ5OTJ6dUllR2oKTVZoMGlia1FXZW5OVUg3Q2U2K0RBczJNeGRCQm1WYm9kTDF6R05pRlN3cEhTOUxENFBtVU81N0lpUjJ3Rm0wNwpjdDJKeWp6TlRRbjB6SkZYSHUxcGxYWXhEM2ZNZ0UzL2RCTExqVDBsRkxSNm95dHZvaXJXeEtlKzNwazJPNDR4Cm9wMXdJcmQ2dmJIZWJ5clpNaHNNRUIrSEVxYkxkZjBMTnk2MWdZQTZlSE1CQTYyQzdTTi9qNk1INEZwV09WaFgKV3FUUXljWUYrd2V3TERCSjhJOVN1M3hqblB2LytBNEFDNW1OSXdJREFRQUJBb0lCQUU5bU5wVVcxSGEzUWR2dQpKVDFiS0dHSXVtZnVlUlI2ckdEODY3MnJLWUhUSXlXRnA1T25pTGhCbXYvWkkycXBJRlBnenpoeWNIaDZDNkNuCmdqUXZGUE4vUkhMV3dYMXBZWjVEUS8wby9ua0svVFJWdzdDTjM4UDZ5NWM5NE1LQzBOTEJXbEhkVkt3YUtRQSsKZm9ybVVUUC8ybm9IL01wUFZzbUM2b1E5ZzFGZGVlRjRobjB6VzFpWDZNMDBYWmxRNE1jSzFSWXhnRHZ0azVSVgpHNis1THhKczRYekgwL0VDQkE4NEx2WEliaC80L2pBa094b1NqU3dseHdENmFEMS9rQVhtUHZKUEhNUW55Q2pqCkFrRWxWb2dXSlJlRGQ5NitSR1Ayblo3OU16OHpwc3hEMlJYODFrdytvcjA2YklIVUtocCtNS0x1bGZTeTlRZWgKMTRseXJvRUNnWUVBL0ViS3pKRDgxeU5pV0xFMTlaK0hUWlM2VGpTTExaZlowd1VldmFSWjRJeTFhQ0dVVW1RYgpIMVdNK2pLSU1NTG15QWJtV09HREVPVWljbi9jUFdMSW9KcG9UbWUxZEdvenhaZUVNUlNBbWhrYlJlN1NKNXBMClI1T1AvdHdkeDltY1Y1akpxM1lGSnlsVFJic1NjS1NYNlNkcDlFcjFVb09CSXp6SHhvaW1YRThDZ1lFQTIwa1AKWWVUVnVIcHNOMUdHVVFTOTVUbHk3M3RpTDJGYmVJWjlLWnNjR1ZEY1BHdjNxbkxoZTMzUXZhSmZ6NjFsa0tPSQo4R3FNRjNqcVk0Tmo1NDVCd2lVbmpEenVseUdERFMwY0I0SUdlaTVCYnpSUlA4bkQxZkpnOTE4Sk9VSzJ5V01KCnhFaG93b2pzQ3ZleUlCbmZzVzFmdzg2WjJuWnVBRmNETnRjS2FPMENnWUVBN2gxYm1ZNVlPREE3eVg4cWNUWXMKSFh2K0JZYnV2eEFQRjNCRHZiZjg1VWVxaWlqM3VIU29iUUR3MmM4TVlRbjFqbU9FMCt1M0xDRTZURnlHNHFIMAp3REk5dFpPSjMrSEdFQUNkVXo0SXpHcGFKYjN2T2xZV0srOEtBUUorVVg0Q1pXUGZKaWwxWDZ0UDRBZGN0bG1FCjBSclVsVEtUTDFqVWNSQVRlRDdPMTEwQ2dZQlFqRGlyUTh4QmRDNlY3MHRBTFZhM2dXKzNpZ0haMTVBcTZIUEgKT2FPTHBRa1E1TFBYbDFVOThFd2hyQ2czZDhEcjdUWWE0WGhPRXVzOTNJQnhDTzhjcWxzcGh5UTR2V1dQREhmVQpSaTJzNlpxOWgyRWs1aThhUW1yZDBybm5uNXJXeEp0TXp6QXo3T21QYWNhelJlM0dGWi9zbzlJZHpneS84VFpNCkNaZFlUUUtCZ0REcUZTTzRIVGlTS2hySWFrZ0o2S0JpeGRzM1hONlBjZEtNRnJzQzVZSW90S3d6NjBubE9XTGYKN2x5MEhVd0RzVUFlYlBLZDl5V2FTNWNjejdBaGhaUXBFaTZQTjgrUWcyZjZPRnlROVZuc0N6OHd6QnFzVkRyQQpCL21nSUs0UmNoMk5FUlhNK3JFblVZdnFOc0dXcWlkTTkvRDB6MDJxMDJOOWVSczhIaXhjCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.4@sha256:bac057a5130cf75adf5bc363292b1f2642c0c460ac9ff018fcae3daf64873871
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
