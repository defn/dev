apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJ6K0FmMFBkR3hTeHN2TWRXSkhyREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUTBOREUwV2hjTk1qWXdOVEExTURRMApOREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3N0UUpnNGRwRGRYVzNkSU9WN1FtVmR6TURMT2VPYkYwL0NxU2RlMDU5a2dyVU9FVEsKUlZHaHVGMmpJb3B1bHZhUUFXYVM4cDFwMFhqRGc1UkYxbkcvSDVOTGZWUWZmWGwxZllLSjdFSTBNVGIyTzBUUApyUnlOMUJRYWxNYlFTd1JKS2xwRU5VVUFadFdTSjJaRllMbDhYSTdqZ2xmSzFkLzVOalNXSUljSjhLK05xSWpYCnpwU0ZURWFrSEhkSldEczI4R2p0V21EVytMMGVXSGRxaWtldnVFNzJmOHdEdG5DZjUwQzV4OGlKd2trV01iZG0KY0hnbFQ5TzdINy9TcXVXLzROeDBpdnR2VWd6TkVGelB0a0daT3czK0krOVVJZ0pkMEVyNldSajlTUFdaUHhoaQp0bXJaTkdpRmlDa3p3ZnhFc081U0ptb204bUhUOWJnNmVlemhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHUDJ5K0JTQXRCc0REd043NVdaQy9ncVVPU0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFTjQwMnhGWitabXNyZHNZNVZBNzNzS0RzaUFDY2kxaWgxNzRyUm5CY0NNZjZlK2FDcVF4cEFjCi85RmoyQTh4c3J5dXFFRzRpY1NtcEtuaXhmaTJPaGV0ZWJNdG5YaG1FNzIwai9vNXFhY0VhdHJyOU9GbWZFd00KQlEzcm1nTXFvWUxQS3RQMjFGcUdTUXY4VWZ0dzR5UGE4N2JYR1FwWlE0bGFQeGh6a3ZFNnVXNDlnV29ITzkzSwpuRVR4RW5USGxhbTRKYlVpVlBWblo4S3JpQmVJQ3RKYTQramFzNHFIM2JQQVY3WGl6ejNXalJ0b1cvdEptOXlNClZ1Y1liUExCNmt6MnFmam5HdDZBcGV6dWRGbDJQOE9YOCtaTTZiTGJQbE95WjRSMWU3N3dod2Rtd2hqVE12NkUKandNMlg1UFcwRW5WamhvL3ZJeTJEeWs3SEhhZGNNND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBckxVQ1lPSGFRM1YxdDNTRGxlMEpsWGN6QXl6bmpteGRQd3Frblh0T2ZaSUsxRGhFCnlrVlJvYmhkb3lLS2JwYjJrQUZta3ZLZGFkRjR3NE9VUmRaeHZ4K1RTMzFVSDMxNWRYMkNpZXhDTkRFMjlqdEUKejYwY2pkUVVHcFRHMEVzRVNTcGFSRFZGQUdiVmtpZG1SV0M1ZkZ5TzQ0Slh5dFhmK1RZMGxpQ0hDZkN2amFpSQoxODZVaFV4R3BCeDNTVmc3TnZCbzdWcGcxdmk5SGxoM2FvcEhyN2hPOW4vTUE3WnduK2RBdWNmSWljSkpGakczClpuQjRKVS9UdXgrLzBxcmx2K0RjZElyN2IxSU16UkJjejdaQm1Uc04vaVB2VkNJQ1hkQksrbGtZL1VqMW1UOFkKWXJacTJUUm9oWWdwTThIOFJMRHVVaVpxSnZKaDAvVzRPbm5zNFFJREFRQUJBb0lCQUNHaVFxdFJjS3N3aGROTAphcERaRDhPKzZmMVZVbWNITFlXb2NmU0ZYZnpRWXpGL0g4NXdmM3hLSmxvdDBOM0dvby9hNWZuNks3Tys2cERRCjRDQlZxZU01cC9yTWxvUm5jQzcwV1dhNHp3L1JBYzRrTHJ0dkVCK0N6TU44YzlkK3RILzNNb3NVQUxNYVU3OVoKMHUzeDcwMkx6UHY3bDFOV0lYOHNFa09tWkFZSU9vaUpQT1NQVjVvNURyVk5CWGE0bzhwWXZYNjFzbWdtaVZBagpBaEwveDZONG1aUDBZa0RFOU5ramh5M3BHb2FieEg1MklQTW1HYnRwNXd3Ry9tRitjV1pJdzVha3hnK0xpWER4CjM2MndteTk4V29KeXlQUW5kbkJLcUdMRVJjT3RHZzMrK3ExUkdUVGUxSkxicFpvSWVVcUdTNDl5TUNGeXNIUVQKM0ZNK3poRUNnWUVBekE4bXBiMW5pV29oSWNJSkYzTlBJNEVNT0JvbC9kTGQwRkYwQlpIREZnczFYMEdwZC9PcApzMTNlT21hZWZDaFhabkZ3S2hQTmRTdW5JT3FocEJzSkZSa1lCWlB2VDZrSGtNbGpxZlZLK25abm1aaFBJTkxSCnhXTG42OXpKOXZFUDJEb044eG9XOEY0V1UrSWpaaHN1ZEExb0t0ckc3ZkdCQ29xTjg1ckQxblVDZ1lFQTJLcm0KZUNOUzEzeFE3MGZ2ZnMrT0FhL25TR2Q0S1EweFRPZWFhQTd3Qk9pRjl0RGI1bnVkMDRwYlZoWXQ3RW5kRXNjMApBOEoxZ0tEUE9IdHlLbVBWV0p3bWlHSGYzOElxeGVYMllSREZQWXZtSVBYbTN1OFA5ZVpKUWhBZ2l1NlVnUmtnCjl5VDI0WEJ0QlJsOWxhdk01RE91bmNNeWU4dDY0L3BrQWxjVUp6MENnWUVBdEQ0dHhQZ29IQmpDYXk4WkdMMmgKaVpyVFVEcklsQXRPSWxQUVI1c1kxci9QeFBRYTNQazlURkg5bVZoTFpSKzlFNS9mazBzcWovU2ZDMVEwc3QrdQpoaFJFUTZrSUdUVVVtYTlKZVRaUnBDb3lHRm1RaTAyc1BNM0FUWFlZYnljKzk1OVA4d3Q0ZDVpajREUS9VRkZ5CkZ0QkEwcG1zWFVDVTJ0ckh5QVZNTm9FQ2dZQUNCRVUwNVE5R1ZpL2lxa2ErWld3cTg5b3hRRlZML0lWeTg4enEKSHdsNDRqa3MvUEN2Q29PRGpvd2ZGd0hDYTBXVmdTa294OHlVTCtyOTJaaE1jTFZ4cDdKc0hvMFk1aFBEMThvZApTU3lzei9xS1gvK1FINldFWW1wWUpSSkllTVFGRjVqSTlCMGdLQTI3dUdzRTA1NkttVGlNMjE1QzdMZnVHMHlICkFReDgrUUtCZ0VTNWpSdHFGTm1yMGZaY3hodVl2US80TSsrZkZhS3JyVnh2ZXV3QUNsL2V5dXhPbE4rK1Q5cC8KNlJBMlZQcU5nc0c4bEJJQzlaUHgvVUFpdDNTZXIvelE3S1BxdjQzQWdiUGxzVjkrTUc3cmxSa1ZZZGVTUGhOTwpWdHd3bC9tZVBtTitSWWltNDFWZHdsalRVRXFiM0dzVXlCeHg1WktZMVQ3TTdyVXhYWkVqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJ6K0FmMFBkR3hTeHN2TWRXSkhyREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUTBOREUwV2hjTk1qWXdOVEExTURRMApOREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3N0UUpnNGRwRGRYVzNkSU9WN1FtVmR6TURMT2VPYkYwL0NxU2RlMDU5a2dyVU9FVEsKUlZHaHVGMmpJb3B1bHZhUUFXYVM4cDFwMFhqRGc1UkYxbkcvSDVOTGZWUWZmWGwxZllLSjdFSTBNVGIyTzBUUApyUnlOMUJRYWxNYlFTd1JKS2xwRU5VVUFadFdTSjJaRllMbDhYSTdqZ2xmSzFkLzVOalNXSUljSjhLK05xSWpYCnpwU0ZURWFrSEhkSldEczI4R2p0V21EVytMMGVXSGRxaWtldnVFNzJmOHdEdG5DZjUwQzV4OGlKd2trV01iZG0KY0hnbFQ5TzdINy9TcXVXLzROeDBpdnR2VWd6TkVGelB0a0daT3czK0krOVVJZ0pkMEVyNldSajlTUFdaUHhoaQp0bXJaTkdpRmlDa3p3ZnhFc081U0ptb204bUhUOWJnNmVlemhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHUDJ5K0JTQXRCc0REd043NVdaQy9ncVVPU0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFTjQwMnhGWitabXNyZHNZNVZBNzNzS0RzaUFDY2kxaWgxNzRyUm5CY0NNZjZlK2FDcVF4cEFjCi85RmoyQTh4c3J5dXFFRzRpY1NtcEtuaXhmaTJPaGV0ZWJNdG5YaG1FNzIwai9vNXFhY0VhdHJyOU9GbWZFd00KQlEzcm1nTXFvWUxQS3RQMjFGcUdTUXY4VWZ0dzR5UGE4N2JYR1FwWlE0bGFQeGh6a3ZFNnVXNDlnV29ITzkzSwpuRVR4RW5USGxhbTRKYlVpVlBWblo4S3JpQmVJQ3RKYTQramFzNHFIM2JQQVY3WGl6ejNXalJ0b1cvdEptOXlNClZ1Y1liUExCNmt6MnFmam5HdDZBcGV6dWRGbDJQOE9YOCtaTTZiTGJQbE95WjRSMWU3N3dod2Rtd2hqVE12NkUKandNMlg1UFcwRW5WamhvL3ZJeTJEeWs3SEhhZGNNND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBckxVQ1lPSGFRM1YxdDNTRGxlMEpsWGN6QXl6bmpteGRQd3Frblh0T2ZaSUsxRGhFCnlrVlJvYmhkb3lLS2JwYjJrQUZta3ZLZGFkRjR3NE9VUmRaeHZ4K1RTMzFVSDMxNWRYMkNpZXhDTkRFMjlqdEUKejYwY2pkUVVHcFRHMEVzRVNTcGFSRFZGQUdiVmtpZG1SV0M1ZkZ5TzQ0Slh5dFhmK1RZMGxpQ0hDZkN2amFpSQoxODZVaFV4R3BCeDNTVmc3TnZCbzdWcGcxdmk5SGxoM2FvcEhyN2hPOW4vTUE3WnduK2RBdWNmSWljSkpGakczClpuQjRKVS9UdXgrLzBxcmx2K0RjZElyN2IxSU16UkJjejdaQm1Uc04vaVB2VkNJQ1hkQksrbGtZL1VqMW1UOFkKWXJacTJUUm9oWWdwTThIOFJMRHVVaVpxSnZKaDAvVzRPbm5zNFFJREFRQUJBb0lCQUNHaVFxdFJjS3N3aGROTAphcERaRDhPKzZmMVZVbWNITFlXb2NmU0ZYZnpRWXpGL0g4NXdmM3hLSmxvdDBOM0dvby9hNWZuNks3Tys2cERRCjRDQlZxZU01cC9yTWxvUm5jQzcwV1dhNHp3L1JBYzRrTHJ0dkVCK0N6TU44YzlkK3RILzNNb3NVQUxNYVU3OVoKMHUzeDcwMkx6UHY3bDFOV0lYOHNFa09tWkFZSU9vaUpQT1NQVjVvNURyVk5CWGE0bzhwWXZYNjFzbWdtaVZBagpBaEwveDZONG1aUDBZa0RFOU5ramh5M3BHb2FieEg1MklQTW1HYnRwNXd3Ry9tRitjV1pJdzVha3hnK0xpWER4CjM2MndteTk4V29KeXlQUW5kbkJLcUdMRVJjT3RHZzMrK3ExUkdUVGUxSkxicFpvSWVVcUdTNDl5TUNGeXNIUVQKM0ZNK3poRUNnWUVBekE4bXBiMW5pV29oSWNJSkYzTlBJNEVNT0JvbC9kTGQwRkYwQlpIREZnczFYMEdwZC9PcApzMTNlT21hZWZDaFhabkZ3S2hQTmRTdW5JT3FocEJzSkZSa1lCWlB2VDZrSGtNbGpxZlZLK25abm1aaFBJTkxSCnhXTG42OXpKOXZFUDJEb044eG9XOEY0V1UrSWpaaHN1ZEExb0t0ckc3ZkdCQ29xTjg1ckQxblVDZ1lFQTJLcm0KZUNOUzEzeFE3MGZ2ZnMrT0FhL25TR2Q0S1EweFRPZWFhQTd3Qk9pRjl0RGI1bnVkMDRwYlZoWXQ3RW5kRXNjMApBOEoxZ0tEUE9IdHlLbVBWV0p3bWlHSGYzOElxeGVYMllSREZQWXZtSVBYbTN1OFA5ZVpKUWhBZ2l1NlVnUmtnCjl5VDI0WEJ0QlJsOWxhdk01RE91bmNNeWU4dDY0L3BrQWxjVUp6MENnWUVBdEQ0dHhQZ29IQmpDYXk4WkdMMmgKaVpyVFVEcklsQXRPSWxQUVI1c1kxci9QeFBRYTNQazlURkg5bVZoTFpSKzlFNS9mazBzcWovU2ZDMVEwc3QrdQpoaFJFUTZrSUdUVVVtYTlKZVRaUnBDb3lHRm1RaTAyc1BNM0FUWFlZYnljKzk1OVA4d3Q0ZDVpajREUS9VRkZ5CkZ0QkEwcG1zWFVDVTJ0ckh5QVZNTm9FQ2dZQUNCRVUwNVE5R1ZpL2lxa2ErWld3cTg5b3hRRlZML0lWeTg4enEKSHdsNDRqa3MvUEN2Q29PRGpvd2ZGd0hDYTBXVmdTa294OHlVTCtyOTJaaE1jTFZ4cDdKc0hvMFk1aFBEMThvZApTU3lzei9xS1gvK1FINldFWW1wWUpSSkllTVFGRjVqSTlCMGdLQTI3dUdzRTA1NkttVGlNMjE1QzdMZnVHMHlICkFReDgrUUtCZ0VTNWpSdHFGTm1yMGZaY3hodVl2US80TSsrZkZhS3JyVnh2ZXV3QUNsL2V5dXhPbE4rK1Q5cC8KNlJBMlZQcU5nc0c4bEJJQzlaUHgvVUFpdDNTZXIvelE3S1BxdjQzQWdiUGxzVjkrTUc3cmxSa1ZZZGVTUGhOTwpWdHd3bC9tZVBtTitSWWltNDFWZHdsalRVRXFiM0dzVXlCeHg1WktZMVQ3TTdyVXhYWkVqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJ6K0FmMFBkR3hTeHN2TWRXSkhyREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUTBOREUwV2hjTk1qWXdOVEExTURRMApOREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3N0UUpnNGRwRGRYVzNkSU9WN1FtVmR6TURMT2VPYkYwL0NxU2RlMDU5a2dyVU9FVEsKUlZHaHVGMmpJb3B1bHZhUUFXYVM4cDFwMFhqRGc1UkYxbkcvSDVOTGZWUWZmWGwxZllLSjdFSTBNVGIyTzBUUApyUnlOMUJRYWxNYlFTd1JKS2xwRU5VVUFadFdTSjJaRllMbDhYSTdqZ2xmSzFkLzVOalNXSUljSjhLK05xSWpYCnpwU0ZURWFrSEhkSldEczI4R2p0V21EVytMMGVXSGRxaWtldnVFNzJmOHdEdG5DZjUwQzV4OGlKd2trV01iZG0KY0hnbFQ5TzdINy9TcXVXLzROeDBpdnR2VWd6TkVGelB0a0daT3czK0krOVVJZ0pkMEVyNldSajlTUFdaUHhoaQp0bXJaTkdpRmlDa3p3ZnhFc081U0ptb204bUhUOWJnNmVlemhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHUDJ5K0JTQXRCc0REd043NVdaQy9ncVVPU0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFTjQwMnhGWitabXNyZHNZNVZBNzNzS0RzaUFDY2kxaWgxNzRyUm5CY0NNZjZlK2FDcVF4cEFjCi85RmoyQTh4c3J5dXFFRzRpY1NtcEtuaXhmaTJPaGV0ZWJNdG5YaG1FNzIwai9vNXFhY0VhdHJyOU9GbWZFd00KQlEzcm1nTXFvWUxQS3RQMjFGcUdTUXY4VWZ0dzR5UGE4N2JYR1FwWlE0bGFQeGh6a3ZFNnVXNDlnV29ITzkzSwpuRVR4RW5USGxhbTRKYlVpVlBWblo4S3JpQmVJQ3RKYTQramFzNHFIM2JQQVY3WGl6ejNXalJ0b1cvdEptOXlNClZ1Y1liUExCNmt6MnFmam5HdDZBcGV6dWRGbDJQOE9YOCtaTTZiTGJQbE95WjRSMWU3N3dod2Rtd2hqVE12NkUKandNMlg1UFcwRW5WamhvL3ZJeTJEeWs3SEhhZGNNND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQTF5UE5HNTUxYnR1Z3ROOTIrbVFtakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUTBOREUwV2hjTk1qWXdOVEExTURRMApOREUwV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdnFMelQzeHhuVlFVUWxEUUVnYXFqcWlSSkE3anEKWDZDbytrZ1BRa2xEcUJlNjROLzV0cHo5Zm4xUkxaei9kU0p6K1NXWTBRd1ZzdlBYMGVWYWFtZ3pRcFVCaVhyaQpVRksvc29NaFNKNWdkMTlqWnhRTWc4bUlDOUJxZFp2bUxGL2lRUEZiU1VQV05nSDYvV0ROblJCdXhJeGpYbzMrCjh5L0ZRcnZCdklNVDE0b3dWMXVaVGxPOGs1bzVhRWpnKzJFTmFteTRLRXM3WVVqMC94MmdvMm4rNmlzSEZHZ28KN1VFVndhL2ZuKzFmQTNIZ0ljRnNFVXkrWWxlTjgrbDBwQXpBM2hEU08xTTRCdEIxVUFkLzk3STRUWnFqWVc4bgpicGd3RnFaSUxvb0R5TmxuY2VGVWhDRGJ2Mkh6eDVDaGVRNXd3S3ZXSVZMd21lM01GbkpwTzlzVkFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZCajlzdmdVZ0xRYkF3OERlK1ZtUXY0SwpsRGtpTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFUdjRjNzRsVHZ2aWtHSVBESTdmUVl2NDlOV3lpMkFCcW1PQjVmVUtXRlFpTGZNQkQKZlNweTVKUU1VcW02YVB5ZXgvbXcydHpwTWdFTXViTDl4QzArUXlnRDQwbzB2Q0s4a3pJYWJodGF6SEMyR0Z6WQp1THFiT1pqcGRMVm9aNEZDUnFQVHp0eitHNkpBcFZINjM1a1VEajYzZG9KNnorS0dhQVp0WU5LSUtGQnRHYkZJCk1JN2RVZ2JzVUdLQmJSL0hsTERrQ1VOM1l5RnRvVDlSelVnZ01oaVdaYmtJS2NMVkY2VGFHY0hsSWR3YTh1OFAKbzR5S1ZtQ2NqS0dwaGZuRWlyOVhlc3JZeGRMS3RQUXJ4NktRdGNXTEowYmc1YTIycTJIeFVwMHVURmpnZTZMOApUOS85WkFyVTQwOWo4UGpnT093MUM0VTVURE1JbzlQaGtxNlVxdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjZpODA5OGNaMVVGRUpRMEJJR3FvNm9rU1FPNDZsK2dxUHBJRDBKSlE2Z1h1dURmCitiYWMvWDU5VVMyYy8zVWljL2tsbU5FTUZiTHoxOUhsV21wb00wS1ZBWWw2NGxCU3Y3S0RJVWllWUhkZlkyY1UKRElQSmlBdlFhbldiNWl4ZjRrRHhXMGxEMWpZQit2MWd6WjBRYnNTTVkxNk4vdk12eFVLN3dieURFOWVLTUZkYgptVTVUdkpPYU9XaEk0UHRoRFdwc3VDaExPMkZJOVA4ZG9LTnAvdW9yQnhSb0tPMUJGY0d2MzUvdFh3Tng0Q0hCCmJCRk12bUpYamZQcGRLUU13TjRRMGp0VE9BYlFkVkFIZi9leU9FMmFvMkZ2SjI2WU1CYW1TQzZLQThqWlozSGgKVklRZzI3OWg4OGVRb1hrT2NNQ3IxaUZTOEpudHpCWnlhVHZiRlFJREFRQUJBb0lCQVFDQTB0QUExZ3hmbjlPQwpFQjZCKzVKb1N2d25iQXB1SUVtVUExRmJsM0pob3VJY1ZKVU43cVg5cG9sRFFwOTBIYlJ4dHhPaW1oVXh5TGJaCjNYNUZxK25WUmd3L1AxTVdyRyt6Vkxpa2JUeHhaTHBaRFJ4Ly9ScU1vcFZycmVyeWlES2RuS0VsSUhzV215OGkKb2pZZk5RUDdLRHdKR0N3dEFLNVZEWmJqQTF4aDdLYkpxaHBORHJOMDNCNkk5UndJdVhWb3M1QVBFR2xDY1JTSwp4Y01mWndZbldLeG5NSGRBdXRDaGdMNW5jNm9vbHVrM1ppZ2VJYWwrTjFPY3NHdHVlQ0IreGNnaDBHR1hRZHQxCkdvN1hiV0V4N1NSeWRaemYrUEJ6VWkzSmcwY2xUd2cxVmFEZFgyL1Bxc2tVRGxyUmhsOUltZXRwbWJ1ZWF2QTIKQUJyRzFjblZBb0dCQU5VS1FsTEFCV2JuSXRHSzBDeUwwN090MWIyMkFIY1k2cmh6M1RMK0x3R2NYVWkrZnRYTApzL3Y4YVIyOGpMQ0N5bWdzcU5lbEtOOVNSL1d4bFNxNUZQbzRvSlVuRkxGNStrU2JmSmdGdjYrTDlrVW1xU2ZGCjRYT3hUMSt4SU1KZXNYNndicXc0ZmdqMGFGTXNwYnNJL2M3eHVWMTZPdlBHSjBYcUJpcDcwUXcvQW9HQkFOTVUKeEUycURRUmJjc0lFc2tkdkxVZWpyYURQZFBxZm9XQ3d6VGUwdFJKcEZqQU4zMmlST3RGbUJFVjFPODRqNU1sdQppQTc5bURzT21aNXROQzU5bFhyc2VFVTY3QkVIRDJSZlN4ZVBsajhBeUg3VHVhN21scUJqMENqVld3L0VDVXo3ClRBOWpaK1VLdUVQTUQrS2YzNVl4ZHhzZlE1ZWJ0d1FiNSs5alVCT3JBb0dBUFpGbGNYekZFdVFoaitWS0hGV2MKclFURURMdVlqdExJb3QzNVEwOXFUbERlTkxPNC9CaU92M2hHK0swUkM4SUF0UEtUS1I4MkhMUXV6N2F1b1ZZegoxY3lmdS9zN1k3OFlzTk11d3RDR2dUazF4dTVSWElrM2lyUG5lSVE4TDNBbVk3S2hpV3dhSUlSaDBnZkpMYkIvCmlWc2Fjd1ZzSEI5Y0lqeHI0OE04dXdrQ2dZRUFnRjR3dzhxVy8vOWRXd0RnS3ZGQjZEOXlhRW5DS21qS0M3TjYKR2xhYmlBYkFwNWpJTlIrZFZadGxIWmllTms4OTVBS0VYQmw5YXUwR0g0THFLUnZXdkZyekNhYzd5Vjh4elNqbQowZjFRc2lBWHpvbVVjdmxvd1VIeVplTGE3a3VhSEdiM2FxUlptc0ZhTG1EN2lDY1NJcFVTaWp3Skx6cFRvdndWCm9WQVVjdUVDZ1lCazdtR3BGUlIxTXJXcFZ0ZzZPZmNESmg5NFBkdkJsSmEvdUE3U3ovZUNla1Y5dzBFbEZmMmMKSkY1UE04d2hQZVlXeFFvbS9lWno1azF5RkhDSTZZS2FCMWFsUE1QSHZ3NmM5cWphcFhIbFRzcGRTaUtncnNOSwo4S3dLR1FQakpubVVZd1V5UDNObmZuaVBINXlWcmZQSGhJdzFGMEZwS0hoQ2NVWXpPa05mbHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVEJ6K0FmMFBkR3hTeHN2TWRXSkhyREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUTBOREUwV2hjTk1qWXdOVEExTURRMApOREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3N0UUpnNGRwRGRYVzNkSU9WN1FtVmR6TURMT2VPYkYwL0NxU2RlMDU5a2dyVU9FVEsKUlZHaHVGMmpJb3B1bHZhUUFXYVM4cDFwMFhqRGc1UkYxbkcvSDVOTGZWUWZmWGwxZllLSjdFSTBNVGIyTzBUUApyUnlOMUJRYWxNYlFTd1JKS2xwRU5VVUFadFdTSjJaRllMbDhYSTdqZ2xmSzFkLzVOalNXSUljSjhLK05xSWpYCnpwU0ZURWFrSEhkSldEczI4R2p0V21EVytMMGVXSGRxaWtldnVFNzJmOHdEdG5DZjUwQzV4OGlKd2trV01iZG0KY0hnbFQ5TzdINy9TcXVXLzROeDBpdnR2VWd6TkVGelB0a0daT3czK0krOVVJZ0pkMEVyNldSajlTUFdaUHhoaQp0bXJaTkdpRmlDa3p3ZnhFc081U0ptb204bUhUOWJnNmVlemhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVHUDJ5K0JTQXRCc0REd043NVdaQy9ncVVPU0l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFFTjQwMnhGWitabXNyZHNZNVZBNzNzS0RzaUFDY2kxaWgxNzRyUm5CY0NNZjZlK2FDcVF4cEFjCi85RmoyQTh4c3J5dXFFRzRpY1NtcEtuaXhmaTJPaGV0ZWJNdG5YaG1FNzIwai9vNXFhY0VhdHJyOU9GbWZFd00KQlEzcm1nTXFvWUxQS3RQMjFGcUdTUXY4VWZ0dzR5UGE4N2JYR1FwWlE0bGFQeGh6a3ZFNnVXNDlnV29ITzkzSwpuRVR4RW5USGxhbTRKYlVpVlBWblo4S3JpQmVJQ3RKYTQramFzNHFIM2JQQVY3WGl6ejNXalJ0b1cvdEptOXlNClZ1Y1liUExCNmt6MnFmam5HdDZBcGV6dWRGbDJQOE9YOCtaTTZiTGJQbE95WjRSMWU3N3dod2Rtd2hqVE12NkUKandNMlg1UFcwRW5WamhvL3ZJeTJEeWs3SEhhZGNNND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQUxXeE5XUkYzb2FXaW8za3NHak1mUnN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBORFF4TkZvWERUSTJNRFV3TlRBMApORFF4TkZvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxJOTIwVEo4aXV3bDc2cS9FM0kKNlgzM2pSMDh3Q1V4SE12RU1IdXN3M1VwS1FBTGNjQ2c2U0lwalk2d3J2cDQ4ZWoydys2aWVqNnlpaldvQ1JUTgpVTU45ZEcvRVZuRkVmQ1ZUemw4WFo4dmQrQVp3N3RTQUloaitPcFRCd1BHekptbUxHSnBDYU5IUnZHdTFXZDlGCkxRVHZYeWEyTkNjRG1JMHBYZUJ0UWlPNWtkVlFkaG90MmVsNHpsVFp5M0owU2Z5OWNDTlJCZDBWMHFkOWdQTmMKbzcxT3hWWjRHM0hkOTZmU0hRcnZGSGVzOXFoallaaHBJQVo5RWNVRitvaU1vWWRXcEFCOXpyMHpCTjVITnlHbApZU3psMlc2NWpiYUx4dlpUNk42eXpzbjdmUnhtdjdiU0RiaVVSRW1jZmRFZkxsTFBtZlhaMEhYamxXUWs5alB5CjdtOENBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUdQMnkrQlNBdEJzRApEd043NVdaQy9ncVVPU0l3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQU5mVGtKM2JXb1IwbjhxV0t4OVFDZTRZb3g0bVMKV1g4MVc2NFAxWGdvb2VMc2VYaFFiRVNKWTBlOTYxdWs3dktCaUtaczZtd0s5dFhIem1Qd1MwTjE5UVQ2VDZteAphMXI5VFlUSFIxaTRRcjZtY2hXZWV0dGZZU1RDYXpVU0ExM2ZSRWtaS0lKaVE1TXZmNXRVZlZLdE13UVp0N21mCmlLbWpsUzAvTDZ3b2pxSE5BbXRxRWtYL0RXOEljdVFFMUZYVE5ZYlkycU9FSCtFRHMycmJDSEZXYnNhTVl3NjcKRGJYSjJmcEF0NEdza2RubUdOS2VKMW9mMHdoU3o3UitoaXN6RkVSRm1zbTNmN0kyZzV4WjBLTFh5dDVuemtXRApSVk4wM2hlSE1PdTlWSjhDdTFGSTBlNkF1bFlPamNZT3B1WUNOQUIvMG1qamZRYVBFbTl1Z2ZON2F3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc2ozYlJNbnlLN0NYdnFyOFRjanBmZmVOSFR6QUpURWN5OFF3ZTZ6RGRTa3BBQXR4CndLRHBJaW1OanJDdStuang2UGJEN3FKNlByS0tOYWdKRk0xUXczMTBiOFJXY1VSOEpWUE9YeGRueTkzNEJuRHUKMUlBaUdQNDZsTUhBOGJNbWFZc1lta0pvMGRHOGE3VlozMFV0Qk85ZkpyWTBKd09ZalNsZDRHMUNJN21SMVZCMgpHaTNaNlhqT1ZObkxjblJKL0wxd0kxRUYzUlhTcDMyQTgxeWp2VTdGVm5nYmNkMzNwOUlkQ3U4VWQ2ejJxR05oCm1Ha2dCbjBSeFFYNmlJeWhoMWFrQUgzT3ZUTUUza2MzSWFWaExPWFpicm1OdG92RzlsUG8zckxPeWZ0OUhHYS8KdHRJTnVKUkVTWng5MFI4dVVzK1o5ZG5RZGVPVlpDVDJNL0x1YndJREFRQUJBb0lCQUVSRktRMHFCSlh6Wjh2aQpGZzE5SE9IZ3hhNGpMTDJTR0NOOEc4M2pHR0p4eDRCNjRiRVVjUGRpenhPT1hSY1c2Q0dCRXY3K1FMQnZGajBECkJhZHdGTFVzQWtNbEFxOFR1akZaN2p2QjdVSEszVXNxU25BZU8vRXl2eUZuTFEzbXZwbkNhMFA2bDhkMS9DT04KTE1VMTY4NXVHUlhzeUFFQmdaYmY5MU1VeGphRUk3bGpLU3I1UUw3RE05SzdkK0p1NTNyRTJiNFpHVnZsbEVMUQozekZSKzFCaUp3K2x5SFV3WEsvKzh5Qzk4eG90ZEdxRmphVUtHcFpTQS9CZWNreG5kUG5LTlpaSDYyQnV2d3ZRCk03Ynd0aGxnNG9wUVVXS0w0UDJ5VHV3YURrbmtSYm41NDU4STRFUU00QzhmdzFnSTBNTGRudzBvZElwNVZrYkMKVzV0OERHRUNnWUVBemw5aklncDNUcWF5ZkJ2Z3JYYmF1UnJOTk1ZRmpGL1ZiME1HSXNIc245cm5BYzM2azdTcAptV1ZQODloWDl6VFpBbzJ2Z1NMY3U4UGFraUtaZ1U0akRtdms3UTRVUjcrQUxmOFF1YURWZHJBTmliQjh2M3hHCjZxSkl5SXBQMldzY3dRS1BESUZZeW9rV2VuTzdTeDlxWGJ4cjg5YWp2NWhrRFhqdk5xQ05PdWNDZ1lFQTNScXUKNkpiZzFGSnJhQ0VkdVJueE5qamk4c2h6Yi9sbHJBVjNoL0dBaDdSL1k1Ri9RMHhIbFU2YmdLNjhDTGhlY1E0agpkMFJWWXFVRnpzK1VDVmZZOG9meFo2T2xGdUwvZWJHWHlhY3h6MWF4WlRBMHUwVXJHcStDZ0prbmp4OC9MTFdECnhYbVlCeVg1amI4ZURxZTEwNWJMRlBNNGFpSHBBL05jdVF6bmh6a0NnWUFQSXhIN1lqY2tEcmdTd0Z5M2ZIdEkKam4yMHZEMlY4VVdQZHFRUmtwWFBsOWZQMnhMaEdLUkQreGxsTWw0cFpMZnlKd0JUZ1lJZFI1MVZrTElmdU9KNwpZVkNXVHEwUUlpeTlzdkxBR3RydGJMWmhmZzk0WUI0M2daWERGOW9KZ1lESGEyK2dwREFtRXU0U0owRDZucUJICnBkVnBPam9paUlQMk5RT2V4eUgweXdLQmdFQTlQVzVFVCtSQVlnWnFBTG5ENk1vcE12NzQ4RmtySzdnVUNvdUwKeGgwbmV3K1J1Vmp6TTZVVXBxZDNuUmduZ1FEMTY2WCtTNVNTZjZKN3V2WVArTzlXUWZRcm5vNk11MDgvSXV1cQowUlQ5aWlMdEk1VDVYckd0Sm94NGN2N3BSRENZT0VYS3N6bjRkWTRTWmdnNS8rRU80Y2dmZGxlWHJKekNPMEZrCmwydzVBb0dBTk03M3U3Ry9JMTArVUhLWnUzZEg3VnZxb3g1K0N6MTR1dnAyKyttektsbnhKb2JLNDQybE03RUwKYVBBRGlQMXl2ZjEzL3FSZUEzZDhqYm5tQlBVeE41ZjFBSjd3ekVkN0VTeFZrVlVPeGMwM2RNQlU0bFdPZXFudwp3a1AxdzZRbjRWTlhjV0x1UGdCbENxcUpXNFRUczdVdlo0cUJyUi9qT0xJYk10b204c1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
