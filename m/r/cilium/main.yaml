apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FWHVKbkFsQnJBWHVJNWFuWnBYckF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE1UQTROVGN5TjFvWERUSTJNRFl4TURBNApOVGN5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwcEMxeElFbS9UQmhtVGJ4NmxLZmF5RExCTWRLNDdRYnRicU5zOEs3M2FVY21Fd0YKRVpzRi9abE90d2UxNTFOTDgyYTVxaU9oRG5ldUM3NHdMNVd2eHYxbmpBeUIvVWJLRitSdWNzY0x3M1cyd0JwMQpQUGFWbWJhVU5tNXV4TlBkTHJFLzROaFoyaTdGQlRuZ2hPT01WdUZxUEV5cjVKVi9iRGR4ZTFYRWhjTjhvazVtCldEQmV5eEEwTGhhN1J1RlhxVUJURmJRK0tRWEF6SVZHQ1pyNGxueXgrcFdYTVN3d2FjTEhNR3dHd2Z4NGxvT2oKOVZQSWFrQUpLRmFwVnc2dzlzbWtoOGdTbitDUTJ3TTF3ODRHVkFDUFBrNmZiVHE2d05IenlZL1hiNk9vNW1zbwpKVS9rUVNsUHEwZ0JyWjRPWEhGd3BrQ1cvU2o5TWs2MVVYazlwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS3psQWgwTFpUKzhkTFQveHBwKzRDNW5yTXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm9aM1FEdTIrdm14ZzNOQVdUTndYMjVUbklvUkxqNUJzT0pYM2NmRTd3aDVLbnpCMmd5VDk5CmtWcDdTOVg5Mko1bDFEWGwySFZ1Y0lsOU5NT3RFcVFaR2JEYzRJVmZZVTJ5QUgyRU1BamFhUE13andKT0xncG4KY1drcTR2WDc3RjVWY1FsRnVYSWRZd21oTk9GSk5oWW5Gb2xrWlhhUE1uS1FlaDdTUmx4MVpTTjRRaytJMVNxTwpkYi94ZFZwNlJMQ2kxaHQ1YUhINGdySlpWS0NSNTBTY3AxYXAvVDZnQVVJeTdTeGtKdk9ZWk1wSlBEUUdGS21hCjAvNzNkc3Y0MDZkVFNRaVJwMEZQYy9uY2xqb2NCbk5Sbk5sa29MNmdhSHozNUZXSlJGMUlmQ3V2NWQwNmZCM0oKSkliR3ZkRldXS3pyZHVLNjdjNW5SbXEwV3h5d2FlVEsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHBDMXhJRW0vVEJobVRieDZsS2ZheURMQk1kSzQ3UWJ0YnFOczhLNzNhVWNtRXdGCkVac0YvWmxPdHdlMTUxTkw4MmE1cWlPaERuZXVDNzR3TDVXdnh2MW5qQXlCL1ViS0YrUnVjc2NMdzNXMndCcDEKUFBhVm1iYVVObTV1eE5QZExyRS80TmhaMmk3RkJUbmdoT09NVnVGcVBFeXI1SlYvYkRkeGUxWEVoY044b2s1bQpXREJleXhBMExoYTdSdUZYcVVCVEZiUStLUVhBeklWR0NacjRsbnl4K3BXWE1Td3dhY0xITUd3R3dmeDRsb09qCjlWUElha0FKS0ZhcFZ3Nnc5c21raDhnU24rQ1Eyd00xdzg0R1ZBQ1BQazZmYlRxNndOSHp5WS9YYjZPbzVtc28KSlUva1FTbFBxMGdCclo0T1hIRndwa0NXL1NqOU1rNjFVWGs5cFFJREFRQUJBb0lCQUFmaTdDaE1zU3Jsd29rOQpsOEN2ZnNyVXQ2Z1hRNDE2ZHFGcEh0SjNFdXdRcUVUeHZIK3o1bG0yaTRxUSsrVGpCY0tWaDQ3dHR1OTNiUzh6Ckp4YnBzSFBzaFoyVTdnYXU5bHloUFRXRUJTT1JERUVXUDV6T1ZCRCtHeEJrdEN2dm1CWmc0QlJtU2dMUm1oU0EKUkFnbXVmdFhHdStWOWNHUjdvR1NNblpUZmtXVEExV3BINnFIY1h2VFFNdDExaStqS21DVTNrN1V4dUhaWkc3RgpRYko1bWNGOVo4TXNBZEhlREl2cS8rNlNSUk0xcFREVkFvcXY2QVFjZU1NOENsZkFtV2hmckZrSFNSNXRWVHlHClpvc1BmMFVlblB5V2JFM2IwWVVjd2s3QUVsQnBsa1hwbzNySmNjT2lZTnVnbmJnTkIzd28ybDlFb0c1OHVUd2EKc0RKS2hXRUNnWUVBd0JYQlhvTVpOYld2cmZSd0JEaVA2eCt6YlA2QmdTQ29meldYdXRxaU1QRU9yVy9hK2UrOAorTnBkYXpaOG5DcjRTbmhTdE95VXJ1cE5zbSt1UHpZWXhCdXRDckR2WmhNWmtMRkw2QSttV0tEUGYxY3VZUHUvCjUvYWQ0T2VXTHBSNTVpL01sTFpIM0p4VklPbVh0S0VuaTJHVUdZRS8yMGVJNE5wM0M5cjRkRTBDZ1lFQTNmMGcKYnIxU091R3J0c0ppcmxxdlR3WGIzSFo2eVFheERjUC92TjhCQXNxMDhwZHovb2pPOTJDU3FpUFVPR1BPY0dqQgpYSjdIU3FzNEpSUi9YVEYzTU5hN2hUMFlXanpoR1VGQ09yREU1ZFVHMEJ6M0ZiOUVsdEZHaFBCMnp0bGJORnUxCitVbC84TWplczc5VzdJemEzdlBvR3FsVmtaL3FPQ2o5QXBEQytya0NnWUFxbEtnSkM0YkxJVHVRbEY5QWtFbFgKRmUvd2VYcTc1VUYwOGF4dy80WjAwdnN0OTEzVGloR2FHTTRjdGpkcFp4MGpaUWp3a29GalJRMTBRTTJmdFo1SAoydHJCUS9mTjZPNEI1VXV1WmNtNlcrdWpqdS81RDlXNjFqQ3BhcTBnSmtuZmZUa2N2a3V2Mi9nREU4Vk5oV3YrCnVlTGF4SXdqVC9oSDRDWUR1c2JaQVFLQmdDZVhCVG02dWZlV1Y3RjRhWEQrNjFVRWpubDdCOXJpUHFGZDJ6WXIKNzFvNEhKMUhOWUNubFlHNHoyOVloSGlxRkI4b0Q1UWRIUjNMKzI5aGdIVjJaUE5vMkhpaXRMMGpMbUg2cVgwZQpHWCtEeG50SEx5bkp1c25LK1BDc2tnUEI3K29la1Eyc2RnelRSaVI0YzJBc25ydzBjNmlObXAwbUQvZUVGOXRsClJlREJBb0dCQUtOZE1wcGt0S1RQTTJzSGt0QTVPL0N5VTFpTXZFd2pkclVLcDF5RVZ6cU9PMVVHanFUZHg5a20KMkdtTzNNZEZSc2VsN1VSaUM1MDlNZ0lFTlBBNjlJTEp1QXZIcXZYVDF6Q3piQVRiUEtpcXZlMkRETFdwQkUyTQpycFRBNmFDV24yMU9uSlhaYkh1ZG9HalM2SldMTTlxL1VqNGNIcE5HampDa0ZpSmdCaVQ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FWHVKbkFsQnJBWHVJNWFuWnBYckF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE1UQTROVGN5TjFvWERUSTJNRFl4TURBNApOVGN5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwcEMxeElFbS9UQmhtVGJ4NmxLZmF5RExCTWRLNDdRYnRicU5zOEs3M2FVY21Fd0YKRVpzRi9abE90d2UxNTFOTDgyYTVxaU9oRG5ldUM3NHdMNVd2eHYxbmpBeUIvVWJLRitSdWNzY0x3M1cyd0JwMQpQUGFWbWJhVU5tNXV4TlBkTHJFLzROaFoyaTdGQlRuZ2hPT01WdUZxUEV5cjVKVi9iRGR4ZTFYRWhjTjhvazVtCldEQmV5eEEwTGhhN1J1RlhxVUJURmJRK0tRWEF6SVZHQ1pyNGxueXgrcFdYTVN3d2FjTEhNR3dHd2Z4NGxvT2oKOVZQSWFrQUpLRmFwVnc2dzlzbWtoOGdTbitDUTJ3TTF3ODRHVkFDUFBrNmZiVHE2d05IenlZL1hiNk9vNW1zbwpKVS9rUVNsUHEwZ0JyWjRPWEhGd3BrQ1cvU2o5TWs2MVVYazlwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS3psQWgwTFpUKzhkTFQveHBwKzRDNW5yTXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm9aM1FEdTIrdm14ZzNOQVdUTndYMjVUbklvUkxqNUJzT0pYM2NmRTd3aDVLbnpCMmd5VDk5CmtWcDdTOVg5Mko1bDFEWGwySFZ1Y0lsOU5NT3RFcVFaR2JEYzRJVmZZVTJ5QUgyRU1BamFhUE13andKT0xncG4KY1drcTR2WDc3RjVWY1FsRnVYSWRZd21oTk9GSk5oWW5Gb2xrWlhhUE1uS1FlaDdTUmx4MVpTTjRRaytJMVNxTwpkYi94ZFZwNlJMQ2kxaHQ1YUhINGdySlpWS0NSNTBTY3AxYXAvVDZnQVVJeTdTeGtKdk9ZWk1wSlBEUUdGS21hCjAvNzNkc3Y0MDZkVFNRaVJwMEZQYy9uY2xqb2NCbk5Sbk5sa29MNmdhSHozNUZXSlJGMUlmQ3V2NWQwNmZCM0oKSkliR3ZkRldXS3pyZHVLNjdjNW5SbXEwV3h5d2FlVEsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcHBDMXhJRW0vVEJobVRieDZsS2ZheURMQk1kSzQ3UWJ0YnFOczhLNzNhVWNtRXdGCkVac0YvWmxPdHdlMTUxTkw4MmE1cWlPaERuZXVDNzR3TDVXdnh2MW5qQXlCL1ViS0YrUnVjc2NMdzNXMndCcDEKUFBhVm1iYVVObTV1eE5QZExyRS80TmhaMmk3RkJUbmdoT09NVnVGcVBFeXI1SlYvYkRkeGUxWEVoY044b2s1bQpXREJleXhBMExoYTdSdUZYcVVCVEZiUStLUVhBeklWR0NacjRsbnl4K3BXWE1Td3dhY0xITUd3R3dmeDRsb09qCjlWUElha0FKS0ZhcFZ3Nnc5c21raDhnU24rQ1Eyd00xdzg0R1ZBQ1BQazZmYlRxNndOSHp5WS9YYjZPbzVtc28KSlUva1FTbFBxMGdCclo0T1hIRndwa0NXL1NqOU1rNjFVWGs5cFFJREFRQUJBb0lCQUFmaTdDaE1zU3Jsd29rOQpsOEN2ZnNyVXQ2Z1hRNDE2ZHFGcEh0SjNFdXdRcUVUeHZIK3o1bG0yaTRxUSsrVGpCY0tWaDQ3dHR1OTNiUzh6Ckp4YnBzSFBzaFoyVTdnYXU5bHloUFRXRUJTT1JERUVXUDV6T1ZCRCtHeEJrdEN2dm1CWmc0QlJtU2dMUm1oU0EKUkFnbXVmdFhHdStWOWNHUjdvR1NNblpUZmtXVEExV3BINnFIY1h2VFFNdDExaStqS21DVTNrN1V4dUhaWkc3RgpRYko1bWNGOVo4TXNBZEhlREl2cS8rNlNSUk0xcFREVkFvcXY2QVFjZU1NOENsZkFtV2hmckZrSFNSNXRWVHlHClpvc1BmMFVlblB5V2JFM2IwWVVjd2s3QUVsQnBsa1hwbzNySmNjT2lZTnVnbmJnTkIzd28ybDlFb0c1OHVUd2EKc0RKS2hXRUNnWUVBd0JYQlhvTVpOYld2cmZSd0JEaVA2eCt6YlA2QmdTQ29meldYdXRxaU1QRU9yVy9hK2UrOAorTnBkYXpaOG5DcjRTbmhTdE95VXJ1cE5zbSt1UHpZWXhCdXRDckR2WmhNWmtMRkw2QSttV0tEUGYxY3VZUHUvCjUvYWQ0T2VXTHBSNTVpL01sTFpIM0p4VklPbVh0S0VuaTJHVUdZRS8yMGVJNE5wM0M5cjRkRTBDZ1lFQTNmMGcKYnIxU091R3J0c0ppcmxxdlR3WGIzSFo2eVFheERjUC92TjhCQXNxMDhwZHovb2pPOTJDU3FpUFVPR1BPY0dqQgpYSjdIU3FzNEpSUi9YVEYzTU5hN2hUMFlXanpoR1VGQ09yREU1ZFVHMEJ6M0ZiOUVsdEZHaFBCMnp0bGJORnUxCitVbC84TWplczc5VzdJemEzdlBvR3FsVmtaL3FPQ2o5QXBEQytya0NnWUFxbEtnSkM0YkxJVHVRbEY5QWtFbFgKRmUvd2VYcTc1VUYwOGF4dy80WjAwdnN0OTEzVGloR2FHTTRjdGpkcFp4MGpaUWp3a29GalJRMTBRTTJmdFo1SAoydHJCUS9mTjZPNEI1VXV1WmNtNlcrdWpqdS81RDlXNjFqQ3BhcTBnSmtuZmZUa2N2a3V2Mi9nREU4Vk5oV3YrCnVlTGF4SXdqVC9oSDRDWUR1c2JaQVFLQmdDZVhCVG02dWZlV1Y3RjRhWEQrNjFVRWpubDdCOXJpUHFGZDJ6WXIKNzFvNEhKMUhOWUNubFlHNHoyOVloSGlxRkI4b0Q1UWRIUjNMKzI5aGdIVjJaUE5vMkhpaXRMMGpMbUg2cVgwZQpHWCtEeG50SEx5bkp1c25LK1BDc2tnUEI3K29la1Eyc2RnelRSaVI0YzJBc25ydzBjNmlObXAwbUQvZUVGOXRsClJlREJBb0dCQUtOZE1wcGt0S1RQTTJzSGt0QTVPL0N5VTFpTXZFd2pkclVLcDF5RVZ6cU9PMVVHanFUZHg5a20KMkdtTzNNZEZSc2VsN1VSaUM1MDlNZ0lFTlBBNjlJTEp1QXZIcXZYVDF6Q3piQVRiUEtpcXZlMkRETFdwQkUyTQpycFRBNmFDV24yMU9uSlhaYkh1ZG9HalM2SldMTTlxL1VqNGNIcE5HampDa0ZpSmdCaVQ4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FWHVKbkFsQnJBWHVJNWFuWnBYckF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE1UQTROVGN5TjFvWERUSTJNRFl4TURBNApOVGN5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwcEMxeElFbS9UQmhtVGJ4NmxLZmF5RExCTWRLNDdRYnRicU5zOEs3M2FVY21Fd0YKRVpzRi9abE90d2UxNTFOTDgyYTVxaU9oRG5ldUM3NHdMNVd2eHYxbmpBeUIvVWJLRitSdWNzY0x3M1cyd0JwMQpQUGFWbWJhVU5tNXV4TlBkTHJFLzROaFoyaTdGQlRuZ2hPT01WdUZxUEV5cjVKVi9iRGR4ZTFYRWhjTjhvazVtCldEQmV5eEEwTGhhN1J1RlhxVUJURmJRK0tRWEF6SVZHQ1pyNGxueXgrcFdYTVN3d2FjTEhNR3dHd2Z4NGxvT2oKOVZQSWFrQUpLRmFwVnc2dzlzbWtoOGdTbitDUTJ3TTF3ODRHVkFDUFBrNmZiVHE2d05IenlZL1hiNk9vNW1zbwpKVS9rUVNsUHEwZ0JyWjRPWEhGd3BrQ1cvU2o5TWs2MVVYazlwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS3psQWgwTFpUKzhkTFQveHBwKzRDNW5yTXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm9aM1FEdTIrdm14ZzNOQVdUTndYMjVUbklvUkxqNUJzT0pYM2NmRTd3aDVLbnpCMmd5VDk5CmtWcDdTOVg5Mko1bDFEWGwySFZ1Y0lsOU5NT3RFcVFaR2JEYzRJVmZZVTJ5QUgyRU1BamFhUE13andKT0xncG4KY1drcTR2WDc3RjVWY1FsRnVYSWRZd21oTk9GSk5oWW5Gb2xrWlhhUE1uS1FlaDdTUmx4MVpTTjRRaytJMVNxTwpkYi94ZFZwNlJMQ2kxaHQ1YUhINGdySlpWS0NSNTBTY3AxYXAvVDZnQVVJeTdTeGtKdk9ZWk1wSlBEUUdGS21hCjAvNzNkc3Y0MDZkVFNRaVJwMEZQYy9uY2xqb2NCbk5Sbk5sa29MNmdhSHozNUZXSlJGMUlmQ3V2NWQwNmZCM0oKSkliR3ZkRldXS3pyZHVLNjdjNW5SbXEwV3h5d2FlVEsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRVTNXOS9qejdqSU1FWXFqRFpocmhtREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZzFOekk0V2hjTk1qWXdOakV3TURnMQpOekk0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEYlVmVm1KU0VEZ2RpcVJlS0toTlphejRBZWJBWHMKL2lkWDVwOWQ2ZTF2bzhtNWQ2SXRyWC83MC8rajBOK0lwWlVjZTkrOU9jRUpxRmorQjdON3ZVTGt4OW1ORjRvdgo1N0lTbjFlQlUyV25sRjJxRlVpYjVxQkp3QnFnTDZ5K3hnY3V6UjB2RnkvSHlmeW5yOTliM1FDeWRJUHoxSC9tCkdkcjU5V3RFK2JXeXZuNkdpa04xQmtEditOM2FqanJoQVV3dzd4TXpJN0hNRExjam85djJxSlBFRTY2YThLanIKVGdVa2Q4QjBHa3dkVmlXVVZzcTlaRzd4SzJrTGlKVCtOUFVXYXlNOExuUWxQd3JCWWxvaXZ5dGdRaHdxQW5EUwpvMVBjaWtXOUdQZStpWUhCZkR0SDl3d0ZYam9pS3FQbEkrb3pnWlhuQWhhSmFOaDVGVUVCd09oaEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZLemxBaDBMWlQrOGRMVC94cHArNEM1bgpyTXVXTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFtazFNamovUDJ3VURpMDA1YzkrczJlb3B1MUdodjREYjdFSXgrTFYvWXRKMHpKc3cKQlM3L3dXQmNTS0pEc0t2dXlCN1NDMERDelZNcmNmRjZwVGFYc3kzVmRWbkFpZ0Vnb0tJTEhOV3l1bGxsak95cwpldUhHaDFlTW5rdHI3dUVyVVRTZGE0WkptR2IrTkpWK0RjV3J6VHRYaTVGRE9hV1ZtdTZWeGdwVzFBT05UbVJ3Cm5VVGNLVTJSZHdsLzJGcFlXMnAxOHA4ay9TK0tqYWNVbjM2Q1VBOE01VFRUOWphbXFUV2ZZYjhQSW90Zy9Kb1kKRnVVTllZaTUvSWtzVjNzOUpDWWxRYmR5VXVpcnhpeVdPRXB5V1B2Vi8yRzB4UmdRNEd3K1FNOHBnRWdvWmxqLwphTEcrZWVQNkVnK29YeUN4TzRTSnMycEg4TGZhcDU2dEYrK2w3UT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMjFIMVppVWhBNEhZcWtYaWlvVFdXcytBSG13RjdQNG5WK2FmWGVudGI2UEp1WGVpCkxhMS8rOVAvbzlEZmlLV1ZISHZmdlRuQkNhaFkvZ2V6ZTcxQzVNZlpqUmVLTCtleUVwOVhnVk5scDVSZHFoVkkKbSthZ1NjQWFvQytzdnNZSExzMGRMeGN2eDhuOHA2L2ZXOTBBc25TRDg5Ui81aG5hK2ZWclJQbTFzcjUraG9wRApkUVpBNy9qZDJvNDY0UUZNTU84VE15T3h6QXkzSTZQYjlxaVR4Qk91bXZDbzYwNEZKSGZBZEJwTUhWWWxsRmJLCnZXUnU4U3RwQzRpVS9qVDFGbXNqUEM1MEpUOEt3V0phSXI4cllFSWNLZ0p3MHFOVDNJcEZ2Umozdm9tQndYdzcKUi9jTUJWNDZJaXFqNVNQcU00R1Y1d0lXaVdqWWVSVkJBY0RvWVFJREFRQUJBb0lCQVFEWUxLZWFYOXh6allmWApCWDB2RlpJRy9tSUZHbXFZMTBaR1VPNGlibEgzYVZTTE44MG1BczZVbExoMGFvdjZMMk9US05JMnZIZDJJblpkCkpaQVcxa3phSGRaa1NLQ1BhV3ZQQ1RvQ0lnYWZzQkRHZGFZVTdMUnZIU2ZoWGp5QjZjVG9yNG9sZ1ZBNk4vQ08KQkQ4L1Y4MjVHRGw3bTZmWlVRRFN3Y0ZTd21NQzR3ZHBpbkZFL2RWenJ3R3pEc1pXZkdQdU1XQlpFaHZQR2NYQQoxSnowblJqdkdyWUtSMWpwMyt5cHpkMW9VWThwM2s5SlB5aXZvbFU4NXZ0c2ZScy95a3JNZm5HNi9EVHJ1SE5uCkxPWFNzdGZvNzIrMUI2RDYwNnJJSUdMSEpNeTVoQUVCY2RQUEZjNlNVa0ZKbjRxVXV3UnFSS1BLRFpkSFFsbXUKdGtWak1TMXhBb0dCQU9PQWxVcUIxbnFwK2x6U09lNmZMLys5SnhEZGMrSnlzbFZJRkJveGMyeG8zSnpuQWEvTwoxWWJac2N3VytQaFIzSmhCYk4reEoyRkFUcWlQNmF0ZDVyN0hFNG4vSGtlUTJzWk1sbXk0M25zM01QSFZYUDZrCjZuK1ZCcVk4YkNldk9TendIZC9FWEVIUGRHbzIwVk5wRUpqM29HTXg5VjlsdlpWQk5iaFdxblFOQW9HQkFQYksKL3RsZDZCMytPdERmSEtPMVV6K3dZZnlVSUdGZndrd3BZTkhSMlhpRXRxTjZwWFZFcHdwOVNMSzNKbzE2b1l2ZQpBN0NsT2pGVFZYajB5dFgvYVlUaHdXVVNTVlZVOFNvam8vTEY4TFJNZDZxbzR4cFRCUDBGS0E2OUtCUlVhUXZ6CnBrUUVnZnlUaGxsOERrUUJCbCtjVStscWh2MU9MNVdoRjRUcjRZeWxBb0dCQUpxWXkxcVpScDJPbXFLdS9VMHAKZ2QyZ3RVWmhwcGt3WmYxTUFOVVgyNTdFMTM0TUFQcHViRzI1eTNlcitMNE9Ld0NRSFNNWmFIQk8yZVR6L3M5RAovVVNSVmJiRjFkYStHZHo5T0k5alJWU24yYXZNMk9mMk82QTlMZ3FUTHMvODQ3YWs2VGdoWUt3Y0JMa1V6VVNJCk5nNHM0Q0hvVmh6Z3IyY1lyQis3VFJPVkFvR0JBSnorQVNTUllrbENJblFnbWYxaUtiVUlKUzBocFgrTUJQT2kKRnQ4aW1TN2JiYnVORjVnRHRpY3NENFR3a1d2S3FOMXF1L294QVZYRFowbnNudU9HK0w3NVJhZGYvSnAxMEh3Mwo4K0ZLSFpiMFZlT1FUL2U4L0IxZ25GelQ0NTBiSFQvbkhNdUQrcFNMM0Jrc20zNlRFRlRlQTFzbTB2eHNNa1VECkZ3ME5hSXVwQW9HQkFJTjdobjlCekZ5TnYwaUQyaUdoSkxYMlk1V2U2TklDZGZPL3REUnNBZ2dWT05wSmRRMFMKc2tuT0VjSno1V3VHM3VDcWh0VVpZUEhpd2FCUXkvMks0UGkzSGU3dTNxdURwQUR1OEJNQyttOFVrOUpHQWZNagpncWdMSGVYUFF3cFhiTDNUU2lRREVUMWZQWTJON0RDeGw1MDluemVQNG1rUkxPUzJCYWlhRVdBbwotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FWHVKbkFsQnJBWHVJNWFuWnBYckF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZeE1UQTROVGN5TjFvWERUSTJNRFl4TURBNApOVGN5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFwcEMxeElFbS9UQmhtVGJ4NmxLZmF5RExCTWRLNDdRYnRicU5zOEs3M2FVY21Fd0YKRVpzRi9abE90d2UxNTFOTDgyYTVxaU9oRG5ldUM3NHdMNVd2eHYxbmpBeUIvVWJLRitSdWNzY0x3M1cyd0JwMQpQUGFWbWJhVU5tNXV4TlBkTHJFLzROaFoyaTdGQlRuZ2hPT01WdUZxUEV5cjVKVi9iRGR4ZTFYRWhjTjhvazVtCldEQmV5eEEwTGhhN1J1RlhxVUJURmJRK0tRWEF6SVZHQ1pyNGxueXgrcFdYTVN3d2FjTEhNR3dHd2Z4NGxvT2oKOVZQSWFrQUpLRmFwVnc2dzlzbWtoOGdTbitDUTJ3TTF3ODRHVkFDUFBrNmZiVHE2d05IenlZL1hiNk9vNW1zbwpKVS9rUVNsUHEwZ0JyWjRPWEhGd3BrQ1cvU2o5TWs2MVVYazlwUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGS3psQWgwTFpUKzhkTFQveHBwKzRDNW5yTXVXTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQm9aM1FEdTIrdm14ZzNOQVdUTndYMjVUbklvUkxqNUJzT0pYM2NmRTd3aDVLbnpCMmd5VDk5CmtWcDdTOVg5Mko1bDFEWGwySFZ1Y0lsOU5NT3RFcVFaR2JEYzRJVmZZVTJ5QUgyRU1BamFhUE13andKT0xncG4KY1drcTR2WDc3RjVWY1FsRnVYSWRZd21oTk9GSk5oWW5Gb2xrWlhhUE1uS1FlaDdTUmx4MVpTTjRRaytJMVNxTwpkYi94ZFZwNlJMQ2kxaHQ1YUhINGdySlpWS0NSNTBTY3AxYXAvVDZnQVVJeTdTeGtKdk9ZWk1wSlBEUUdGS21hCjAvNzNkc3Y0MDZkVFNRaVJwMEZQYy9uY2xqb2NCbk5Sbk5sa29MNmdhSHozNUZXSlJGMUlmQ3V2NWQwNmZCM0oKSkliR3ZkRldXS3pyZHVLNjdjNW5SbXEwV3h5d2FlVEsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVGpMZ2dHL1ZmVVFrTm1wcUNpTHhyekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFeE1EZzFOekkzV2hjTk1qWXdOakV3TURnMQpOekkzV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdGVNNkdyeHFYZEpPVDRZeVI3aUMKaldKZWY0QmJmNW1PcDhCVnlQQllIcit4YjdoRm96b3E1TDRzSElQS1NjaHRpclI0RWVhRzB2OWdzV0hRNWxUTAppYkEweG1OckdFZWVuZmM4bGVjdWZ3K0tRZmxOb3A0c2tIekFxRVVXeVE1T1RMZzdNMFl0dHZYa0lSRWJIa1gwClJSUEd6dUtjcHN0Y3VuaUJBemdOeTZOUk5UR3k1cHBTU0MvTCsvVzRoeExOUVBXbk5xZHQvMFFiVENxM0NjUG8KVjIzUlJ0bjR5cmJXR3hVYmJWcFpFdGJNU1VrM0N4TEtKUlNFeTZoMHY2dkMwSU43S0c1V2JYc1BwMVMrNTdCWApNUUFJUVF4ZVBFdktxamZFMU50aHZDbjZBVGc3bVRZOTRqUW5IeUU5bVJVdkZReEk4YVRFQUdzdXBLMmdHaFhtCjZRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTczVRSWRDMlUvdkhTMAovOGFhZnVBdVo2ekxsakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBUlpMekJjRjZ6dkFrSVRWZVBvZGdPZG1mT0VQd3YKSHJNU0M1V0s1YnE0TGkzMUs2VGszdExoNW10ZDBsUnZDZDBhOWNBS0dHOTJLWTRnbXN6RkdkLytvemZRVXJNZwozVEcvNGtnWmQ3bzg2NVJNNGFPTU9uVXZudjN3dmFmRTY4YmdzcUNDTzdJd296K08rc2JUeWRmUVRoOG9RMlozCk9WVU5oQ01qU01SR2lhamU3TE1aaDJwZTc1RWdpMmY5YUwzeVdkTk93dS9aMGpicTgvbEMwZmxrZ0ErbnlERmYKOWNYS1JwZFBrRkNhYlcyajY5MFUyWVZCbEMrdk9QSE12ZmdncW9idHBMSzgvbS9uZmMyTWsxZHJITXpWK2RqUgpUMGJPRnRkZnNVTlBSa0ZnS2gwbHR3RlhUaFpGamF5aTJrVVRPeXBnWmxSRFphMEprYmhUMXdLUwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdGVNNkdyeHFYZEpPVDRZeVI3aUNqV0plZjRCYmY1bU9wOEJWeVBCWUhyK3hiN2hGCm96b3E1TDRzSElQS1NjaHRpclI0RWVhRzB2OWdzV0hRNWxUTGliQTB4bU5yR0VlZW5mYzhsZWN1ZncrS1FmbE4Kb3A0c2tIekFxRVVXeVE1T1RMZzdNMFl0dHZYa0lSRWJIa1gwUlJQR3p1S2Nwc3RjdW5pQkF6Z055Nk5STlRHeQo1cHBTU0MvTCsvVzRoeExOUVBXbk5xZHQvMFFiVENxM0NjUG9WMjNSUnRuNHlyYldHeFViYlZwWkV0Yk1TVWszCkN4TEtKUlNFeTZoMHY2dkMwSU43S0c1V2JYc1BwMVMrNTdCWE1RQUlRUXhlUEV2S3FqZkUxTnRodkNuNkFUZzcKbVRZOTRqUW5IeUU5bVJVdkZReEk4YVRFQUdzdXBLMmdHaFhtNlFJREFRQUJBb0lCQVFDUTY0Z3JMejVzbkprSwpvYmpFRGszdXlwYlNiZm41TStkRzMyYzZYODFHU3FQY2lPenJQZmhaSXZEUWsyMEUxcTM0Mnd2ajcxSXpJWWp3CkxDaWVyS2N6Z0hLOE14QnNXdndWanB6Mkx5bUwwVnp1YmUyZWlQcW04TThzQTBoQlQ2V3hXUVRLT0x0SjBLZEEKZFhtdTZEdlZJZ25BWXl3L2RUN2YwQTJ5KytGNkFyL1NIa0lkcTBMc1NIdVhEUCtseS9XNTUxLzdYMEFmUFNaZApwMlZhTkk2QmZPOFZZOFJ2eml1ejQvNDNiK05OWW1xR0NxTlpFcmRVS21YQnJ5Uy9mTURUSzJLNHhadTkraEpNCkNqR2tOYmVyTzdUdlhTS1BSdnV5Yk1HZXFyZ0loMUtiNC9HQUZGREg2bmJLYzZ1ajA4bVM5cUowakpCdGV0SC8KTW42S2NKMGxBb0dCQU1RNVB5ME1VK1BJUnhyS1lsK2tYVWUyaTYySGZWdXEyNG9qRjA0MlJXWVBuMzh1aVdNegplZXEwbXllYjRTNFIvMnBmNzJVdi9QZzNPbTRiWWZOWG5kZk5xMnJUTG9TU0FqUVNkeUpYaVJtVEFLLytHYVF0ClRjVVVPR3hrWkUzbWFEWmlhUlRTNGhSR1Q0WU9nVnZIMk9ESFQ5WElwZWFiS0IvRDRGbmlTRGpEQW9HQkFPMUwKOTYza2hrOVNPL0wwYXR6ay9GM25WN1F1V2hEWXcxc0wyMzE4M0VjZGtCV0VRdWdwcXBmd0ZhVHlucEVCZldlNQpTaW50aDFCTXNJS0pOUG44K0F2QVRMdGY4TGFubTdSRzFBc1E3YmdINkNlUmdLRG45dnRXWTM3MUJUMTdSSHlqCm9yUFJhaHQ2ZllkT2wyUHJxZHBYMzZ4UVg1QnQzQ1BZdHd3Ty9RYmpBb0dBZnpLbzNGZlliWmpmVnVPSW4zMFoKcHFvVG8xcG9EYXNWQTFlNS9NNDdjR3lDTk55QzNOWjZtb1dXNmpjbTRrbHlhNDlpelJJdGh1MnVKOEFDWDg4VgpGOVpQMzBDa0wvWENEZVZHYXZHWmd3V0M5WkxmSmtqajEvUkNteWo4eUc2cWNVNmIxWTdhVk5BN0xxaHFmSWR3CjlFemZXTExuc0RRMTcxbDNMbXo3NmljQ2dZQWR2ck1LU2lZSDFXQU1ZVlR2NFlnODRSM2VTUjBqRlhqUGRkb0sKamRjeTF1TFR2Nk4vWkpHc3YveUdrNThLd0N3UEQydmJlNW5GbUFkY0pZVE5mVWMrZWRsa2QyOCtCaDUvWjQxMgo0YVZhdHlzRG9ycUQ4Ty9GcTV1SE00RjNwbmI4UktyRmJZK21hQ0ZLRDdEc1pvTUJDcGpRQ2JjZzdKUjJyZGlzCkcwamVUd0tCZ1FDa2ZBMFIyT0s3eFlkVy9rWVdSc2kwYTlzS0V4T0hvdXhvMWdWREpyNDJ1NFVGbU11eEFzUVcKMU92TWUzMnZiNzBKOG9kZExYR1JzN2JZUEZzQTlPRTF4dDQ2L3lpOTBXTnE3UkZrb255ZWhxekRoc2FRWmxDMQpSMlovV1pDRGpaSFpyZmNhMGhUYzdaVWptVm1yZFBwZGhycG1scXNCcWplMHBqaFdya3V1cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
