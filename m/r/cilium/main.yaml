apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWXFhZFFXcURLT0FIVkt1MUpGVDF2VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNE1EVXdPRFE1V2hjTk1qWXdOVEUzTURVdwpPRFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpMc1VLSzRlY05hNGhyaTBDUElGVzZvdStoelBPN2pIR3luZTg1ZWk3VjNDTlZXL1YKVElUUmE3R2JTVFdrZ1EveHhBTnRKVUhXaCtiOFVUTEVrS3hDdS9DMXBYa0lxYnRQdjBuNnVzWDN4YWZlR3ZGTgpJYTRtMTc1Z0dRMVlka0hyc3JtOERGQ3A2S0JscUZPeHVZTFZHaldPZFpqUlZkdTNCLzlDbjhjVlFYT0NMdittCjRaTlJEcVJnOU9QMGlyK0Y0MUFpeVJMSGt0dlF2QnlyaHdoYy9vbVhSQzkzY3NTbEtiQmZzNkY5cVFPRk4wTVAKSEdFQi9iQXlsUzlRM0psMzRMZUtJVkJyZFZQNU9nZDIvUGtGWGVRWmFqZ3p0SldzRTBDbUo1ZnVuTG9zdmNFcAptMEYzTXdNbkE5Rk8wSkFEVjd5aFR4MlIyMklVcldtTWIzUkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVTK29CekVXQk9lYVB1WXBYV0d1YkxoWmdxQzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMa2pvb0VPdURjWFhqUGE0OFpoSnZyNzVEeGg3TVoxM012SnFURjVHb2RBUzhVbkxvb2MxbWE3CjNzRUtKbU5RNUhpNTNNV0g2bTRJdDB1Nmh6SmVNbm1QajE4VWQ1S1h5Q3NPK21DTXNlUWRsVFVBUkZxZWs3Z24KZ2NBa1M0ZXZEQmtPa1U4MG85WXFkalJCVlZiV3pVK1hGSWtrYUxYcmdjSWRnNXVDUjM2T0NDcytzRHpoejN5TAovSnBBK3RSREIyN0lJbVpzK3Nyb1FIN3l5amhtclVZdGdOa1o5R1FCNGdHNmQ2bTZpK1VDSDBTUnNzeTZuakQrCm9IMzNoVTBhWU1XcFpGNXNMaW5SbTZvaWNBL0V3SWFZckk4S2tBWm9mbFQ5T0IveHVHZFVrZnVETEVkMk1yTG4KeHJYdmUveUZwVDBVMU9VdFRlNXVpUDdMZ1paMmRDWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNHk3RkNpdUhuRFd1SWE0dEFqeUJWdXFMdm9jenp1NHh4c3Azdk9Yb3UxZHdqVlZ2CjFVeUUwV3V4bTBrMXBJRVA4Y1FEYlNWQjFvZm0vRkV5eEpDc1Fydnd0YVY1Q0ttN1Q3OUorcnJGOThXbjNocngKVFNHdUp0ZStZQmtOV0haQjY3SzV2QXhRcWVpZ1phaFRzYm1DMVJvMWpuV1kwVlhidHdmL1FwL0hGVUZ6Z2k3LwpwdUdUVVE2a1lQVGo5SXEvaGVOUUlza1N4NUxiMEx3Y3E0Y0lYUDZKbDBRdmQzTEVwU213WDdPaGZha0RoVGRECkR4eGhBZjJ3TXBVdlVOeVpkK0MzaWlGUWEzVlQrVG9IZHZ6NUJWM2tHV280TTdTVnJCTkFwaWVYN3B5NkxMM0IKS1p0QmR6TURKd1BSVHRDUUExZThvVThka2R0aUZLMXBqRzkwUndJREFRQUJBb0lCQVFEQmdtSUYwcVExVTZnYQpPakZPV1ZsV1BueC84c3dYYzk3a1ZDdC90Rm56MFh3bWR1TEdUZUpJTzdKUjhoOEdHNFVJU3cwY0dBTW5pQ1VoClFNeThqL3FhOFZrTWNJRlM5cmg5S2hRS3hMTEI1Uk9pNVZJcWdBakdQemlDeEhRUXFOSm53Sm5pYXA3K3l3NXMKNk44NVlDbm4rT1lyalZGNDVlZzcxRTBDWS9TQXpkK0s1bUdVVE8zbXNRUXRPc1VJV3NHd09kSHU1aEViN2Z4NgpTV2hJOUFYbHgybE9YNFdwSG16YnZUVE1DRzFsVTBQWWYzaTIvc2I0eEQyWDNwU1JIcmZHaDM3RnhlWUdUWG5jCmppbHFZcmlBZTcrbHFlbjA2MUdOM0JqZW9RZ0N3U0lDSTdrN0NNVzVLbERqZ202SHRMNnhRSHE2RFVwZ1lmTDAKKzVxckxpYkpBb0dCQU85RWIweVdUbWlZRkx3Y1ZFZUhPWmN1QVRRWlhMNHUrYzlHRXNFNFVWd3g4aXVWdlhqTQo1eWpXbzZHeTBCdVh0dDVJazBaN25sK3B5b2ovdDNKZjFseEI4UDFabjh0UVVYR0xqZGllWDlFQW1sd2lreWNYCkNnem0yMDViR2hteWN2OGpHeVVadG5zcWZqWElkM2swd0RvU2gzdWpQSElZRFdaYmVZeHprbk1UQW9HQkFQTVIKL0ZkdUp5UFR1eGxlVVdiYWk2YWQ1T3BWK3dhb2lKTVJobUMxWERWdlZ5aWM4SHFCVHU2djk2VERLVnd2a0xVaQprOHJ4OUpRNzF1a0RXSlZ4dnM4cWJkcEI4cDFFc09EQklJcXd4VkRXUkJaem1QclNFTS9iSUlsYi9TMlVLbzEyCkk2M0JkTHl0dkN2ckNWalpRM0dwb0JzNncxRlFQdGlNdXZaRUFpeDlBb0dCQU5ScVJ2MFJPNDd6NVFTVGllYnUKa0J3OUJXaUJVNnFyL2E4Y0lLNVZGelhvU1h5VU5WKzNXVWtTTkxickRvSlFrRktLeitUMC9rY2piK0ZzVkNwQQpGd2hVcW1QaFcxR2VmbzkxTzNxaUw2SlhETExiSnhTL0NYY214Ryt0eFdBbTRwekxSK0FLRWMwS2puMmsrUndyCnpyUS9tdlFTbVNrWlhWd1B2YnNKSjJ6dEFvR0FVQW5BR2RuL3NXQnEzM09iUWs3OFpTVGcxL2p2NjhWYkUzSlYKMlVwZXpvbVhIWnh2NHlicEl0ZDJxQjVMWkR1VlhzKy84cmV4WFk1R3VmdU1FOG1jbHdMVm9XVE55dE52bXRKOQpNSzM4aXgzQzFkSENzZlN4N0grdk93dTdWbUxQa0QweWltaUZWQXV4UnBUaVF3dG5sZW5RK3FaaTRrZVdLaUJOCkFBSnM1TkVDZ1lBNmZkNEgxVktJZlFuOEkyOG5uV2h4RDhmOXJrTEVEekQrM2g3aXcycDA4M3ExSUJKVEY1MUwKSkRYMzgwV25MVFIvK2ZCTHV1aklMamdyeVRBdjgxV3ZLT0FQQnl4c1lZa1ByNktERFVHSUdVRmxrNXdPdUkzMApuTjRZRGF3UG93cUZjdzdmUndQR28xeFFZMUtKZUNOQ1BqUFMzOWo0RTRRWHlIUys5bUQyNkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWXFhZFFXcURLT0FIVkt1MUpGVDF2VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNE1EVXdPRFE1V2hjTk1qWXdOVEUzTURVdwpPRFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpMc1VLSzRlY05hNGhyaTBDUElGVzZvdStoelBPN2pIR3luZTg1ZWk3VjNDTlZXL1YKVElUUmE3R2JTVFdrZ1EveHhBTnRKVUhXaCtiOFVUTEVrS3hDdS9DMXBYa0lxYnRQdjBuNnVzWDN4YWZlR3ZGTgpJYTRtMTc1Z0dRMVlka0hyc3JtOERGQ3A2S0JscUZPeHVZTFZHaldPZFpqUlZkdTNCLzlDbjhjVlFYT0NMdittCjRaTlJEcVJnOU9QMGlyK0Y0MUFpeVJMSGt0dlF2QnlyaHdoYy9vbVhSQzkzY3NTbEtiQmZzNkY5cVFPRk4wTVAKSEdFQi9iQXlsUzlRM0psMzRMZUtJVkJyZFZQNU9nZDIvUGtGWGVRWmFqZ3p0SldzRTBDbUo1ZnVuTG9zdmNFcAptMEYzTXdNbkE5Rk8wSkFEVjd5aFR4MlIyMklVcldtTWIzUkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVTK29CekVXQk9lYVB1WXBYV0d1YkxoWmdxQzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMa2pvb0VPdURjWFhqUGE0OFpoSnZyNzVEeGg3TVoxM012SnFURjVHb2RBUzhVbkxvb2MxbWE3CjNzRUtKbU5RNUhpNTNNV0g2bTRJdDB1Nmh6SmVNbm1QajE4VWQ1S1h5Q3NPK21DTXNlUWRsVFVBUkZxZWs3Z24KZ2NBa1M0ZXZEQmtPa1U4MG85WXFkalJCVlZiV3pVK1hGSWtrYUxYcmdjSWRnNXVDUjM2T0NDcytzRHpoejN5TAovSnBBK3RSREIyN0lJbVpzK3Nyb1FIN3l5amhtclVZdGdOa1o5R1FCNGdHNmQ2bTZpK1VDSDBTUnNzeTZuakQrCm9IMzNoVTBhWU1XcFpGNXNMaW5SbTZvaWNBL0V3SWFZckk4S2tBWm9mbFQ5T0IveHVHZFVrZnVETEVkMk1yTG4KeHJYdmUveUZwVDBVMU9VdFRlNXVpUDdMZ1paMmRDWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNHk3RkNpdUhuRFd1SWE0dEFqeUJWdXFMdm9jenp1NHh4c3Azdk9Yb3UxZHdqVlZ2CjFVeUUwV3V4bTBrMXBJRVA4Y1FEYlNWQjFvZm0vRkV5eEpDc1Fydnd0YVY1Q0ttN1Q3OUorcnJGOThXbjNocngKVFNHdUp0ZStZQmtOV0haQjY3SzV2QXhRcWVpZ1phaFRzYm1DMVJvMWpuV1kwVlhidHdmL1FwL0hGVUZ6Z2k3LwpwdUdUVVE2a1lQVGo5SXEvaGVOUUlza1N4NUxiMEx3Y3E0Y0lYUDZKbDBRdmQzTEVwU213WDdPaGZha0RoVGRECkR4eGhBZjJ3TXBVdlVOeVpkK0MzaWlGUWEzVlQrVG9IZHZ6NUJWM2tHV280TTdTVnJCTkFwaWVYN3B5NkxMM0IKS1p0QmR6TURKd1BSVHRDUUExZThvVThka2R0aUZLMXBqRzkwUndJREFRQUJBb0lCQVFEQmdtSUYwcVExVTZnYQpPakZPV1ZsV1BueC84c3dYYzk3a1ZDdC90Rm56MFh3bWR1TEdUZUpJTzdKUjhoOEdHNFVJU3cwY0dBTW5pQ1VoClFNeThqL3FhOFZrTWNJRlM5cmg5S2hRS3hMTEI1Uk9pNVZJcWdBakdQemlDeEhRUXFOSm53Sm5pYXA3K3l3NXMKNk44NVlDbm4rT1lyalZGNDVlZzcxRTBDWS9TQXpkK0s1bUdVVE8zbXNRUXRPc1VJV3NHd09kSHU1aEViN2Z4NgpTV2hJOUFYbHgybE9YNFdwSG16YnZUVE1DRzFsVTBQWWYzaTIvc2I0eEQyWDNwU1JIcmZHaDM3RnhlWUdUWG5jCmppbHFZcmlBZTcrbHFlbjA2MUdOM0JqZW9RZ0N3U0lDSTdrN0NNVzVLbERqZ202SHRMNnhRSHE2RFVwZ1lmTDAKKzVxckxpYkpBb0dCQU85RWIweVdUbWlZRkx3Y1ZFZUhPWmN1QVRRWlhMNHUrYzlHRXNFNFVWd3g4aXVWdlhqTQo1eWpXbzZHeTBCdVh0dDVJazBaN25sK3B5b2ovdDNKZjFseEI4UDFabjh0UVVYR0xqZGllWDlFQW1sd2lreWNYCkNnem0yMDViR2hteWN2OGpHeVVadG5zcWZqWElkM2swd0RvU2gzdWpQSElZRFdaYmVZeHprbk1UQW9HQkFQTVIKL0ZkdUp5UFR1eGxlVVdiYWk2YWQ1T3BWK3dhb2lKTVJobUMxWERWdlZ5aWM4SHFCVHU2djk2VERLVnd2a0xVaQprOHJ4OUpRNzF1a0RXSlZ4dnM4cWJkcEI4cDFFc09EQklJcXd4VkRXUkJaem1QclNFTS9iSUlsYi9TMlVLbzEyCkk2M0JkTHl0dkN2ckNWalpRM0dwb0JzNncxRlFQdGlNdXZaRUFpeDlBb0dCQU5ScVJ2MFJPNDd6NVFTVGllYnUKa0J3OUJXaUJVNnFyL2E4Y0lLNVZGelhvU1h5VU5WKzNXVWtTTkxickRvSlFrRktLeitUMC9rY2piK0ZzVkNwQQpGd2hVcW1QaFcxR2VmbzkxTzNxaUw2SlhETExiSnhTL0NYY214Ryt0eFdBbTRwekxSK0FLRWMwS2puMmsrUndyCnpyUS9tdlFTbVNrWlhWd1B2YnNKSjJ6dEFvR0FVQW5BR2RuL3NXQnEzM09iUWs3OFpTVGcxL2p2NjhWYkUzSlYKMlVwZXpvbVhIWnh2NHlicEl0ZDJxQjVMWkR1VlhzKy84cmV4WFk1R3VmdU1FOG1jbHdMVm9XVE55dE52bXRKOQpNSzM4aXgzQzFkSENzZlN4N0grdk93dTdWbUxQa0QweWltaUZWQXV4UnBUaVF3dG5sZW5RK3FaaTRrZVdLaUJOCkFBSnM1TkVDZ1lBNmZkNEgxVktJZlFuOEkyOG5uV2h4RDhmOXJrTEVEekQrM2g3aXcycDA4M3ExSUJKVEY1MUwKSkRYMzgwV25MVFIvK2ZCTHV1aklMamdyeVRBdjgxV3ZLT0FQQnl4c1lZa1ByNktERFVHSUdVRmxrNXdPdUkzMApuTjRZRGF3UG93cUZjdzdmUndQR28xeFFZMUtKZUNOQ1BqUFMzOWo0RTRRWHlIUys5bUQyNkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWXFhZFFXcURLT0FIVkt1MUpGVDF2VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNE1EVXdPRFE1V2hjTk1qWXdOVEUzTURVdwpPRFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpMc1VLSzRlY05hNGhyaTBDUElGVzZvdStoelBPN2pIR3luZTg1ZWk3VjNDTlZXL1YKVElUUmE3R2JTVFdrZ1EveHhBTnRKVUhXaCtiOFVUTEVrS3hDdS9DMXBYa0lxYnRQdjBuNnVzWDN4YWZlR3ZGTgpJYTRtMTc1Z0dRMVlka0hyc3JtOERGQ3A2S0JscUZPeHVZTFZHaldPZFpqUlZkdTNCLzlDbjhjVlFYT0NMdittCjRaTlJEcVJnOU9QMGlyK0Y0MUFpeVJMSGt0dlF2QnlyaHdoYy9vbVhSQzkzY3NTbEtiQmZzNkY5cVFPRk4wTVAKSEdFQi9iQXlsUzlRM0psMzRMZUtJVkJyZFZQNU9nZDIvUGtGWGVRWmFqZ3p0SldzRTBDbUo1ZnVuTG9zdmNFcAptMEYzTXdNbkE5Rk8wSkFEVjd5aFR4MlIyMklVcldtTWIzUkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVTK29CekVXQk9lYVB1WXBYV0d1YkxoWmdxQzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMa2pvb0VPdURjWFhqUGE0OFpoSnZyNzVEeGg3TVoxM012SnFURjVHb2RBUzhVbkxvb2MxbWE3CjNzRUtKbU5RNUhpNTNNV0g2bTRJdDB1Nmh6SmVNbm1QajE4VWQ1S1h5Q3NPK21DTXNlUWRsVFVBUkZxZWs3Z24KZ2NBa1M0ZXZEQmtPa1U4MG85WXFkalJCVlZiV3pVK1hGSWtrYUxYcmdjSWRnNXVDUjM2T0NDcytzRHpoejN5TAovSnBBK3RSREIyN0lJbVpzK3Nyb1FIN3l5amhtclVZdGdOa1o5R1FCNGdHNmQ2bTZpK1VDSDBTUnNzeTZuakQrCm9IMzNoVTBhWU1XcFpGNXNMaW5SbTZvaWNBL0V3SWFZckk4S2tBWm9mbFQ5T0IveHVHZFVrZnVETEVkMk1yTG4KeHJYdmUveUZwVDBVMU9VdFRlNXVpUDdMZ1paMmRDWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUpxUG9ZU2RqclBOSzd3OVliTHl2eHd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE9EQTFNRGcwT1ZvWERUSTJNRFV4TnpBMQpNRGcwT1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW1pRnFQSEtuSXI0L1FLWVFPZGdxQU8vbEpUWHgKZFpFWDNNSUdZb0xQbmtENzFpQmI4VTk1NkFCNU5oOEhkY2htQ3d1Uk5IWjNyS0Fnb2hXR3FWWkdrVWdKQWhEVwpIMUtZV2poOVpxVXVIU0JLSzY0TUllWkZnU1ltKzRCMVBRdm9aMldmc0g5QytHRzcrY1M2ajVLbEFyZ29Day9nCjRZU0taL1BDRWJ4OWk0ZHJYTTVaQUkxM3VWK2ZPS0pBcUxMOW9nR2lvSnM1Vm52UlNaVVQxK0VvSUErdjZzZnAKek5OT1o4MnBNdkloUjZRODNVYzBMbTFGRDArZ0NJZHhXTDBnaVYxQlNnRFNoZUtxTVR1VlJBRHlsU2E2R0tBTQpydXlWMnVWVVpJYkREOVhYeVVmZndnQjJIajRBRHVieHhJaVpuZDEyQjc2UkhxSC9mNnlhYU50eFZRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUkw2Z0hNUllFNTVvKzVpbGRZYTVzdQpGbUNvTGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBTHFra0p4VWxiY05IM3A5NEhxR0VFS1BHMmNxeE1adnZHNlR3U2t1cGt5MG5xcC8KWEFLVHhxb09ucUNVdW41Q3FpbWs0c2tQbnJWRHh4MmZHNlNveVBmOE9oR29QcktYSW5WWWowSlZYZnFUQzZROAo4Nzd1YWttMm5DUFc1bFUwamhNNVRUbzNtNDdRU1NGLzdhNUt3U29VUnRGZzdnaWl6TW9EUlhwUUpLMFNkMWtpCmJkSVJ4OFFDNWk3YWlyMjdpV1pWZ3FtQ2d1VEpZVHkybDR4OHdRbXRtbmVnT2Y4TE4wdHZsWWl4UGRvSFcrWk4KRVMwNzhyZmtjbmFsQ0dZc0xNZ3M4R0dhVTVFbHh0N2wzemc0YmZVRE5IeE42eEhEV2REZ2lBYnR2cDR1YlltKwovVWRGblFTOUNJcUNsRXNYdHVJbU96M01PSVIvMS9pWEtZdTg4Nk09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbWlGcVBIS25JcjQvUUtZUU9kZ3FBTy9sSlRYeGRaRVgzTUlHWW9MUG5rRDcxaUJiCjhVOTU2QUI1Tmg4SGRjaG1Dd3VSTkhaM3JLQWdvaFdHcVZaR2tVZ0pBaERXSDFLWVdqaDlacVV1SFNCS0s2NE0KSWVaRmdTWW0rNEIxUFF2b1oyV2ZzSDlDK0dHNytjUzZqNUtsQXJnb0NrL2c0WVNLWi9QQ0VieDlpNGRyWE01WgpBSTEzdVYrZk9LSkFxTEw5b2dHaW9KczVWbnZSU1pVVDErRW9JQSt2NnNmcHpOTk9aODJwTXZJaFI2UTgzVWMwCkxtMUZEMCtnQ0lkeFdMMGdpVjFCU2dEU2hlS3FNVHVWUkFEeWxTYTZHS0FNcnV5VjJ1VlVaSWJERDlYWHlVZmYKd2dCMkhqNEFEdWJ4eElpWm5kMTJCNzZSSHFIL2Y2eWFhTnR4VlFJREFRQUJBb0lCQUIxQWRqOGVxMlhHb1k2TgpkY3Jrb2FRbjQxOWFpNGI2a0lMUE9CTCtMSlVtVkNWaFl0RzdlYkYwVll6VityNTUyQlFFai94YTkzK0ZyR3ZXCmxnWVJYN2MyNnE2L3IwT21rMCtjSlFDVUhOcGVSSFZoeE4reUtrTEdrT051ajlHVUx2bGdxaHYvS3lDa3U5NDkKWGdMZG0vK1dIOU5GTWJMYlNzRkwyK3N0ME0zb0RDbE53ZWdESmFXbGV5b1d4R3hGR3dJNmtHK1BFbkhJelJ5aQpzOGRNOW1wdFdsKzNsNzcvZFBydHlUd0FJSFpCMEpXeVpVVVNUZGx3K2lMbXZYa1hZdXVHOG1pbWJsdUdYVENwCkdqeEJsNGwxNTJtNW9XdEhDRTNKKzZNZHVpMENjT293c21udUdiM3lyTzlrRWJGNEZabkZFeUFKTUxWeDF5TkwKbDQxczNna0NnWUVBeWhQUHdxd3gwb2dXcWtLMnJYek1rcXVKdk56UHpCTkFldFdhVmg0T1c4VHdQSTNJTExTTgpkM09TMEVhTWloa1RrUHNPdVF4S3hFc3YrMXg2aUpJbVdjdGo0ejlheGZqYjFGZHhvMktmNGhPaTZ4OHNZYkNsCkVJeisvRjZzdmo2eVJKUk9KM3p4dnRTQUlwVTNKMXNQWGdldk5jZTJDYVlHOFNaaUpCU0FpWWNDZ1lFQXcwSkoKVVFPSDhlZjlVbFJ2UDZER1hhT25vbUJrcmxOWHJtNjIybFc4OGlnL3FtcytFbitSOCtKdVlhemFQWVMzVHFnbwpzZm1ZeWpWTzNnUXFOZUUwV2tGMGlDa3MxMGtNdjQ5UkhBdXpFVmxFai9Xdk5YMzJHMG9sM3psOERqcDNJODIrClk4bTRFbmM0TDlmdWxiczY3ZW13V2o0M01hd0NLUXA4MUdqdHRVTUNnWUFwQ1g3dW5NTjlhcStYb2ZheElwLzAKeFNzeWxIRUtrM3BMdDZjaEIvZUlnV1Q4Rnhyb29UMzlYUllhZjhrNG5rRVA5endWTGo3Y3dCd2RZcmxybEtwLwpIOFBJT1d4NHVjSUN6RU5DbDl1Nk1KeXNQT2RwYTFNS0dtZ0ozandjWW1VWGNqcXc0RG5EdENuVlhCSVlSdkRHCitxNkZNR3B5YVNvTnZPcS9RdjZiYndLQmdRQy9scDM3MlB3ZU42U1BrUHVyc2lTUm90QU1lb3F2cG1WRmFhc1AKWnN0RHpJeFR1bkNvay9YeEdMOTRKYlBxWXZ1K09TL2RHZXg2bEgzelNLRG1SemdvUzB0OWd2RlZ1SDdDdzJ3eAptYVUxbzZLcm9zVXROcEF5VExvR1l4QS9vY3hmSERUeEV2QURabW1DUUYwQkhEcUJVU2hTRS9QeVVEVzZjV2owCnZwUm5vd0tCZ0VwK3pSWDRFMVNiZ0JJdmdMV3hNbFZVZ25rVkR3ZHZEQ2JjZS9uQm96WEE2VzFha3FVK1ExTmkKQXNnZklNTVkvNDQwZXZRc000bElqNTFRWXY1T3NtSTNCSG11U01TR0l3bnZvTStZcmwyRDNwNThGdXpySm1BWApWbGFpaTVKelFZbXgrSk5VdmUrZ2Vib3ZFY2R4S3JETXB6bTVQWlFwUlVkSXhnYUJPSTR2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWXFhZFFXcURLT0FIVkt1MUpGVDF2VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNE1EVXdPRFE1V2hjTk1qWXdOVEUzTURVdwpPRFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGpMc1VLSzRlY05hNGhyaTBDUElGVzZvdStoelBPN2pIR3luZTg1ZWk3VjNDTlZXL1YKVElUUmE3R2JTVFdrZ1EveHhBTnRKVUhXaCtiOFVUTEVrS3hDdS9DMXBYa0lxYnRQdjBuNnVzWDN4YWZlR3ZGTgpJYTRtMTc1Z0dRMVlka0hyc3JtOERGQ3A2S0JscUZPeHVZTFZHaldPZFpqUlZkdTNCLzlDbjhjVlFYT0NMdittCjRaTlJEcVJnOU9QMGlyK0Y0MUFpeVJMSGt0dlF2QnlyaHdoYy9vbVhSQzkzY3NTbEtiQmZzNkY5cVFPRk4wTVAKSEdFQi9iQXlsUzlRM0psMzRMZUtJVkJyZFZQNU9nZDIvUGtGWGVRWmFqZ3p0SldzRTBDbUo1ZnVuTG9zdmNFcAptMEYzTXdNbkE5Rk8wSkFEVjd5aFR4MlIyMklVcldtTWIzUkhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVTK29CekVXQk9lYVB1WXBYV0d1YkxoWmdxQzR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMa2pvb0VPdURjWFhqUGE0OFpoSnZyNzVEeGg3TVoxM012SnFURjVHb2RBUzhVbkxvb2MxbWE3CjNzRUtKbU5RNUhpNTNNV0g2bTRJdDB1Nmh6SmVNbm1QajE4VWQ1S1h5Q3NPK21DTXNlUWRsVFVBUkZxZWs3Z24KZ2NBa1M0ZXZEQmtPa1U4MG85WXFkalJCVlZiV3pVK1hGSWtrYUxYcmdjSWRnNXVDUjM2T0NDcytzRHpoejN5TAovSnBBK3RSREIyN0lJbVpzK3Nyb1FIN3l5amhtclVZdGdOa1o5R1FCNGdHNmQ2bTZpK1VDSDBTUnNzeTZuakQrCm9IMzNoVTBhWU1XcFpGNXNMaW5SbTZvaWNBL0V3SWFZckk4S2tBWm9mbFQ5T0IveHVHZFVrZnVETEVkMk1yTG4KeHJYdmUveUZwVDBVMU9VdFRlNXVpUDdMZ1paMmRDWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRU2ZtUnM2UUprZ2c0VU1qVC8yZkhKVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFNE1EVXdPRFE1V2hjTk1qWXdOVEUzTURVdwpPRFE1V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdTc5dm5pSE15R21CT3dXR2FZQ0QKWk5SZ001b1ZPaU1URWYwK1FMYXhpWnNIWmpVaU9CMXl0ZkNjT0lmZ3FrTUpnLzRheGhBN2NqZ3RGUi8zZUIybQpXUllUdnNxOUVmaFZQenkwMDNFNit4UWZUZ1RlMnVHd1BESE8yV1hENjRJck9LeUptbUlyZWI0WTdKRU5oUFNFCkp2WTFLL2cvMzNnNk9KZHRxWmdiV25YMDJhR0ZHRGNFRURWYWVKWTZvUUgycGF0bXBVd2N0TnNleENqbDlwbnUKNjJzZ2thdE9JWm1IeTlEQlpzV1VJcUF3L3lBcklZU2FyVHU1Z0FWUkMrUVRqVk1BdWtkdmJXVmxJUFpaeXFBNwpKV1o5TlFXOEJZS0k4aTl0T3R0V2t1L0lWWmVqSVJNS3FsV0lZOUdacHNnNkthd2hxKy9aL09QOXFVOTRWY1pXCjlRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSTDZnSE1SWUU1NW8rNQppbGRZYTVzdUZtQ29MakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWFBuczhIbzM3bHl0aThnbExWWWRjeXN6UVE4VlYKeUNVaVN0aFZGRFVtOXViWjU3eWZDaWRCbllkbitjdDVaZUZpenEzWG1rMVBvUHNLaGZnSWU1SDRlL0l5dTljTApMWUZFNTlVQkxVMVFJZ3R1d2pYb0V2MlVNb2ExQWN3Wld3cmJNYW9LenVEOUVZNDdRcWkyWUE4R2s1RzR3VEtBCk4wUHo2ZzI0aCtiZGlxVTEvVXZWdjgvdGo1c1V5SkIzU3p0eFZWSDd6ZGVaUjJ4QTFSb3RVeG4zQlh6TnJsVWsKQTNXTWxjYTBsekg2TmFrK1hoVk9CdkxCc3c2NFZPYnpMSUVWUzhYL0NWVXVpK01xMkZSRTFzRjJBQWFLdmovYwpCei9EeENGUWpJYk1QMHVXQldDYzdRUU1YYzV6OStBRTkyTXFUM2pQcUk2OTJkQjZOSm5nYVAzbQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTc5dm5pSE15R21CT3dXR2FZQ0RaTlJnTTVvVk9pTVRFZjArUUxheGlac0haalVpCk9CMXl0ZkNjT0lmZ3FrTUpnLzRheGhBN2NqZ3RGUi8zZUIybVdSWVR2c3E5RWZoVlB6eTAwM0U2K3hRZlRnVGUKMnVHd1BESE8yV1hENjRJck9LeUptbUlyZWI0WTdKRU5oUFNFSnZZMUsvZy8zM2c2T0pkdHFaZ2JXblgwMmFHRgpHRGNFRURWYWVKWTZvUUgycGF0bXBVd2N0TnNleENqbDlwbnU2MnNna2F0T0labUh5OURCWnNXVUlxQXcveUFyCklZU2FyVHU1Z0FWUkMrUVRqVk1BdWtkdmJXVmxJUFpaeXFBN0pXWjlOUVc4QllLSThpOXRPdHRXa3UvSVZaZWoKSVJNS3FsV0lZOUdacHNnNkthd2hxKy9aL09QOXFVOTRWY1pXOVFJREFRQUJBb0lCQURTTjFNZTEvR1hKS3JTRAp5bWt6NFJQVFl3NXV2aXhrN3d5bEQ4ejdsdHpHK1o1QmwwK1A1ckZKSmVHcEgxbHBwSHMvSU8xNlU3bVlRZjVjCjBWL2RKTmhoRnF2Y2dtcEtVa3ArU3J1NVFXSlE4cVpiTktxZWJEK2RUYUtMR3ZtTW1WNm01V25DdXhxNy9Ld1QKdW00U0ovL2tBV1JLZkU2b2o5dVJmOC91VlJIUDRqVGV0MkhwSnlhZmtKMk9CTWlLVTI3VmxlTTRmSjdhUmEySAp6K3JWeHEybWM0clZkdXNsOEVLMlJycmV1NG1pYUg4WnRKT21uZnBLVkdjcG9zTmxKZDlBbXVCb3R0ODFUaWF1CnYvZGJ4UXRENFNqVHplL2p5SnNFM0s4M3BLSmxtblY4SEREekhqd2VNM0R5UVJCQ0UzSXBtVXN4aEgzRTZIWEcKdnFkbEE4MENnWUVBMXlLaGpkTDh1VXJJdUVLWTUzQkp2R2ZTWWRGa29aS2E3SXhlN2I2ZDVnOGNPa0cyYzF0YQpCRE9YcWhOWjRiVjdCdm9LZ2J3LzZ2NWx1dGp3Y2NLZ1AyenNoVTFRbHNBamhxVUlzZktlNUJVSk9Bd1lURlR0CjB3VzltQTdWbWc1bkNpRmlIVnNNZHhuVjl2VzhBRVpKc0o1UkNUb3lYM05WZDNldFBDSEZtVXNDZ1lFQTMya0oKSlFUeDB2eVhhbVBrVURYTU1uZHdVZmpyeEc3eWxodmJ6NzJwVVU3RytrY1JNejB2dlUxckE5dGdHOTBGYmQvdgpLait6QzdBZGp4cjlPK0FsSDlwNjkwWWVzbjltUmFOSU9oYU4yOTd3Q2xTcGhaTTVWNGxSUjhnQkRMY1RNS3h2CmNIYTYvckVhd0VtOGlpeE5Nb2g3QklGL2FZem1lbEtpUldJbjZMOENnWUFTamJZSkdTMGFmY3ladDRTZ1VScksKMk5sWC9rc0RkRFZRT1RybW5nM1lEVzJOeUtVSGhkVlpqMm1CRFhJdStRdkhLa0ZGdHdwOEpieDRSTVZYeWtVdgpzeUVpemV3cFZDQzhOL2RzQVZTYXJ3WEFnNnFFeXI1SCtMTEZMbUpWaXZCdit6a085dzg0Sms1Qm9pZTRqbGRFCm1DSzgvUHZqSjNzemRtckdTTk5WeVFLQmdBblUwWFl6bFlDM1pPSmxxdkpzcTZPODVkQjFwOHBwSjN1N2xoeTYKTisxQURqbU5UeEIyTE5lanhJWFM3WlBNVWlUWHFlcXVDdThFdlFoREk4bXl2Mjk3YWRYZjNCSDIwVVZYUGlKdwpRNlhkVmFyZXR1Y041NFFXb3VFSnlDSUxIR2tUN1lPQmRoRW5NZ29zTklQUUYwV1dBL1BhendTU0VzSm5TSVROCklQeDVBb0dCQU12VmErKzdZMTgyRUhRZm9tbUhJb1BaM1VtdXVCYTlvV2U2RXFaQVlaWjdlVExUWEd3YWY0TE8KYWxzSGo4SGxneitpWERuK0lBSU11V0UrK3RkaUx0c2c0cXZOeVVZMVhZdjdqbEVzekM3YXZzMVQ2VXJVYjZCVAo1akRVcDdBSUFVOVZpcnU3VXkwcTdxNFcrRGdZTC9oTk16aUx5NzIranZpcXpIWTllU3hpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
