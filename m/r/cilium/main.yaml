apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3BmQ29JVnFYQ2Q4dGlyK01QNXhGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUXpPVFV4V2hjTk1qWXdOVEExTURRegpPVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHVHVTBpZ1QvM3V2akVhejRHMWlzZTdERjQvbkNnamg4VjZOWVlBbm9Md2RQdXFhRy8KUnpKcmhoWFdDQWg2VlhyZmlVMjVoVlpwTXlkK0Y4TXhwM0hrUkVVNFdjNmVFRlVrVkVubmlmR1I4V2hsTWJqbwpmV2YwVkV5QmwrNzFyZTNBME9GWkthc1Q3ZGNKWUxtRkQ5UG9hOExKeW5SaDl0aklNNG9lVXBWZGxTSG9QY2NOCkkvS21jb09EVmJJa2VUcmxGcGVvQmxGYUlDNlJ0akFVQzlXZG00T0doYVU0S2FPbHYwVE5FU3Zjby80S1RnM2EKRG1va1VmQ004dDVURlNBdEMwdzBQNjBJYmwvdHRwTTBHK2tFZ2xNTUUvVGNobjFydUlCS0poaXlPOWxkTFVFbgpsTmcrMlREWE5XWDdvb1k3UGlnYndKeS95UGdhYVVBWE9TekRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjR212Z2FBV2VVN0E5M0xQek5jdkdyMzRIMDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzF1Q042djIwWjRXcWN0RmR2d2NnT1I3b3M4M3RYMFBpVXc4QzRtbG0zQnlJV2EreE1FUEFLCmFBZGkzMzF3ZU9nSURPUHBtUFFFYzRIcllyakgwaW9VVTlUN3pPZlpvM2s0WjN2M1pXUmt0Wm93YmNXNnBBWGgKemxYd2pHYXRmWGxDUmlyUDhCMHZpRWFVUEpNR1VML2VtMDhjTGtZZzRGb3lpVlMrRXpBSnJiTG5ZY0xBc2J3dgp4OWgvN0ZsNmxyMHRNL3RxNktZVGtUUHdkTldQOFRPa1puR21TcGdvem9ZeEVXd3pHT2E5cWtndDNOeU1wR1ZMCjE0TjAyY0hWbE1qMVVLQ1BVZXg2ZUhHa2IzRVFEZXhkU2xxK0NKajVxL2REU3kyTm5mZmNSaGN5OWUvQ2RYV1oKS3hIZ0NwdzJDZ1EySnJsWUlkWjdrUlZxSVhmM2owWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN2hsTklvRS85N3I0eEdzK0J0WXJIdXd4ZVA1d29JNGZGZWpXR0FKNkM4SFQ3cW1oCnYwY3lhNFlWMWdnSWVsVjYzNGxOdVlWV2FUTW5maGZETWFkeDVFUkZPRm5PbmhCVkpGUko1NG54a2ZGb1pURzQKNkgxbjlGUk1nWmZ1OWEzdHdORGhXU21yRSszWENXQzVoUS9UNkd2Q3ljcDBZZmJZeURPS0hsS1ZYWlVoNkQzSApEU1B5cG5LRGcxV3lKSGs2NVJhWHFBWlJXaUF1a2JZd0ZBdlZuWnVEaG9XbE9DbWpwYjlFelJFcjNLUCtDazROCjJnNXFKRkh3alBMZVV4VWdMUXRNTkQrdENHNWY3YmFUTkJ2cEJJSlREQlAwM0laOWE3aUFTaVlZc2p2WlhTMUIKSjVUWVB0a3cxelZsKzZLR096NG9HOENjdjhqNEdtbEFGemtzd3dJREFRQUJBb0lCQUNNdXNlc3JWaHh4RUZsVgp6M0NMTFF3QXNyN0NPam8vUmZDaTJ4L3BIY2VtK0g0SHF0THMzbEp0R2NUcW92WVFzM3RjZXBPelZEVnZUYUtnCk9FT2FEb1pBWUVvWFd5U1lIVHlsQjlhaTE0Tk5QTFBYU1E5eG1HN09GaEFBTjFzdVBEZUZwZ2JhMVdDNGdGSHUKYlB0d2YwdVV3TSs0anNIN0M4VnBlRHRLMEs5bkZRWVU3WTBQZC9zYytSdzA1enlac0licFhiaktURzNlQ3dCZApHb2lLdjdoMWtnU0RUTmRwOVRyL1BsMjB4UFA4WGxjSUJXRngwZXVBdDlmV1ZUWTk0Vk8wSjRITkVmVWtXV0NnCng3MHBmTjFpdXZtUkxxT2lLZEkxU1FjQ3hIdkJvTm9vSTdaZHVLcFdrU0RxajRFb1BpQXBlRE1Wa3B1TWJnaWMKcUxxY1BlRUNnWUVBKzBxa2hiNUZJVXpKYnF1aGMrTStuYy8xQlFNb09wUmZRZVBVK004NWJXNVBuRDFGRE8wcQpOam5BRmNQdmdCZlFkYjBRWEJ3NlFJMW5YRmZBNGtHNHdtcVM1WjNnWHB6LzF0TllJS2dLQjBON3Q0VWhvbXlSCkZ3TWo3VU9IVzlmM2dWOERtdE1iQmQrTzlFNWI3RGdIMlhZOWdiR3dwMFFVTGRwTVd2Nml3U2NDZ1lFQThvOWcKc1hKNmNRNnFJZ2R5SzJTZ3V1Sy9pS1cyZ21teGRwdXdmNDF1cjVUR0xrb1FQRG5tUG5LS1Rhenlwc2R2VlhTNQowdWZVU1BXeVYzOWVRemR6cEFrc0U0ZFhmT010QTlmTThBTEkrUER2K0NZVlVTV1o1UzdEY0IrVW1aTHhBTjRZCnlaVFZvWVNqRXNmR0hTUmRRaERVY01uc1I0SkpvZFJsbkF4THdRVUNnWUJnUEFPcG5HWkpER2tQMHZhdnROVWsKQnFIazI0S3FmR3ZHaGdQbmpTU0cvZm5LOGNQaDRXbUsvcTdMSnhBdlUrOW5SNUplVkFrUzg1UWp6dzkxRm9vMQpHaTlMZEJ5YTN6RXpDaGp6MkthT2hZOTVocWlNMVZyekh5YkJGRjFnRk9NYVRsTEpGaE9CT2s0NnpVOXl0VHA4ClUwWFd4ei9KcnM2emlLZzVLTThYZlFLQmdRQ3RuS29jMkUrRE5IZlp1M0tnVkhvbXliMUYxVFo0eWFYWHV6L3QKVEJINVlvY25BcVAwTjR6eERaS29YaTJmNmdkcUp3NEtReHpTeStsR2IwZk0zSmZNeFRQakZuQXNWMzRVemhWRgpoUGpNRmNmczJYVlFpNVZIVU4xYUY0Q0pHMytjbTFzcWpYa0xEcUNhQkp0c3FHYUhydndmYnFmTDF4bFUxMjJTCjc4b1k4UUtCZ0hEdFNiRUFyaHF4VXZIOFBKdS9UQ3lOc2hFR1U5cUtwVjJuTkc4dXB1Umx1NjN6LzFVVWc2UUcKVW1ETUZYNDQyQXBqTWJodXhmd3N3OVRhSlhzM1VOalk4WXpRNTZBMXk3V29PM3hkYUN2elFDUTA1NHZnL094NQpCcDBjeFdGUG8xQ1VCV3RlUGJmM1J6MmxFbXIyOGphRHFFNXlnaG5oM3JwS01tTEU2WjE5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3BmQ29JVnFYQ2Q4dGlyK01QNXhGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUXpPVFV4V2hjTk1qWXdOVEExTURRegpPVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHVHVTBpZ1QvM3V2akVhejRHMWlzZTdERjQvbkNnamg4VjZOWVlBbm9Md2RQdXFhRy8KUnpKcmhoWFdDQWg2VlhyZmlVMjVoVlpwTXlkK0Y4TXhwM0hrUkVVNFdjNmVFRlVrVkVubmlmR1I4V2hsTWJqbwpmV2YwVkV5QmwrNzFyZTNBME9GWkthc1Q3ZGNKWUxtRkQ5UG9hOExKeW5SaDl0aklNNG9lVXBWZGxTSG9QY2NOCkkvS21jb09EVmJJa2VUcmxGcGVvQmxGYUlDNlJ0akFVQzlXZG00T0doYVU0S2FPbHYwVE5FU3Zjby80S1RnM2EKRG1va1VmQ004dDVURlNBdEMwdzBQNjBJYmwvdHRwTTBHK2tFZ2xNTUUvVGNobjFydUlCS0poaXlPOWxkTFVFbgpsTmcrMlREWE5XWDdvb1k3UGlnYndKeS95UGdhYVVBWE9TekRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjR212Z2FBV2VVN0E5M0xQek5jdkdyMzRIMDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzF1Q042djIwWjRXcWN0RmR2d2NnT1I3b3M4M3RYMFBpVXc4QzRtbG0zQnlJV2EreE1FUEFLCmFBZGkzMzF3ZU9nSURPUHBtUFFFYzRIcllyakgwaW9VVTlUN3pPZlpvM2s0WjN2M1pXUmt0Wm93YmNXNnBBWGgKemxYd2pHYXRmWGxDUmlyUDhCMHZpRWFVUEpNR1VML2VtMDhjTGtZZzRGb3lpVlMrRXpBSnJiTG5ZY0xBc2J3dgp4OWgvN0ZsNmxyMHRNL3RxNktZVGtUUHdkTldQOFRPa1puR21TcGdvem9ZeEVXd3pHT2E5cWtndDNOeU1wR1ZMCjE0TjAyY0hWbE1qMVVLQ1BVZXg2ZUhHa2IzRVFEZXhkU2xxK0NKajVxL2REU3kyTm5mZmNSaGN5OWUvQ2RYV1oKS3hIZ0NwdzJDZ1EySnJsWUlkWjdrUlZxSVhmM2owWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBN2hsTklvRS85N3I0eEdzK0J0WXJIdXd4ZVA1d29JNGZGZWpXR0FKNkM4SFQ3cW1oCnYwY3lhNFlWMWdnSWVsVjYzNGxOdVlWV2FUTW5maGZETWFkeDVFUkZPRm5PbmhCVkpGUko1NG54a2ZGb1pURzQKNkgxbjlGUk1nWmZ1OWEzdHdORGhXU21yRSszWENXQzVoUS9UNkd2Q3ljcDBZZmJZeURPS0hsS1ZYWlVoNkQzSApEU1B5cG5LRGcxV3lKSGs2NVJhWHFBWlJXaUF1a2JZd0ZBdlZuWnVEaG9XbE9DbWpwYjlFelJFcjNLUCtDazROCjJnNXFKRkh3alBMZVV4VWdMUXRNTkQrdENHNWY3YmFUTkJ2cEJJSlREQlAwM0laOWE3aUFTaVlZc2p2WlhTMUIKSjVUWVB0a3cxelZsKzZLR096NG9HOENjdjhqNEdtbEFGemtzd3dJREFRQUJBb0lCQUNNdXNlc3JWaHh4RUZsVgp6M0NMTFF3QXNyN0NPam8vUmZDaTJ4L3BIY2VtK0g0SHF0THMzbEp0R2NUcW92WVFzM3RjZXBPelZEVnZUYUtnCk9FT2FEb1pBWUVvWFd5U1lIVHlsQjlhaTE0Tk5QTFBYU1E5eG1HN09GaEFBTjFzdVBEZUZwZ2JhMVdDNGdGSHUKYlB0d2YwdVV3TSs0anNIN0M4VnBlRHRLMEs5bkZRWVU3WTBQZC9zYytSdzA1enlac0licFhiaktURzNlQ3dCZApHb2lLdjdoMWtnU0RUTmRwOVRyL1BsMjB4UFA4WGxjSUJXRngwZXVBdDlmV1ZUWTk0Vk8wSjRITkVmVWtXV0NnCng3MHBmTjFpdXZtUkxxT2lLZEkxU1FjQ3hIdkJvTm9vSTdaZHVLcFdrU0RxajRFb1BpQXBlRE1Wa3B1TWJnaWMKcUxxY1BlRUNnWUVBKzBxa2hiNUZJVXpKYnF1aGMrTStuYy8xQlFNb09wUmZRZVBVK004NWJXNVBuRDFGRE8wcQpOam5BRmNQdmdCZlFkYjBRWEJ3NlFJMW5YRmZBNGtHNHdtcVM1WjNnWHB6LzF0TllJS2dLQjBON3Q0VWhvbXlSCkZ3TWo3VU9IVzlmM2dWOERtdE1iQmQrTzlFNWI3RGdIMlhZOWdiR3dwMFFVTGRwTVd2Nml3U2NDZ1lFQThvOWcKc1hKNmNRNnFJZ2R5SzJTZ3V1Sy9pS1cyZ21teGRwdXdmNDF1cjVUR0xrb1FQRG5tUG5LS1Rhenlwc2R2VlhTNQowdWZVU1BXeVYzOWVRemR6cEFrc0U0ZFhmT010QTlmTThBTEkrUER2K0NZVlVTV1o1UzdEY0IrVW1aTHhBTjRZCnlaVFZvWVNqRXNmR0hTUmRRaERVY01uc1I0SkpvZFJsbkF4THdRVUNnWUJnUEFPcG5HWkpER2tQMHZhdnROVWsKQnFIazI0S3FmR3ZHaGdQbmpTU0cvZm5LOGNQaDRXbUsvcTdMSnhBdlUrOW5SNUplVkFrUzg1UWp6dzkxRm9vMQpHaTlMZEJ5YTN6RXpDaGp6MkthT2hZOTVocWlNMVZyekh5YkJGRjFnRk9NYVRsTEpGaE9CT2s0NnpVOXl0VHA4ClUwWFd4ei9KcnM2emlLZzVLTThYZlFLQmdRQ3RuS29jMkUrRE5IZlp1M0tnVkhvbXliMUYxVFo0eWFYWHV6L3QKVEJINVlvY25BcVAwTjR6eERaS29YaTJmNmdkcUp3NEtReHpTeStsR2IwZk0zSmZNeFRQakZuQXNWMzRVemhWRgpoUGpNRmNmczJYVlFpNVZIVU4xYUY0Q0pHMytjbTFzcWpYa0xEcUNhQkp0c3FHYUhydndmYnFmTDF4bFUxMjJTCjc4b1k4UUtCZ0hEdFNiRUFyaHF4VXZIOFBKdS9UQ3lOc2hFR1U5cUtwVjJuTkc4dXB1Umx1NjN6LzFVVWc2UUcKVW1ETUZYNDQyQXBqTWJodXhmd3N3OVRhSlhzM1VOalk4WXpRNTZBMXk3V29PM3hkYUN2elFDUTA1NHZnL094NQpCcDBjeFdGUG8xQ1VCV3RlUGJmM1J6MmxFbXIyOGphRHFFNXlnaG5oM3JwS01tTEU2WjE5Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3BmQ29JVnFYQ2Q4dGlyK01QNXhGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUXpPVFV4V2hjTk1qWXdOVEExTURRegpPVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHVHVTBpZ1QvM3V2akVhejRHMWlzZTdERjQvbkNnamg4VjZOWVlBbm9Md2RQdXFhRy8KUnpKcmhoWFdDQWg2VlhyZmlVMjVoVlpwTXlkK0Y4TXhwM0hrUkVVNFdjNmVFRlVrVkVubmlmR1I4V2hsTWJqbwpmV2YwVkV5QmwrNzFyZTNBME9GWkthc1Q3ZGNKWUxtRkQ5UG9hOExKeW5SaDl0aklNNG9lVXBWZGxTSG9QY2NOCkkvS21jb09EVmJJa2VUcmxGcGVvQmxGYUlDNlJ0akFVQzlXZG00T0doYVU0S2FPbHYwVE5FU3Zjby80S1RnM2EKRG1va1VmQ004dDVURlNBdEMwdzBQNjBJYmwvdHRwTTBHK2tFZ2xNTUUvVGNobjFydUlCS0poaXlPOWxkTFVFbgpsTmcrMlREWE5XWDdvb1k3UGlnYndKeS95UGdhYVVBWE9TekRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjR212Z2FBV2VVN0E5M0xQek5jdkdyMzRIMDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzF1Q042djIwWjRXcWN0RmR2d2NnT1I3b3M4M3RYMFBpVXc4QzRtbG0zQnlJV2EreE1FUEFLCmFBZGkzMzF3ZU9nSURPUHBtUFFFYzRIcllyakgwaW9VVTlUN3pPZlpvM2s0WjN2M1pXUmt0Wm93YmNXNnBBWGgKemxYd2pHYXRmWGxDUmlyUDhCMHZpRWFVUEpNR1VML2VtMDhjTGtZZzRGb3lpVlMrRXpBSnJiTG5ZY0xBc2J3dgp4OWgvN0ZsNmxyMHRNL3RxNktZVGtUUHdkTldQOFRPa1puR21TcGdvem9ZeEVXd3pHT2E5cWtndDNOeU1wR1ZMCjE0TjAyY0hWbE1qMVVLQ1BVZXg2ZUhHa2IzRVFEZXhkU2xxK0NKajVxL2REU3kyTm5mZmNSaGN5OWUvQ2RYV1oKS3hIZ0NwdzJDZ1EySnJsWUlkWjdrUlZxSVhmM2owWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5lUWFtZFQ0cGdMbjNsTWs5alY2U0l3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd05qQTBNemsxTWxvWERUSTJNRFV3TlRBMApNemsxTWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhwNXptUG5pZUVjTnZGdGQzZWVpUUN6b0NVWGEKaW13Ukx0OWNmK3BzaFZMT0grOVc3eldGeU1kUUFRWlQyMzVWcFFMMzNtbElqR3dBWHlsU0d5dGNpQUxjYkhvawpGbm1kYlV0OWZLeGcyZndUU3Vlc2paWnMzZ1prN0F3dFROS1dFamRSRlFoclBqWDRxN0tzWDVaTXY1cTN4aE04Ck9MY09tZ0pFOGVxNmFkMXhKOG5TdUEyT2MydktBbjRXUFBWZTE1V005N2ZmNUFBdk1OMjRueGZRUWxTQllacmUKMTFXSEFjbnpzWE53K2tlN2pCWDlBeGQ3eTIrd0l6WE1yOWxQcTlUamVHVEtDUDUxQjRpbkc4ZlBaWHhON055eQpQZVJhWmgyYlVtYnBoY0tKTmUwRndWSjBjUWJmbytYRXlFN3pEZk1UZ2d5VWs2cmZiekdOblpXclR3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUndhYStCb0JaNVRzRDNjcy9NMXk4YQp2ZmdmVHpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQnA4RmZSbU9nVUxWTm8xSm4rRGtoZVpMOVdnN1lmU1h1QUVMRlpSMFhpWUo5SEQKUnF3SmtZd3JuQXRPT0taMnhRaGx6VTk3c3BhcDVjSmwyUzVOWmlrQ20xMDhqeUdvZ3FPT0ZOSUlycEtUVTFpQQpQcElScjBlQ3FFODJKWlZmZlpjMzZ1czhoZVFBY2pxU1h5Z2R5OG0zQjFsRU9qNkZIeXVVNFgvK1NPSlBQb1RHCnN6Rm4wY2VVTFFKZUJ3Y0dkNVdHVngxQXdJdzAxSXNuNXZqNDVSaE1NeEtHanZ2d2daK2VXdHZPV2l4Nk1Ob00Kd1NneGsyZG5qSEs4V1drUnJZRVAxYVVZU2pWQlI1dUhHZzFYM0tzWTBsTDFhc0ZuVzhrWUdJOXpMcS9rL2RHOQpPRDV5Mi9ENHA3QXBDT1ZtT2hFRHN0cWY2Q1ZlM21Ubjl4QVFOaXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHA1em1QbmllRWNOdkZ0ZDNlZWlRQ3pvQ1VYYWltd1JMdDljZitwc2hWTE9IKzlXCjd6V0Z5TWRRQVFaVDIzNVZwUUwzM21sSWpHd0FYeWxTR3l0Y2lBTGNiSG9rRm5tZGJVdDlmS3hnMmZ3VFN1ZXMKalpaczNnWms3QXd0VE5LV0VqZFJGUWhyUGpYNHE3S3NYNVpNdjVxM3hoTThPTGNPbWdKRThlcTZhZDF4SjhuUwp1QTJPYzJ2S0FuNFdQUFZlMTVXTTk3ZmY1QUF2TU4yNG54ZlFRbFNCWVpyZTExV0hBY256c1hOdytrZTdqQlg5CkF4ZDd5Mit3SXpYTXI5bFBxOVRqZUdUS0NQNTFCNGluRzhmUFpYeE43Tnl5UGVSYVpoMmJVbWJwaGNLSk5lMEYKd1ZKMGNRYmZvK1hFeUU3ekRmTVRnZ3lVazZyZmJ6R05uWldyVHdJREFRQUJBb0lCQURncEo2Q1N6OEdZdmI2TAp5eS9xeGtzRko1c3ZvRXJSb2M0eUpES2JNNUpEUnJ0cTdwYjIrRnc4VjFmaTFTVlVSSjFEQ0psZ0JiNkc3MWY1CkZCbFFtbnB1N0tyVG9vNmtWcXBIMVRUQ2ZTUkdEYUo1ZmFZUGFic2g3Ymw4Ky9ZaitZRXZHUU1zZlQ1Ni9sUjIKVWgwNUgzeHlJQkttNzdsTnNaaEVtZ0Faa2hwS25rb3VHRzlTblhWQkh5dFE3VEx0YUpMalpZTlRFcFdha3VVWQplbFlJcWYyc0pnbXlXUFZXVVc2ak1hUlFKb1k0Skx5bjByZVhLOVlreEw2QTdqUFBkSzQwQUh0SmdHQWUyckR0Ck5jMnRpRFV5MEJEaXczWVcxMTNsbGlzM2E0STVnYkxUTTVWbFFoUWJkblNQa21UNUhMNnpDNnZrM1ZyNzEvUkIKWXNsTVRHa0NnWUVBOHhCaXcwWUpoL1BaU05YS1BsNjRyc3M2TnhMYzFHR3hsc0htTnQvblZ4UjlPRGhsQ1pobApIMzU1bzhkS0p5S3R6NW1aZXZicWNrN1N4cHV2MzRWWTJMR2N2Q1F6UG56RWFoQ0NUd3FiRlkzRGhjVUVSdUNiCmFSbUZJVVNtWUtzR1JVREZ1ZW5acWtUQ0QxMVBmR0J1QW9lbkY4R1BmY0xnaytxWnB4amo4VXNDZ1lFQTBUQ0cKczRmTkFTZGlsdUtnZDhuNThTY2R3Z2FBQ1BpNWJtMTB0QkVScW8vYXNDM2pYVE5ZUUtjZ1ppS3hvTHRDRXgxWQplV0ZLTGg1MUhSaUtXZWV2Vk1wd1VJL04zT3ZuY29sa2pOT3gySXJwYnZ4cUU2RWNZa2VETC90cGI5QTFXaTVPClptWXFlMFd1SzZISEJZeUpMY0Qva2JtWi9HcjFtdHExbllNWEw0MENnWUVBaGVRLzB6dVFZb0NUNzhnOHlSQ2EKZ1ViWHdhQzFYcFNXSStxWnF4NjVxOEZRblJpTHA3WjM5ZHBRblVSWmQ2ZGx3VmJtTWRNMElGV0ZTL3hVN0RiagpVeks3bVBRRCttYjJOMHJ5elNHVmZsRUNKSHo3dHlOZzJJdERSNmt1VVUvRWUzK0xxN2JDdlVWMDlNdTh6bEc4Cko4NmIzNzB6RXQ2M29TTjVFby9tZUhNQ2dZQUtOdFJjNzhTU3lkbUdoSXBSVHd0bE93TzQ5WmhLMTlvMkNpSW8KcUt5MEoxSUdTRGRSMWEvNWVDK2N6UlRmUkVWMXFYa29kQmVyS05HUEdpT25RQ2pQZXhNQTNBU3hSTk9JUkMwawpzekY3NFV5RW5zNlBKczY3L2NIcUZkeVFHUnFCek1FSFB2WFVEeEx5RG5RcFVUTmhpSXJ5RXAzeU5VYkl5T1VWClM5RldBUUtCZ1FEVm5peVpiUWtiZytiZnVWLzJKbVppUFRaOGxzc1o4eXBac3lwYTNaRDhJc1ZFaVd5eEludmQKZmtReXcxVWxnQUN6VzVBYUZpbUtKOXA3Z0VHNXB2a3BBQzJhMTc1bVVneE15NzlCNk5NUUxIeTk1SkcxUk4wRApBVkxPVml5T0xDY3ZJWkluOGkyQmp2SFpBOUFxbGVQRzJRdS9TT0JSWnIvM3FqdFJBck5HckE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRQ3BmQ29JVnFYQ2Q4dGlyK01QNXhGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUXpPVFV4V2hjTk1qWXdOVEExTURRegpPVFV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHVHVTBpZ1QvM3V2akVhejRHMWlzZTdERjQvbkNnamg4VjZOWVlBbm9Md2RQdXFhRy8KUnpKcmhoWFdDQWg2VlhyZmlVMjVoVlpwTXlkK0Y4TXhwM0hrUkVVNFdjNmVFRlVrVkVubmlmR1I4V2hsTWJqbwpmV2YwVkV5QmwrNzFyZTNBME9GWkthc1Q3ZGNKWUxtRkQ5UG9hOExKeW5SaDl0aklNNG9lVXBWZGxTSG9QY2NOCkkvS21jb09EVmJJa2VUcmxGcGVvQmxGYUlDNlJ0akFVQzlXZG00T0doYVU0S2FPbHYwVE5FU3Zjby80S1RnM2EKRG1va1VmQ004dDVURlNBdEMwdzBQNjBJYmwvdHRwTTBHK2tFZ2xNTUUvVGNobjFydUlCS0poaXlPOWxkTFVFbgpsTmcrMlREWE5XWDdvb1k3UGlnYndKeS95UGdhYVVBWE9TekRBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVjR212Z2FBV2VVN0E5M0xQek5jdkdyMzRIMDh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCNzF1Q042djIwWjRXcWN0RmR2d2NnT1I3b3M4M3RYMFBpVXc4QzRtbG0zQnlJV2EreE1FUEFLCmFBZGkzMzF3ZU9nSURPUHBtUFFFYzRIcllyakgwaW9VVTlUN3pPZlpvM2s0WjN2M1pXUmt0Wm93YmNXNnBBWGgKemxYd2pHYXRmWGxDUmlyUDhCMHZpRWFVUEpNR1VML2VtMDhjTGtZZzRGb3lpVlMrRXpBSnJiTG5ZY0xBc2J3dgp4OWgvN0ZsNmxyMHRNL3RxNktZVGtUUHdkTldQOFRPa1puR21TcGdvem9ZeEVXd3pHT2E5cWtndDNOeU1wR1ZMCjE0TjAyY0hWbE1qMVVLQ1BVZXg2ZUhHa2IzRVFEZXhkU2xxK0NKajVxL2REU3kyTm5mZmNSaGN5OWUvQ2RYV1oKS3hIZ0NwdzJDZ1EySnJsWUlkWjdrUlZxSVhmM2owWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRT1pJRXVIKytIZE5XTnZRZjhZcWlTakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBMk1EUXpPVFV5V2hjTk1qWXdOVEExTURRegpPVFV5V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMG5aUDl6eGU4cXVhR01kNXBFVXYKbm0rckFzOFFKemlRc3U2QVFnemlHa1NmMzhxMmRwdUVvMWRXRFZBRTUxVDhabXdHbEhjc2tGdnVhcGJsMnZmcApSZmJXMHIycGwzL1l1VDlVVzdjeHFjb0hLbFVZRmpydk4ybTNMQmxZdk1ZTVhTaDlVQ2JONVdrM1dncXhUTURQCnVibE5SZzFmQjliUjk2SzB0eml4cnR6VHhQZ0dvOHhFQzE5czQ4T1ZEbWFlaVViY0NjTmI3V1ZQRHM5WGZiRG8KeUJGSHBwVGRYQkQvNFRoNUxwUHQwc0tEcWpQYjk0aFZwRi9oN3NXZ1JYZitRZHc0REk2VFl0MU5EUHY3MU9ScQp4MDlQRVBMOWQ4ZndERm9pbm1hcnFHTW5BelZJbGNoSU9HV1VTWENyMjhiRFlVT3paU1pyVkkzRHBsWmFWZXE3CmJ3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSd2FhK0JvQlo1VHNEMwpjcy9NMXk4YXZmZ2ZUekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBeWxDTzM0QVNQSEdSYlQ4a0ROVVFxWkNxcUNxWk0KcnBpd2JsVUN3dSs4a25Rd1FkQmh2dExsT1p6TG9kNWgzWFdFRUZZQVp1N1pCeFVGdjd3dXFiSHVGTlZnbkE4cwp1ZVkvSS82bnBZcnhLbHNvKy9GMTd1VUs1MDcvbUsvakhRVFJmcHJPb1k3Vm9GaEhOZFpmRDJEeTZZOGlKQ2ZzCnUyeUd3OFRoN3dRSWlSYVZ1bmRtMmN6eXBzQ0ZwL2dkMUJ1WG11a2RPRUNUT1ZQVGU1emxzT0dzT1lHWHZocHEKWi9IbjFpSjFiTi9RVUlHUFBmTXlweGtBa1NLOXd3Tmt0RnZhTU91N3dydmhaWVBuK1UxeFNyRWVQT25UL0NVYQpJSkVETkFybXpqbEpJNUVSTDJhVUZzUmVzK0F6Tkx0MjVJenlOQmdRVWE4U2c1TXVJRmsrU0hkTQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMG5aUDl6eGU4cXVhR01kNXBFVXZubStyQXM4UUp6aVFzdTZBUWd6aUdrU2YzOHEyCmRwdUVvMWRXRFZBRTUxVDhabXdHbEhjc2tGdnVhcGJsMnZmcFJmYlcwcjJwbDMvWXVUOVVXN2N4cWNvSEtsVVkKRmpydk4ybTNMQmxZdk1ZTVhTaDlVQ2JONVdrM1dncXhUTURQdWJsTlJnMWZCOWJSOTZLMHR6aXhydHpUeFBnRwpvOHhFQzE5czQ4T1ZEbWFlaVViY0NjTmI3V1ZQRHM5WGZiRG95QkZIcHBUZFhCRC80VGg1THBQdDBzS0RxalBiCjk0aFZwRi9oN3NXZ1JYZitRZHc0REk2VFl0MU5EUHY3MU9ScXgwOVBFUEw5ZDhmd0RGb2lubWFycUdNbkF6VkkKbGNoSU9HV1VTWENyMjhiRFlVT3paU1pyVkkzRHBsWmFWZXE3YndJREFRQUJBb0lCQVFDMlNmdWhMUTBnS3puaApWSVVybnpGTGpYVVZqYnR6L1M1M2pOUlNZVTVGYWtML1Yxa0xDbENzR2ExVEFvZjh4a09IZ3ZHQURtanU4SEZrCnFTYVZyanpDZUxaQStqMjJGdW5rS2RJclRsVVp0djdWejdaNUtycWZ5RlQ3UVVqMjJLTkUzUmtOSDA4ZThTOGMKTWo2M09CbXp4NmdDa1BwS2srcHhEdUJ3QWc4RVlIWk4rQjN6Zk1YbXRmTm5mbllDeGRFbjlrRmZqR21hcVpsYwpIaXRDb0tmTHIyeStMMk9renhUdWJUWTg0bElQQTdqQ3hXM0lGNmRlUjVHam1JSUFEb3RmbktkaUxxSHVmV0FHCkJmUUxxUSttcXpONmxYUHQ2cGNQYTlUaGlGSm9GQ3BkNVdxZzFraW9Cb2ltUEdTaWJuUWJxK0NTZ2dRMVBwbUcKV2ZpaVZpeUJBb0dCQU8rNGl1RldXTzMreGR4eG5MTDNzaTY4emVEVlBSNk1tUjhUQ09zUk1mUC9wWFNSMU5TdApSckNrczZTb1NKWjVyeTlvTUNnVU1xL0dCdnJSeHFhNnc1RVdSZU9UOHZWL1VJUFNoekhhSjFBQm1TWVRxbkVlCm80THV4ZVhPNmVrR2EycktrV0JqY0FFTG10QytwMVFzSStPNXVMdmREQis2RDZ4R0k1YTl3US8vQW9HQkFPREIKSGoyb1pOZ1V2SVAwdTI2NFNVekIvb1c5dmxzVFVqUWJXTFdmK3poVzlLS01HWHZyT290SWowV28xbTVxSWdoTQp4alFFTnR0VVJ1Wk9KT3hER21ncDM1TkZzT2NwSWI3cGsyU1NVZ3Jxcmd6M1FRT3UydWtUR21Ed0N4eHVtTzBVCnkrcWZNUkk4Z2hqbTdaYlVlaW96MnR6OEVWRkEwclBkY3hSdHIxU1JBb0dBV0RCOTl6UTY5eU5aU3lZSXpkWk8KR04rZ3Bld00xaVpIVnFVOERLNkF3QkQybjVIZXlIY09vSUdYRFNaVHZmZjZPT2lOZnRFZmJJYmZubnA2S0hCZwo3Z2xSb00yVy9qWGVPd0RDZDlhWHk5a3FyRlZqeU1YS3hhcHQ1NE5kampxc1hkY3o4RS9rcnAzRVVMTXkvOFpWClZidkhlR1Z6eG1BK3o5UGwxOWpySTZVQ2dZRUExWHc2cUdDS29ZRlk2NUtNY3dnVGdCaUpGaXA4WlBBK1ZnWmYKeGUyWGFCV1l1OG1ONzFvcHV1R0tUYVdwUVNvSTk0OU5lVjFEYWlSc1VCaU1FK3ROYXdIVFA0V2tHbjdFY2g1VwpCZUxDa1dJSFA0T2d1c25kWUNUb0dvb0lVOUp0Nmt5bHdVL0RBY3A5M1ArRlVJNjFGOTgzbGs3TWVEeTFwMm5ECkJQV0c1REVDZ1lBLzFsRkc2bUFNNnNPVWo5ZXl4NThiZFNMVHRkOGRacHJKSTBvL0VlNUNlZGFjcFZsaVZvdlYKM1dXa0VNeWtZM205RytYb09ycGcyZWR5a280YzJaMS9BaHl6R0hjQ2JkeHZuZ0RXQlBVblVNY2ZBZE9UYzdjNApJWjEzbjl2VEtuOWZhcnRMUGMxWEZHQWZSbFRlSW83cWwxNUFKSzJIZ0g3ditkZWxQZ2paeGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
