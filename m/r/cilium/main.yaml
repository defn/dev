apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVmE2ZmJyMXZobjVxV3h4a1liVVFUakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTFPREV4V2hjTk1qWXdOakUyTURJMQpPREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREk1N1VKSzlKRE9Fd1RYd2ZrZnQyTDllek1vVktZTGxlSkd0N3RGT2wzb1BTdnlxcXkKVTI5WkxYMWFUT296K003QXJBMTI0QStIZ0dpdUV6WURka2RRM2J4WkIwcXorelRVbE1MMVB1b3JiNHU0azVHRApCaTRJTE9iZDlKWHV5MEVhNE5wYUxxWm5YaFQwYjJyelhpaWVQNlVLWExSbEFHT1VzZTBzczdIeFdsbGhyTDZUCnRsOVkrRHpOMDVsS1ZSNHNVelZleXUyYkJzK0FQUm1wQW9jWm9VRURMWXppdVdDVEVmMmhGZ0JXNndxM1h4QXoKb2J4UEcreTAvTDVoblQvSlhHa1N2U0JRcGNBV2ptTVc4d1h2WlY0a0s4dklvaTlObWJ2NTFqNnNiQzNMY3VZNgpCYnN2a3BFTEJsdGlwK1U5WktzRmdjSXFNOWIzSFRCcmJKb3pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxSWE1R25LdXJ5dTROWWhzaC96L1J4UERFMjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJWnBMcmttQktMY0F5ZFVqK2xTMUFHTEJUOGg1eGl1aUtHdzhjakZFbnB3dHNQZCtDWmRmZk45CnQyNzh6QmVuMGxmY3BCK1lQZ0FPc1duekd2SXNoN1JCOUJJUFZaNVZ0MVFCb3YyMUFXTXUwL2RINGxEUHhzUEIKYWVuY1VhOHhObHloem10dEpMQW5CelhTSmZ3Qkd3QlhQMk9nWTJJSXprblFlMDB5K3BSNXRqMFpzSW5PQkcrZwprSUZwalJqRktheCtxVUt5WEpYRXgxaVJ2OCtrS2QvQzlCVjZtRTB1ekIwZFdOL3QyaHBPdXJGRXIyM29ERUxFCkdIWko0ME13ajZhaDJ0aVo2MVdSNVZsdWdYMkFnK0lwcGNqaGovWmJMY1djTHc2Vjg1MW5jMisveDJrcG1TdmEKbHIxQ3FCVjVjbTJjaloyN3ZOVGhPTXVqVERrUlZEVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeU9lMUNTdlNRemhNRTE4SDVIN2RpL1hzektGU21DNVhpUnJlN1JUcGQ2RDByOHFxCnNsTnZXUzE5V2t6cU0vak93S3dOZHVBUGg0Qm9yaE0yQTNaSFVOMjhXUWRLcy9zMDFKVEM5VDdxSzIrTHVKT1IKZ3dZdUNDem0zZlNWN3N0Qkd1RGFXaTZtWjE0VTlHOXE4MTRvbmorbENseTBaUUJqbExIdExMT3g4VnBaWWF5KwprN1pmV1BnOHpkT1pTbFVlTEZNMVhzcnRtd2JQZ0QwWnFRS0hHYUZCQXkyTTRybGdreEg5b1JZQVZ1c0t0MThRCk02RzhUeHZzdFB5K1laMC95VnhwRXIwZ1VLWEFGbzVqRnZNRjcyVmVKQ3ZMeUtJdlRabTcrZFkrckd3dHkzTG0KT2dXN0w1S1JDd1piWXFmbFBXU3JCWUhDS2pQVzl4MHdhMnlhTXdJREFRQUJBb0lCQUc5aXY2VlJEV2RGWERCVgpQTHY3ZG50MW9vOGxWZlNYcE9LWDZrYkpsRk5HQXNNLyt2bVpkcCticitjVHc3bUMxYVpPL2J3TnA2NTVqQkFQCkNLQk13R2RlT0dHbndFd2ZGNEJRNWZJd3FvWGdkemVqWVVhaWMzMEc0QXpvNFFPZTN2NjI4WGlVYXAvZXNvRi8KRUczVG8zTnhWK0J4MjNZd0RBWFJ5K3cveUlWRmxRbndHQi92a0IxaTlmSFRvNndkSGxRSUhId0g5bzJrVDRtbApmdE1BV3FxTVpEaDJULzFoenZkVXcyZjQxcllMM0pMeXl2Snk5ckovMVd1SkxXSm80MktaWEJMc0N3TnloV1NtCmVGV0UxV3JpektCazM3aUwxNDNsS0RBTkh2ZDBRbDd0MGNrUmc4ek8yUFBhZDNZQlhMcTBBUHlHaUVqKzIxdEoKY0k5Sm9SRUNnWUVBMFhKUWNpQmU1Nk04MmdUUzVFVVJhZWxqRmV6VmZSL3k5ZnlyWVRTRWlneHBvdGg0cS9xVQpzektJalo4Vm56eVpzdFZ5alQxeEtvQU4yWWo3cVhBaFM0dm1weUVZNVhHYm82STFhNy9SVEUvVFFYSjRLcEdFCkppKzM2OUt1KzhoUWRRMTBZeVIrOTBkSnBRSWl5RVhhQmJTQWpYc1AyNW9TcUVkOVlhek54Q3NDZ1lFQTlZOWcKeXhLc0FiMVZaalFwVkFhM29ySWtUam9CdzlVWHFQaHRMQVVKa0NuU1gvdmRMdFV0bG1FalBKV1B6UHdzUUV1YwpqelpScGJyNHIyZUJ1RkdCakxkbUt3aUlISlE0RTlLTjlMTEhiOVNKbzhVaE9QSDlUdTdUcjZvWmlWUVJTQWgvCjRKdUVQS0ZzVjNla1hCckd2T2ZJUzNJa0krZWwvdHBRamFWS1Zoa0NnWUJEcU0wS0FTRUhiVGswS01qRHl2Z1UKSWJ2TGttVm85VkEwWExvMFBaWHZUcEUxZFA2T2QvVmZhaHlvdTFKdHpWTE5iWnlDdWUxNzBFQXBITkpIYXh5bQpYZnhWMHlCS3hvZUR0ZHZTQWZZbjA4V241OFdmNHNBdzRjdGxWL3NGQlRIUWpsY2h5K0ZrR2xoVkFMcWh2Y2J2CmZ0N2tWWFBLK2h1NjF0VlBIMWFkWHdLQmdFcFVzbG9HTnViMzV1ZmZGanVISlFNc3BXekFobFEvSnNCUklzclcKWTRTdUJDNWwwUmdpRTRDWHV0RFYvUWR4dGZ0b1orVzU3WkViUGJmcXZ3dUtNSXJsNFJsWnBjbncyK0MwTmFCQwpsYmcyUDh2QkdrTmdqT3JkeEZwQ1JTU2F1L2h3Q2pWMUhkdzBpTlVaTkRsbEtZOTVJZG9rbk9mNWNQZnFJY1FlCnFwZlJBb0dBT2lXWVhXZllFY2FidnUxejZSOGpvZGhMaVhHckhGWTgzOHFlYXE3eUJ3bW14MXVQd3pUOENFNS8KOFE5aDJsMFRiakx2UEdHRDYrY05KVTBsMVRHQ0NqZHVTZlRjOHFFc3ZwYUxlWitraVZzeWcrVmpNVHM2bFk5TgowVE9vYmk0akUrQ3VQSFlsdWFJWG9tRHdQbDI2aVo1N09hNjJFTDYvbktjcVhHSGx0MzQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVmE2ZmJyMXZobjVxV3h4a1liVVFUakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTFPREV4V2hjTk1qWXdOakUyTURJMQpPREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREk1N1VKSzlKRE9Fd1RYd2ZrZnQyTDllek1vVktZTGxlSkd0N3RGT2wzb1BTdnlxcXkKVTI5WkxYMWFUT296K003QXJBMTI0QStIZ0dpdUV6WURka2RRM2J4WkIwcXorelRVbE1MMVB1b3JiNHU0azVHRApCaTRJTE9iZDlKWHV5MEVhNE5wYUxxWm5YaFQwYjJyelhpaWVQNlVLWExSbEFHT1VzZTBzczdIeFdsbGhyTDZUCnRsOVkrRHpOMDVsS1ZSNHNVelZleXUyYkJzK0FQUm1wQW9jWm9VRURMWXppdVdDVEVmMmhGZ0JXNndxM1h4QXoKb2J4UEcreTAvTDVoblQvSlhHa1N2U0JRcGNBV2ptTVc4d1h2WlY0a0s4dklvaTlObWJ2NTFqNnNiQzNMY3VZNgpCYnN2a3BFTEJsdGlwK1U5WktzRmdjSXFNOWIzSFRCcmJKb3pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxSWE1R25LdXJ5dTROWWhzaC96L1J4UERFMjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJWnBMcmttQktMY0F5ZFVqK2xTMUFHTEJUOGg1eGl1aUtHdzhjakZFbnB3dHNQZCtDWmRmZk45CnQyNzh6QmVuMGxmY3BCK1lQZ0FPc1duekd2SXNoN1JCOUJJUFZaNVZ0MVFCb3YyMUFXTXUwL2RINGxEUHhzUEIKYWVuY1VhOHhObHloem10dEpMQW5CelhTSmZ3Qkd3QlhQMk9nWTJJSXprblFlMDB5K3BSNXRqMFpzSW5PQkcrZwprSUZwalJqRktheCtxVUt5WEpYRXgxaVJ2OCtrS2QvQzlCVjZtRTB1ekIwZFdOL3QyaHBPdXJGRXIyM29ERUxFCkdIWko0ME13ajZhaDJ0aVo2MVdSNVZsdWdYMkFnK0lwcGNqaGovWmJMY1djTHc2Vjg1MW5jMisveDJrcG1TdmEKbHIxQ3FCVjVjbTJjaloyN3ZOVGhPTXVqVERrUlZEVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeU9lMUNTdlNRemhNRTE4SDVIN2RpL1hzektGU21DNVhpUnJlN1JUcGQ2RDByOHFxCnNsTnZXUzE5V2t6cU0vak93S3dOZHVBUGg0Qm9yaE0yQTNaSFVOMjhXUWRLcy9zMDFKVEM5VDdxSzIrTHVKT1IKZ3dZdUNDem0zZlNWN3N0Qkd1RGFXaTZtWjE0VTlHOXE4MTRvbmorbENseTBaUUJqbExIdExMT3g4VnBaWWF5KwprN1pmV1BnOHpkT1pTbFVlTEZNMVhzcnRtd2JQZ0QwWnFRS0hHYUZCQXkyTTRybGdreEg5b1JZQVZ1c0t0MThRCk02RzhUeHZzdFB5K1laMC95VnhwRXIwZ1VLWEFGbzVqRnZNRjcyVmVKQ3ZMeUtJdlRabTcrZFkrckd3dHkzTG0KT2dXN0w1S1JDd1piWXFmbFBXU3JCWUhDS2pQVzl4MHdhMnlhTXdJREFRQUJBb0lCQUc5aXY2VlJEV2RGWERCVgpQTHY3ZG50MW9vOGxWZlNYcE9LWDZrYkpsRk5HQXNNLyt2bVpkcCticitjVHc3bUMxYVpPL2J3TnA2NTVqQkFQCkNLQk13R2RlT0dHbndFd2ZGNEJRNWZJd3FvWGdkemVqWVVhaWMzMEc0QXpvNFFPZTN2NjI4WGlVYXAvZXNvRi8KRUczVG8zTnhWK0J4MjNZd0RBWFJ5K3cveUlWRmxRbndHQi92a0IxaTlmSFRvNndkSGxRSUhId0g5bzJrVDRtbApmdE1BV3FxTVpEaDJULzFoenZkVXcyZjQxcllMM0pMeXl2Snk5ckovMVd1SkxXSm80MktaWEJMc0N3TnloV1NtCmVGV0UxV3JpektCazM3aUwxNDNsS0RBTkh2ZDBRbDd0MGNrUmc4ek8yUFBhZDNZQlhMcTBBUHlHaUVqKzIxdEoKY0k5Sm9SRUNnWUVBMFhKUWNpQmU1Nk04MmdUUzVFVVJhZWxqRmV6VmZSL3k5ZnlyWVRTRWlneHBvdGg0cS9xVQpzektJalo4Vm56eVpzdFZ5alQxeEtvQU4yWWo3cVhBaFM0dm1weUVZNVhHYm82STFhNy9SVEUvVFFYSjRLcEdFCkppKzM2OUt1KzhoUWRRMTBZeVIrOTBkSnBRSWl5RVhhQmJTQWpYc1AyNW9TcUVkOVlhek54Q3NDZ1lFQTlZOWcKeXhLc0FiMVZaalFwVkFhM29ySWtUam9CdzlVWHFQaHRMQVVKa0NuU1gvdmRMdFV0bG1FalBKV1B6UHdzUUV1YwpqelpScGJyNHIyZUJ1RkdCakxkbUt3aUlISlE0RTlLTjlMTEhiOVNKbzhVaE9QSDlUdTdUcjZvWmlWUVJTQWgvCjRKdUVQS0ZzVjNla1hCckd2T2ZJUzNJa0krZWwvdHBRamFWS1Zoa0NnWUJEcU0wS0FTRUhiVGswS01qRHl2Z1UKSWJ2TGttVm85VkEwWExvMFBaWHZUcEUxZFA2T2QvVmZhaHlvdTFKdHpWTE5iWnlDdWUxNzBFQXBITkpIYXh5bQpYZnhWMHlCS3hvZUR0ZHZTQWZZbjA4V241OFdmNHNBdzRjdGxWL3NGQlRIUWpsY2h5K0ZrR2xoVkFMcWh2Y2J2CmZ0N2tWWFBLK2h1NjF0VlBIMWFkWHdLQmdFcFVzbG9HTnViMzV1ZmZGanVISlFNc3BXekFobFEvSnNCUklzclcKWTRTdUJDNWwwUmdpRTRDWHV0RFYvUWR4dGZ0b1orVzU3WkViUGJmcXZ3dUtNSXJsNFJsWnBjbncyK0MwTmFCQwpsYmcyUDh2QkdrTmdqT3JkeEZwQ1JTU2F1L2h3Q2pWMUhkdzBpTlVaTkRsbEtZOTVJZG9rbk9mNWNQZnFJY1FlCnFwZlJBb0dBT2lXWVhXZllFY2FidnUxejZSOGpvZGhMaVhHckhGWTgzOHFlYXE3eUJ3bW14MXVQd3pUOENFNS8KOFE5aDJsMFRiakx2UEdHRDYrY05KVTBsMVRHQ0NqZHVTZlRjOHFFc3ZwYUxlWitraVZzeWcrVmpNVHM2bFk5TgowVE9vYmk0akUrQ3VQSFlsdWFJWG9tRHdQbDI2aVo1N09hNjJFTDYvbktjcVhHSGx0MzQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVmE2ZmJyMXZobjVxV3h4a1liVVFUakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTFPREV4V2hjTk1qWXdOakUyTURJMQpPREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREk1N1VKSzlKRE9Fd1RYd2ZrZnQyTDllek1vVktZTGxlSkd0N3RGT2wzb1BTdnlxcXkKVTI5WkxYMWFUT296K003QXJBMTI0QStIZ0dpdUV6WURka2RRM2J4WkIwcXorelRVbE1MMVB1b3JiNHU0azVHRApCaTRJTE9iZDlKWHV5MEVhNE5wYUxxWm5YaFQwYjJyelhpaWVQNlVLWExSbEFHT1VzZTBzczdIeFdsbGhyTDZUCnRsOVkrRHpOMDVsS1ZSNHNVelZleXUyYkJzK0FQUm1wQW9jWm9VRURMWXppdVdDVEVmMmhGZ0JXNndxM1h4QXoKb2J4UEcreTAvTDVoblQvSlhHa1N2U0JRcGNBV2ptTVc4d1h2WlY0a0s4dklvaTlObWJ2NTFqNnNiQzNMY3VZNgpCYnN2a3BFTEJsdGlwK1U5WktzRmdjSXFNOWIzSFRCcmJKb3pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxSWE1R25LdXJ5dTROWWhzaC96L1J4UERFMjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJWnBMcmttQktMY0F5ZFVqK2xTMUFHTEJUOGg1eGl1aUtHdzhjakZFbnB3dHNQZCtDWmRmZk45CnQyNzh6QmVuMGxmY3BCK1lQZ0FPc1duekd2SXNoN1JCOUJJUFZaNVZ0MVFCb3YyMUFXTXUwL2RINGxEUHhzUEIKYWVuY1VhOHhObHloem10dEpMQW5CelhTSmZ3Qkd3QlhQMk9nWTJJSXprblFlMDB5K3BSNXRqMFpzSW5PQkcrZwprSUZwalJqRktheCtxVUt5WEpYRXgxaVJ2OCtrS2QvQzlCVjZtRTB1ekIwZFdOL3QyaHBPdXJGRXIyM29ERUxFCkdIWko0ME13ajZhaDJ0aVo2MVdSNVZsdWdYMkFnK0lwcGNqaGovWmJMY1djTHc2Vjg1MW5jMisveDJrcG1TdmEKbHIxQ3FCVjVjbTJjaloyN3ZOVGhPTXVqVERrUlZEVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRWmVHQXp6elRTTmRmK2xoT2VycWdrekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTFPREV4V2hjTk1qWXdOakUyTURJMQpPREV4V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDeWJITjZvTTFhUy9QOUZUZHh6ZXM4a1RGZGpvV1IKYW90cEsxdkhNeDcrNUFzeUE2bS8wdXdJM3lLOHRhOFl1dVgrMzRhMGx4RStoRGdGaFpZSjlIMkxRWjdKVG1FSQpOaVFNaDloZFNEcnl3SnN5MGhWQXBEQm5UTncxam5SaTVDVjk1bmhOYi9ubjVEeEs5L21ocU9kbnUzbFV1RXhWClBtbXdDTXZVaGNTcEY5VkVmQW5CS2J0bll6dVpZaXJBUjhQMFVyaVh5QStJVWhyT3ltbUN0VVdteFlRRy9CT0EKQzhVM1RIUlllNlhSSmViTk8xTnZnM2pwQTU1L3Z2UUMvUWJ0TVNLZlh5dVdXUnAralhYbEdQTkZUTSsvbDVYeApyc2VzMzFYZnl2ZHVHQnVoMURVMkx6QW9tVUVPVW51MCtnZGdFeEtrV2NETXBWNFgzVWxWTWZoZEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZLaUd1UnB5cnE4cnVEV0liSWY4LzBjVAp3eE51TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFNTHlzSTdyZFNBZkxOb2kvQjR2c3F5Z09uemZFVG0vZGlzV2RySmtseXJ3K2R3MXcKOUtLQXVhanVoWU5aMUU3VmFkQjhtN2hVbnZkVkdITE5hNnB6QWNmakhSaWRBSTdqeHY4cmZsNlJTOFhXWFFBWQpmS0gvdklOc0RobFMyZDAyRmlMT0REZUtzVFpWTVhRbWplNnlRZlhnWWZjeXBUVjRtNVV4V0hVelNXMWsxRHR3CkZaeEtUZ1N3emlTS3VvWHozWDJjVERnczZsRktpWWRiL2U4ak5wQkRkWlM4bHpqWEdxZXJibC9lYzFVUHhHUlcKZkFKdWpXeXFDMTYrb3hwZXdSMVRPb3hpdHgwRU0zWVIzczV5MUt2R1gyV3B2Z29YOFZ0dVNUYjI0a3JKaFdZVgprK201NkFTeENBK3p0RzZBODZYVkd1ZCs1S3hPaVl2WmtCMXNrdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc214emVxRE5Xa3Z6L1JVM2NjM3JQSkV4WFk2RmtXcUxhU3RieHpNZS91UUxNZ09wCnY5THNDTjhpdkxXdkdMcmwvdCtHdEpjUlBvUTRCWVdXQ2ZSOWkwR2V5VTVoQ0RZa0RJZllYVWc2OHNDYk10SVYKUUtRd1owemNOWTUwWXVRbGZlWjRUVy81NStROFN2ZjVvYWpuWjd0NVZMaE1WVDVwc0FqTDFJWEVxUmZWUkh3Sgp3U203WjJNN21XSXF3RWZEOUZLNGw4Z1BpRklhenNwcGdyVkZwc1dFQnZ3VGdBdkZOMHgwV0h1bDBTWG16VHRUCmI0TjQ2UU9lZjc3MEF2MEc3VEVpbjE4cmxsa2FmbzExNVJqelJVelB2NWVWOGE3SHJOOVYzOHIzYmhnYm9kUTEKTmk4d0tKbEJEbEo3dFBvSFlCTVNwRm5BektWZUY5MUpWVEg0WFFJREFRQUJBb0lCQUUxdzd1cFJzdSszT2E0bQpNRXR2NGVNRzdkTTZrZFNjMXVlTnp5YjFsRVZ6ZXp4NUJJdGlvOW54NTJUYXdxWE1NUmxmc1ZyZW1yaDBzTkFNCnZDT1QvNDJhcksyWkhGcHhEVkoyLzd6MUpjakpPbE5qaFovcDQ2eGlXczNRQjhvSVZoR0FIOFVVamZaTlJMSVIKVVVNT1NXbm5uL0Rha1I4S21OcXo1cXhXWnhZd3JMWHluRkhhNkltcWxERXZzY2gxVmFvRndvTlRuM243aGVidApISUJVYld3QTZJOU5nNENNWkNSWEVDRzVpNFY1VnV1L1pNWEQ5NlgxcFFWM2l6bk9uN0trbGVHMy83dUU4SDF6Cmo1VHdVOTB6Wi84ZVJ5eVNCZ2JCUTBVOWpCSkZqRGJHVm83ZGloWUZyckFWN1FaWkVYR1oyV0hGVm9qSDNhQXYKZmxXOExNMENnWUVBdzJab1UvUjhTa1lsMlBjcktnZ29IZjRxZURHUUJaNFlPUzVVMm5SbG5sN0p0NG05M0luLwpBdUUyVHFpU2JGZEpqMkhHUTJrUmx1TmRLOXRVTllndE5Va0czTDVDc1FiQi8xVTk0Um10bWpOMmpKaithYVNwCmd2cnIxUHVraXB6V0lSZjVaK29pbEdzdjZNZ3htU0p4QlU3SHdwOVZCT3hXZytNTEtYWE1CWjhDZ1lFQTZjSTQKT3FINjlEQnBsYTdKNDZPeFpqc0hjVC9qTG1CMDhISUp1bUxXa0NPRnQwMC9EYTJxUzNwZk9MYjE5MDhqeVp2VwpabWR3TkloNlhlb215Z1g2T0xhL1NZNjZXWC80TWpUVzFJM0tFcVo1d3FXRk44Sk45RjFiOXRhZ0FEb25jNm9LCnh1b1RoNWZkeHpVMlZ2SllzdXJGdGRqWFE1ZXRBNDBTYnJ4dDZJTUNnWUVBaWpESnhkNVpiSG54MkdEdHNQczEKekFodDVyVStvd3B0SFR1TUhUZEdpdHVFazM0aHZYQUczdldCMzkxT09Mcit0aDJ6QndldXZlU3NoeERGbkZwagpocFRQK3B2QU5NeVB0TkdIUXNSVFI0UHY2bjFsS0RlZy9wWVE1WDdXbm9WTzF2YktsMWc1L25kVDJiQ0RpMGFWClllaVdWQ2sxQ3BkT2xGV2xGanhOL3djQ2dZQmdWU25XLytucnVBZkxKNzBMa3VvSXQwclo0UG8rb29HT2xYQnMKMzA2TkdCYUM4OUtJVUlsZGtaQ3NUcm9Pc1E2T2h5cFVDVXkwV1lvVUtlclNWcVJIdXdnWnlEZ0RxamtlZDZnUQo4RjNXVWNUYjhscDBJQjhBRlhsUXdDSXY5Y2RNWTBjTnNtbFo5N3Z0M0lBSVZOYzQ1SWVWNlViTkZEUzR3ZXBXCnVGQ1RBUUtCZ1FDZk8zbmtoMUFrTVdTNGJQbDZGL05ZY1BKRlZrYjlqK1FPbndZYVg4TjdldHNtSEZDWWlhbkUKODlEdVRZeU9MbFlMYlI4bm9qdCtqd0tURHNlMk9DcHFjRVlQdlNtS1JyQUozZTZ0NGlrcnJOaU1YU2VWcll5WApmTWNYS29oUnBPbUpPcVp2WW5YVGJOT3lSMUJjREhwTGZLRUh2Z0RVU0xoMW4yc09Zb2xyR3c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVmE2ZmJyMXZobjVxV3h4a1liVVFUakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTFPREV4V2hjTk1qWXdOakUyTURJMQpPREV4V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRREk1N1VKSzlKRE9Fd1RYd2ZrZnQyTDllek1vVktZTGxlSkd0N3RGT2wzb1BTdnlxcXkKVTI5WkxYMWFUT296K003QXJBMTI0QStIZ0dpdUV6WURka2RRM2J4WkIwcXorelRVbE1MMVB1b3JiNHU0azVHRApCaTRJTE9iZDlKWHV5MEVhNE5wYUxxWm5YaFQwYjJyelhpaWVQNlVLWExSbEFHT1VzZTBzczdIeFdsbGhyTDZUCnRsOVkrRHpOMDVsS1ZSNHNVelZleXUyYkJzK0FQUm1wQW9jWm9VRURMWXppdVdDVEVmMmhGZ0JXNndxM1h4QXoKb2J4UEcreTAvTDVoblQvSlhHa1N2U0JRcGNBV2ptTVc4d1h2WlY0a0s4dklvaTlObWJ2NTFqNnNiQzNMY3VZNgpCYnN2a3BFTEJsdGlwK1U5WktzRmdjSXFNOWIzSFRCcmJKb3pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVxSWE1R25LdXJ5dTROWWhzaC96L1J4UERFMjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJWnBMcmttQktMY0F5ZFVqK2xTMUFHTEJUOGg1eGl1aUtHdzhjakZFbnB3dHNQZCtDWmRmZk45CnQyNzh6QmVuMGxmY3BCK1lQZ0FPc1duekd2SXNoN1JCOUJJUFZaNVZ0MVFCb3YyMUFXTXUwL2RINGxEUHhzUEIKYWVuY1VhOHhObHloem10dEpMQW5CelhTSmZ3Qkd3QlhQMk9nWTJJSXprblFlMDB5K3BSNXRqMFpzSW5PQkcrZwprSUZwalJqRktheCtxVUt5WEpYRXgxaVJ2OCtrS2QvQzlCVjZtRTB1ekIwZFdOL3QyaHBPdXJGRXIyM29ERUxFCkdIWko0ME13ajZhaDJ0aVo2MVdSNVZsdWdYMkFnK0lwcGNqaGovWmJMY1djTHc2Vjg1MW5jMisveDJrcG1TdmEKbHIxQ3FCVjVjbTJjaloyN3ZOVGhPTXVqVERrUlZEVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYktQdmxETTJ0NVZoemJLVFFCMGhqakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpFM01ESTFPREV4V2hjTk1qWXdOakUyTURJMQpPREV4V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBelNrQ3pYV1NrQk9pcEpXL2lPT0gKWUNmaDNPNkwxTW52clI2U1ZsQmJXVU5rdEZCbXl5V1JCSDRRdmpCWWFhcTMxcysxUFAyNTRxMFlHTGl0dHlPaQpnOHhFQnNuWEh0RGxLdTBkMTF3c2FZY2kvTlorQ0RzT05ESkxjSHMzZGtZdTIybXFMeXNHT090bFpFbTNhYzdzCnFocnQyaHJHdndNWTl4ZUdXdzZid0F4S0R5S2Q2Q01nNXhqU2RERjcyYlNxM3ZPZnhpbWdpMzVzY3B6WnR6MnUKblRxS21RNWYvZFhKZS9yQmVkcWNTeWc1U0xlWU9hUlZaaUFmczhYSVY5TkQrcXhvYlVON1dXU2FCUk80Y01CKwpGdEtDNjllYnJpNGttaG9qNVFNNmkrZWYra0hSbnN6RG10OVRNd1R2b2gzNUdmRFJwb3kzZ2d2bVBjUWN6Z1dPCkpRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTb2hya2FjcTZ2SzdnMQppR3lIL1A5SEU4TVRiakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCMzlvc1J2TkxPeVM2ZUxoZHF1MEVZNDVsMXpGOGwKMThVYnNYMzBZbmtEL3pHSkJpY2V5YUhPSkRtaHBnUW9DV1FicEhjQmg2QmFjZDdBVVZFeTBoeWdnT2VrYlhrTgovaFJucnRLMmJHMmZnL2dmVEIwc08wZGVyby9DbUFxZ3p3MFJCY2c0NDNldVk5U1o2d09adTdsY3RMUVBJSHhQClpiMzhhYmhtMEcxU2xZZHpKWVVWT3Z5YlNhUWoyRSs2WWloc3puTHhhdnZZckZPUU1CTk1uVDhxVVBPcndJSHoKeSttaS9kZU5mdGpNVVYzdk45eWxHZ1ZHOHYvTk5NNHBEQ2daMWxxWk9CWVByWnpSK01iVjMrZVYyKzFCdWt5SwpmNURHUSt5eTBPYjRJb29UYTR0Tll2TE9KcGlSUU5ndndYVlZxUzRzNC9sZ1d0T1p1NFY0M2dMRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelNrQ3pYV1NrQk9pcEpXL2lPT0hZQ2ZoM082TDFNbnZyUjZTVmxCYldVTmt0RkJtCnl5V1JCSDRRdmpCWWFhcTMxcysxUFAyNTRxMFlHTGl0dHlPaWc4eEVCc25YSHREbEt1MGQxMXdzYVljaS9OWisKQ0RzT05ESkxjSHMzZGtZdTIybXFMeXNHT090bFpFbTNhYzdzcWhydDJockd2d01ZOXhlR1d3NmJ3QXhLRHlLZAo2Q01nNXhqU2RERjcyYlNxM3ZPZnhpbWdpMzVzY3B6WnR6MnVuVHFLbVE1Zi9kWEplL3JCZWRxY1N5ZzVTTGVZCk9hUlZaaUFmczhYSVY5TkQrcXhvYlVON1dXU2FCUk80Y01CK0Z0S0M2OWVicmk0a21ob2o1UU02aStlZitrSFIKbnN6RG10OVRNd1R2b2gzNUdmRFJwb3kzZ2d2bVBjUWN6Z1dPSlFJREFRQUJBb0lCQUEwbERvZnBlNDE5cEpNVgpBU09kS0dSUnlkZms5TkthYVovVzhKdFZKTFV3YXpoZVdtZXpyWG56TmRGcHVaQnpucm5GcnlBTVJhZXZYWGJnCkJrbFFvQzMvblhBdDZIbVIrc3pvU2x3dERLOXFPQ1NvL1lRN2ZHcDl1blduZjJNMWxmVDY3U3QrZnpTUWFIdW4KZVhmdkNSelJBdUpSaXVCY0szSlJjSXRQQVUycG5vZXJqVmtnVWtNUnNtWS9qbmJZcjQyT1gxUXFXRlJyQXArVAo3WmRXb3RnOUhYTEN5cGFibE92WTgxemg3N1JnMWRzL0orc1RHdjczWWdFbnBQaGJkSWhEdVZUeXlUaWwweTVBClFxeGRmK3p6Z0pOTGZEM0Y1WkRKTjQ5YUtHSWlsaTdxbXFZd0VHOUYrTTZQdzJBTkovWXlOblRFcUhvdmNIZDcKaXZqUWFPRUNnWUVBN0Rtbjdpc25PSW0zT3ZWeDZCRUZXd0t0di9US0N1NEdZMVFsa3I2dm5uOFNtcGxXbmlkKwpIR3dPWHZ3NUQwTzFkTjhKUEhZbHJCYmt2MGZpbjBjS3dZUUkwSEU0Y2lNSk5Vb3IxcTdvUjdiNzdTYUc5eXQrClZOVExBSTRub1U3c25UdEtjM2ZYM2JtSUV3aVZ0Q0V1bUJKOUVWQlhlamR0WlJGaWhCbFRLbTBDZ1lFQTNsV2cKYklMbkdDT1dUTEVyc0dudTRFYTV4NFV2UkxuN0RRdkd4SXZsNTdSUjV0eUdlWUdXajhXY3oyTkdiamk4MCtTMgpKdlBIYzVmaG9wbEVvNHhHdDhQOWkySm1PMnd3SGhDWkxaOXkzaUMySGxsV3hJQ2JBRkhaNEtyeXlEblA0MEdoCm5TVEhnQ3E0WGJQQ0Z4NGk1UzhSNjY5MDM3ZUMyTW1kUVdFbUg1a0NnWUF4ci9yenJONEdGV21XSERTR1pMWWsKcTQ2U2R0SGN0SzVoVER6Ty9nOEFucWZ5SHRqS1VYSkVWakk3cG4vMkJ2N3ZBMDcxQ2NEb3pyUDB6QkVPQWFwdwpnKzQ2c2VYMmxBb0d6SUFtR3dvK3MyMlFOMjlpSkNMaGd4VGtIQUtYK25yb282VUlYcWZvT25NMTFiTnZmUjlJCjIzSzFKcG9QMmdMSHBIMTlYYnBSalFLQmdCZ1FJbVc4SVRET29UUzV0Q1hLd1V6S3VzNnFUbnhjdUp3bjJ5Sm8KbGNCbkZyb3F3ZThpcEYzNUlFaWQwUUNhNld6eGd2bGlSd0x1dkQveDRLam14THljM0xNYU9rQlNMRDhFd3Q5YQpNMzl4QU9UMS9Gc1dKREI3cTE0U2dtWkRRNG13RDhMSE9VUlkyMDFnNkMvQ1ZqcUJ4cW5BZXFDLzVzeDV2YWhXCjBGNTVBb0dCQUlrRUwzMU0zVmZlKytveGVrWWxFMXJWbnh4d2NkRlczWUVpQWtzaWdZQk1jeXdrRkdhRHM3alIKdzJweGJLVUxqRFVZb1NDUHYvamJsa2FwN2h5SVZCY0NhWVFyVjlheENyMzZTcE1vR0YzMlJkSmhudGlCbnByQwplMW9wRk1HQ0tMa2Z0WXl2ZklyTmJOTnRkY1JYTXROcWl6S3BLU0VlRDBUMDRTZzJUM1RVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.4@sha256:09ab77d324ef4d31f7d341f97ec5a2a4860910076046d57a2d61494d426c6301
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.4@sha256:bac057a5130cf75adf5bc363292b1f2642c0c460ac9ff018fcae3daf64873871
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.4@sha256:bde8800d61aaad8b8451b10e247ac7bdeb7af187bb698f83d40ad75a38c1ee6b
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: hubble.defn.run
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: hubble-ui
  namespace: kube-system
spec:
  ingressClassName: traefik
  rules:
  - host: hubble.defn.run
    http:
      paths:
      - backend:
          service:
            name: hubble-ui
            port:
              number: 80
        path: /
        pathType: Prefix
