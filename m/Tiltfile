analytics_settings(False)

local_resource("code-server",
        serve_cmd=[ "bash", "-c", """
            cd ~/m
            exec code-server --auth none --port 13337
            """ ]
    )

local_resource("hugo",
        serve_cmd=[ "bash", "-c", """
            cd ~/m/defn/dev/www
            npm install
            exec npm run dev
            """ ]
    )

local_resource("temporal",
        serve_cmd=[ "bash", "-c", """
            cd ~/m
            exec temporal server start-dev
            """ ]
    )

local_resource("nomad",
        serve_cmd=[ "bash", "-c", """
            cd ~/m
            exec nomad agent -dev -bind 0.0.0.0 -network-interface='{{ GetDefaultInterfaces | attr "name" }}'
            """ ]
    )

local_resource("argocd",
        serve_cmd=[ "bash", "-c", """
            set -exfu

            cd ~/m

            this-k3d-create dfd

            kubectl --context k3d-dfd apply -f k/r/argo-cd/main.yaml 
            cp $HOME/.kube/config $HOME/.kube/config.argocd
            export KUBE_CONFIG=$HOME/.kube/config.argocd
            eval "$(kubectl config view -o json  | jq -r --arg cluster k3d-dfd --arg namespace argocd '.contexts[] | select(.name == $cluster).context | "kubectl config set-context \\(.cluster)-argocd --cluster=\\(.cluster) --user=\\(.user) --namespace=\\($namespace)"')"
            kubectl config use-context k3d-dfd-argocd

            sudo apt install -y apache2-utils
            kubectl patch secret -n argocd argocd-secret   -p '{"stringData": { "admin.password": "'$(htpasswd -bnBC 10 "" admin | tr -d ':\\n')'"}}'

            while true; do
                if argocd cluster add k3d-dfd --yes --core --in-cluster; then break; fi
                sleep 5
            done

            kubectl --context k3d-dfd apply -f e/k3d-dfd.yaml

            while true; do
                if ! kubectl port-forward deployment/argocd-server 8080:8080; then
                    sleep 5
                fi
            done
            """ ]
    )

local_resource("hello",
        "nomad job run etc/hello.nomad",
        deps=["./etc/hello.nomad"]
    )
    
local_resource("demo1",
        "nomad job run etc/demo1.nomad",
        deps=["./etc/demo1.nomad"]
    )

local_resource("demo2",
        "nomad job run etc/demo2.nomad",
        deps=["./etc/demo2.nomad"]
    )

local_resource("demo3",
        "nomad job run etc/demo3.nomad",
        deps=["./etc/demo3.nomad"]
    )
