---
apiVersion: k3d.io/v1alpha5
kind: Simple
servers: 1
agents: 0
kubeAPI:
  host: "k3d-dfd-server-0"
network: dfd
image: quay.io/defn/dev:latest-k3d
registries:
  config: |
    mirrors:
      "169.254.32.1:5000":
        endpoint:
          - http://169.254.32.1:5000
      "docker.io":
        endpoint:
          - http://169.254.32.1:5000
      "gcr.io":
        endpoint:
          - http://169.254.32.1:5000
      "ghcr.io":
        endpoint:
          - http://169.254.32.1:5000
      "public.ecr.aws":
        endpoint:
          - http://169.254.32.1:5000
      "quay.io":
        endpoint:
          - http://169.254.32.1:5000
volumes:
  - volume: /var/run/docker.sock:/var/run/docker.sock
    nodeFilters:
      - server:0
  - volume: /nix/k3s:/var/lib/rancher/k3s/storage
    nodeFilters:
      - server:0
  - volume: /nix/k3s-containerd:/var/lib/rancher/k3s/agent/containerd/io.containerd.content.v1.content
    nodeFilters:
      - server:0
  - volume: /nix/k3s-tailscale:/var/lib/tailscale
    nodeFilters:
      - server:0
#  - volume: defn-dev-work:/mnt/work
#    nodeFilters:
#      - server:0
#  - volume: defn-dev-earthly:/mnt/earthly
#    nodeFilters:
#      - server:0
#  - volume: defn-dev-dind:/mnt/dind
#    nodeFilters:
#      - server:0
#  - volume: defn-dev-registry:/mnt/registry
#    nodeFilters:
#      - server:0
#  - volume: defn-dev-cache:/cache
#    nodeFilters:
#      - server:0
#  - volume: defn-dev-containerd:/var/lib/rancher/k3s/agent/containerd/io.containerd.content.v1.content
#    nodeFilters:
#      - server:0
options:
  k3d:
    wait: true
    timeout: 360s
    disableLoadbalancer: false
  k3s:
    extraArgs:
      - arg: --disable-network-policy
        nodeFilters:
          - server:0
      - arg: --disable=traefik
        nodeFilters:
          - server:0
      - arg: --flannel-backend=none
        nodeFilters:
          - server:0
      - arg: --kube-apiserver-arg=--service-account-issuer=https://raw.githubusercontent.com/defn/dev/main/m/c/dfd/openid
        nodeFilters:
          - server:0
      - arg: --kube-apiserver-arg=--api-audiences=https://kubernetes.default.svc.cluster.local,sts.amazonaws.com
        nodeFilters:
          - server:0
  #      - arg: --tls-san=${DEFN_DEV_HOST_NAME}
  #        nodeFilters:
  #          - server:0
  kubeconfig:
    updateDefaultKubeconfig: true
    switchCurrentContext: false
