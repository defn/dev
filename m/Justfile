mod bazel 'common/bazel.Justfile'
mod coder 'common/coder.Justfile'
mod tilt 'common/tilt.Justfile'
mod github 'common/github.Justfile'
mod gpg 'common/gpg.Justfile'
mod aws 'common/aws.Justfile'
mod playbook 'common/playbook.Justfile'
mod lib 'common/lib.Justfile'

# Run a playbook
play pb *lim:
	just playbook::playbook {{pb}} {{lim}}

# Run a command
command pattern *args:
	just playbook::command {{pattern}} {{args}}

# Use this workspace
[no-cd]
use *name:
	just coder::use {{name}}

# Do nothing for Joyride
up:
	@true

base:
	#!/usr/bin/env bash
	case "${BUILDKITE_BRANCH:-}" in
		main)
			case "${BUILDKITE_MESSAGE:-}" in
				"chore(main): release"*)
					# wait for the release tag to be created when a release commit is merged to main branch
					# the wait allows please-release to run in github actions
					# it is not guaranteed that the tag will be created in time
					sleep 30
					;;
			esac
			;;
	esac

	git fetch || true

	GITHUB_TOKEN="$(just github::token)" \
	BUILD_SHA="$(git rev-parse HEAD)" \
	RELEASE="$(git describe --tags --abbrev=0)"

	docker build -t ghcr.io/defn/dev:base-inner \
			--platform linux/amd64 \
			--build-arg RELEASE="$RELEASE" \
			--build-arg GITHUB_TOKEN="$GITHUB_TOKEN" \
			--build-arg NIX_CONFIG="access-tokens = github.com=$GITHUB_TOKEN" \
			.

	docker build --no-cache -t ghcr.io/defn/dev:base -f Dockerfile.latest \
			--platform linux/amd64 \
			--build-arg RELEASE="$RELEASE" \
			--build-arg GITHUB_TOKEN="$GITHUB_TOKEN" \
			--build-arg NIX_CONFIG="access-tokens = github.com=$GITHUB_TOKEN" \
			.

	docker tag ghcr.io/defn/dev:base-inner ghcr.io/defn/dev:${RELEASE}
	docker push ghcr.io/defn/dev:${RELEASE}
	docker push ghcr.io/defn/dev:base

