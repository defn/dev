syntax = "proto3";

// $schema: defn.dev.demo.v1.Pet
// $title: Cool pet
// $description: So many cool pets
// $location: https://defn.dev/demo/pet/v1

// Description of package
package defn.dev.demo.v1;

option go_package="github.com/defn/dev/m/defn/dev/demo/v1";

// <!-- crd generation tags
// +cue-gen:Pet:groupName:demo.defn.dev
// +cue-gen:Pet:version:v1
// +cue-gen:Pet:storageVersion
// +cue-gen:Pet:subresource:status
// +cue-gen:Pet:scope:Namespaced
// +cue-gen:Pet:preserveUnknownFields:pluginConfig
// -->
//
// <!-- go code generation tags
// +kubetype-gen
// +kubetype-gen:groupVersion=demo.defn.dev/v1
// +genclient
// +k8s:deepcopy-gen=true
// -->
// Description of Pet Message
message Pet {
  PetType pet_type = 1;
  string pet_id = 2;
  string name = 3;
  string created_at = 4;
}

// Description of GetPetRequest Message
message GetPetRequest {
  string pet_id = 1;
}

message GetPetResponse {
  Pet pet = 1;
}

message PutPetRequest {
  PetType pet_type = 1;
  string name = 2;
}

message PutPetResponse {
  Pet pet = 1;
}

message DeletePetRequest {
  string pet_id = 1;
}

message DeletePetResponse {}

// Description of PetType
enum PetType {
  PET_TYPE_UNSPECIFIED = 0;
  PET_TYPE_CAT = 1;
  PET_TYPE_DOG = 2;
  PET_TYPE_SNAKE = 3;
  PET_TYPE_HAMSTER = 4;
}

service PetStoreService {
  rpc GetPet(GetPetRequest) returns (GetPetResponse) {}
  rpc PutPet(PutPetRequest) returns (PutPetResponse) {}
  rpc DeletePet(DeletePetRequest) returns (DeletePetResponse) {}
}
