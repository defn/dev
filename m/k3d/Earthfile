VERSION --use-registry-for-with-docker --ci-arg 0.7

build:
    ARG K3S
    ARG image
    BUILD +build-k3d --image=${image} --K3S=${K3S}

build-k3d:
    ARG K3S
    ARG image
    BUILD --platform=linux/amd64 +image-k3d --image=${image} --K3S=${K3S}
    BUILD --platform=linux/arm64 +image-k3d --image=${image} --K3S=${K3S}

image-k3d:
    ARG K3S
    ARG image

    FROM +k3d --K3S=${K3S}
    SAVE IMAGE --push ${image}

k3d:
    ARG K3S

    FROM rancher/k3s:v${K3S}

    RUN echo root:x:0: >> /etc/group \
        && echo ubuntu:x:1000: >> /etc/group \
        && echo root:x:0:0:root:/root:/bin/sh >> /etc/passwd \
        && echo ubuntu:x:1000:1000:root:/home/ubuntu:/bin/sh >> /etc/passwd \
        && install -d -m 0700 -o root -g root /root \
        && mkdir -p /home && install -d -m 0700 -o ubuntu -g ubuntu /home/ubuntu

    RUN mv /bin/k3s /bin/k3s-real

    RUN for a in /bin/kubectl /bin/k3s-server /bin/k3s-secrets-encrypt /bin/k3s-etcd-snapshot /bin/k3s-completion /bin/k3s-certificate /bin/k3s-agent /bin/crictl /bin/ctr; do ln -nfs k3s-real $a; done

    RUN mkdir -p /var/lib/rancher/k3s/agent/etc/containerd
    COPY k3d-config.toml var/lib/rancher/k3s/agent/etc/containerd/config.toml

    COPY k3s-wrapper.sh /bin/k3s

    USER ubuntu
    WORKDIR /home/ubuntu

    COPY --dir --chown=ubuntu:ubuntu +nix/nix /nix
    COPY --dir --chown=ubuntu:ubuntu +nix/ubuntu /home/

    RUN (echo export USER=ubuntu; echo export HOME=/home/ubuntu; echo export PATH="/bin:/usr/bin"; echo . /home/ubuntu/.nix-profile/etc/profile.d/nix.sh) > .profile

    RUN . ./.profile && for a in bashInteractive; do nix profile install nixpkgs#$a; done
    RUN . ./.profile && for a in openssh; do nix profile install nixpkgs#$a; done
    RUN . ./.profile && for a in findutils; do nix profile install nixpkgs#$a; done
    RUN . ./.profile && for a in git; do nix profile install nixpkgs#$a; done
    RUN . ./.profile && for a in gnumake; do nix profile install nixpkgs#$a; done
    RUN . ./.profile && for a in nixpkgs-fmt; do nix profile install nixpkgs#$a; done

    RUN . ./.profile && nix profile install github:defn/m/pkg-tailscale-1.38.4-3?dir=pkg/tailscale

    RUN . ./.profile && ssh -o StrictHostKeyChecking=no git@github.com || true

    RUN --no-cache . ./.profile \
        && git clone https://github.com/defn/dev dev \
        && mv dev/.git . \
        && rm -rf dev \
        && git reset --hard

    USER root
    WORKDIR /
    RUN install -d -m 0700 -o ubuntu -g ubuntu /cache \
        && cp -a /home/ubuntu/.nix-profile/bin/bash /bin/bash \
        && ln -nfs /bin/env /usr/bin/env \
        && sed 's#/bin/sh#/bin/bash#' -i /etc/passwd

nix:
    FROM quay.io/defn/dev:latest-nix-installed
    SAVE ARTIFACT /nix nix
    SAVE ARTIFACT /home/ubuntu ubuntu
