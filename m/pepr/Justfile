up *args:
    npm run k3d-setup
    just test
    for a in crd.*.yaml; do kubectl apply -f $a; done
    kubectl create ns defn
    tilt up {{ args }}

down: 
    k3d cluster delete pepr-dev

pepr:
    #!/usr/bin/env bash
    while ! kubectl get nodes; do date; sleep 5; done
    npx pepr dev --confirm | egrep --line-buffered '^[^ ]'

test:
    #!/usr/bin/env bash
    set -efu

    read_file() {
        f="$1"; shift
        k="$1"; shift
        while IFS= read -r line; do
            if [[ "$line" == *"openAPIV3Schema"* ]]; then
                echo "        openAPIV3Schema:"
                echo "          type: object"
                echo "          properties:"
                echo "            spec:"
                echo "              type: object"
                echo "              required:"
                cat "$f" | yq -y ".components.schemas.${k}.required" | sed 's#^#                 #'
                echo "              properties:"
                cat "$f" | yq -y ".components.schemas.${k}.properties" | sed 's#^#                 #'
            else
                echo "$line"
            fi
        done
    }

    for a in Script Unicorn; do 
        cue def api.$a.cue --force -o api.$a.yaml --out openapi+yaml
        cue vet api.$a.yaml $a.yaml -d "#$a"
        npx openapi-typescript api.$a.yaml -o $a.d.ts
        cue export --out yaml -e crd.$a | read_file api.$a.yaml $a > crd.$a.yaml 
    done

    trunk fmt

demo:
    -k delete -n defn script demo
    cue eval -e ex.demo.res --out yaml | k apply -f -
    sleep 1
    k get -n defn cm demo -o json | jq -r .data.result
