// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: rock/v1/rock.proto

package rockv1

import (
	_type "github.com/defn/dev/m/a/google/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// RockType represents the different types of rocks in the rock store.
type RockType int32

const (
	RockType_ROCK_TYPE_UNSPECIFIED RockType = 0
	RockType_ROCK_TYPE_CAT         RockType = 1
	RockType_ROCK_TYPE_DOG         RockType = 2
	RockType_ROCK_TYPE_SNAKE       RockType = 3
	RockType_ROCK_TYPE_HAMSTER     RockType = 4
)

// Enum value maps for RockType.
var (
	RockType_name = map[int32]string{
		0: "ROCK_TYPE_UNSPECIFIED",
		1: "ROCK_TYPE_CAT",
		2: "ROCK_TYPE_DOG",
		3: "ROCK_TYPE_SNAKE",
		4: "ROCK_TYPE_HAMSTER",
	}
	RockType_value = map[string]int32{
		"ROCK_TYPE_UNSPECIFIED": 0,
		"ROCK_TYPE_CAT":         1,
		"ROCK_TYPE_DOG":         2,
		"ROCK_TYPE_SNAKE":       3,
		"ROCK_TYPE_HAMSTER":     4,
	}
)

func (x RockType) Enum() *RockType {
	p := new(RockType)
	*p = x
	return p
}

func (x RockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RockType) Descriptor() protoreflect.EnumDescriptor {
	return file_rock_v1_rock_proto_enumTypes[0].Descriptor()
}

func (RockType) Type() protoreflect.EnumType {
	return &file_rock_v1_rock_proto_enumTypes[0]
}

func (x RockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RockType.Descriptor instead.
func (RockType) EnumDescriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{0}
}

// Rock represents a rock in the rock store.
type Rock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RockType  RockType        `protobuf:"varint,1,opt,name=rock_type,json=rockType,proto3,enum=rock.v1.RockType" json:"rock_type,omitempty"`
	RockId    string          `protobuf:"bytes,2,opt,name=rock_id,json=rockId,proto3" json:"rock_id,omitempty"`
	Name      string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	CreatedAt *_type.DateTime `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Rock) Reset() {
	*x = Rock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rock) ProtoMessage() {}

func (x *Rock) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rock.ProtoReflect.Descriptor instead.
func (*Rock) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{0}
}

func (x *Rock) GetRockType() RockType {
	if x != nil {
		return x.RockType
	}
	return RockType_ROCK_TYPE_UNSPECIFIED
}

func (x *Rock) GetRockId() string {
	if x != nil {
		return x.RockId
	}
	return ""
}

func (x *Rock) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rock) GetCreatedAt() *_type.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetRockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RockId string `protobuf:"bytes,1,opt,name=rock_id,json=rockId,proto3" json:"rock_id,omitempty"`
}

func (x *GetRockRequest) Reset() {
	*x = GetRockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRockRequest) ProtoMessage() {}

func (x *GetRockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRockRequest.ProtoReflect.Descriptor instead.
func (*GetRockRequest) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{1}
}

func (x *GetRockRequest) GetRockId() string {
	if x != nil {
		return x.RockId
	}
	return ""
}

type GetRockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rock *Rock `protobuf:"bytes,1,opt,name=rock,proto3" json:"rock,omitempty"`
}

func (x *GetRockResponse) Reset() {
	*x = GetRockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRockResponse) ProtoMessage() {}

func (x *GetRockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRockResponse.ProtoReflect.Descriptor instead.
func (*GetRockResponse) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{2}
}

func (x *GetRockResponse) GetRock() *Rock {
	if x != nil {
		return x.Rock
	}
	return nil
}

type PutRockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RockType RockType `protobuf:"varint,1,opt,name=rock_type,json=rockType,proto3,enum=rock.v1.RockType" json:"rock_type,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PutRockRequest) Reset() {
	*x = PutRockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRockRequest) ProtoMessage() {}

func (x *PutRockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRockRequest.ProtoReflect.Descriptor instead.
func (*PutRockRequest) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{3}
}

func (x *PutRockRequest) GetRockType() RockType {
	if x != nil {
		return x.RockType
	}
	return RockType_ROCK_TYPE_UNSPECIFIED
}

func (x *PutRockRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PutRockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rock *Rock `protobuf:"bytes,1,opt,name=rock,proto3" json:"rock,omitempty"`
}

func (x *PutRockResponse) Reset() {
	*x = PutRockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutRockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRockResponse) ProtoMessage() {}

func (x *PutRockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRockResponse.ProtoReflect.Descriptor instead.
func (*PutRockResponse) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{4}
}

func (x *PutRockResponse) GetRock() *Rock {
	if x != nil {
		return x.Rock
	}
	return nil
}

type DeleteRockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RockId string `protobuf:"bytes,1,opt,name=rock_id,json=rockId,proto3" json:"rock_id,omitempty"`
}

func (x *DeleteRockRequest) Reset() {
	*x = DeleteRockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRockRequest) ProtoMessage() {}

func (x *DeleteRockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRockRequest.ProtoReflect.Descriptor instead.
func (*DeleteRockRequest) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteRockRequest) GetRockId() string {
	if x != nil {
		return x.RockId
	}
	return ""
}

type DeleteRockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRockResponse) Reset() {
	*x = DeleteRockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rock_v1_rock_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRockResponse) ProtoMessage() {}

func (x *DeleteRockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rock_v1_rock_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRockResponse.ProtoReflect.Descriptor instead.
func (*DeleteRockResponse) Descriptor() ([]byte, []int) {
	return file_rock_v1_rock_proto_rawDescGZIP(), []int{6}
}

var File_rock_v1_rock_proto protoreflect.FileDescriptor

var file_rock_v1_rock_proto_rawDesc = []byte{
	0x0a, 0x12, 0x72, 0x6f, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1a, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x99, 0x01, 0x0a, 0x04, 0x52, 0x6f,
	0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x63, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x22, 0x34, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x72, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x63, 0x6b,
	0x52, 0x04, 0x72, 0x6f, 0x63, 0x6b, 0x22, 0x54, 0x0a, 0x0e, 0x50, 0x75, 0x74, 0x52, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x72, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x72, 0x6f,
	0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08,
	0x72, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x0f,
	0x50, 0x75, 0x74, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x72, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x72, 0x6f,
	0x63, 0x6b, 0x22, 0x2c, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x63, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x77, 0x0a, 0x08, 0x52, 0x6f, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a,
	0x0d, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x10, 0x01,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x4f,
	0x47, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x53, 0x4e, 0x41, 0x4b, 0x45, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x4f, 0x43, 0x4b,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x41, 0x4d, 0x53, 0x54, 0x45, 0x52, 0x10, 0x04, 0x32,
	0xdb, 0x01, 0x0a, 0x10, 0x52, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x63, 0x6b, 0x12,
	0x17, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x50, 0x75, 0x74, 0x52, 0x6f, 0x63, 0x6b, 0x12,
	0x17, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f,
	0x63, 0x6b, 0x12, 0x1a, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x7d, 0x0a,
	0x0b, 0x63, 0x6f, 0x6d, 0x2e, 0x72, 0x6f, 0x63, 0x6b, 0x2e, 0x76, 0x31, 0x42, 0x09, 0x52, 0x6f,
	0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x65, 0x66, 0x6e, 0x2f, 0x64, 0x65, 0x76, 0x2f, 0x6d,
	0x2f, 0x61, 0x2f, 0x72, 0x6f, 0x63, 0x6b, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x6f, 0x63, 0x6b, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x52, 0x58, 0x58, 0xaa, 0x02, 0x07, 0x52, 0x6f, 0x63, 0x6b, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x07, 0x52, 0x6f, 0x63, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x13, 0x52, 0x6f,
	0x63, 0x6b, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x08, 0x52, 0x6f, 0x63, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rock_v1_rock_proto_rawDescOnce sync.Once
	file_rock_v1_rock_proto_rawDescData = file_rock_v1_rock_proto_rawDesc
)

func file_rock_v1_rock_proto_rawDescGZIP() []byte {
	file_rock_v1_rock_proto_rawDescOnce.Do(func() {
		file_rock_v1_rock_proto_rawDescData = protoimpl.X.CompressGZIP(file_rock_v1_rock_proto_rawDescData)
	})
	return file_rock_v1_rock_proto_rawDescData
}

var file_rock_v1_rock_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_rock_v1_rock_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_rock_v1_rock_proto_goTypes = []interface{}{
	(RockType)(0),              // 0: rock.v1.RockType
	(*Rock)(nil),               // 1: rock.v1.Rock
	(*GetRockRequest)(nil),     // 2: rock.v1.GetRockRequest
	(*GetRockResponse)(nil),    // 3: rock.v1.GetRockResponse
	(*PutRockRequest)(nil),     // 4: rock.v1.PutRockRequest
	(*PutRockResponse)(nil),    // 5: rock.v1.PutRockResponse
	(*DeleteRockRequest)(nil),  // 6: rock.v1.DeleteRockRequest
	(*DeleteRockResponse)(nil), // 7: rock.v1.DeleteRockResponse
	(*_type.DateTime)(nil),     // 8: google.type.DateTime
}
var file_rock_v1_rock_proto_depIdxs = []int32{
	0, // 0: rock.v1.Rock.rock_type:type_name -> rock.v1.RockType
	8, // 1: rock.v1.Rock.created_at:type_name -> google.type.DateTime
	1, // 2: rock.v1.GetRockResponse.rock:type_name -> rock.v1.Rock
	0, // 3: rock.v1.PutRockRequest.rock_type:type_name -> rock.v1.RockType
	1, // 4: rock.v1.PutRockResponse.rock:type_name -> rock.v1.Rock
	2, // 5: rock.v1.RockStoreService.GetRock:input_type -> rock.v1.GetRockRequest
	4, // 6: rock.v1.RockStoreService.PutRock:input_type -> rock.v1.PutRockRequest
	6, // 7: rock.v1.RockStoreService.DeleteRock:input_type -> rock.v1.DeleteRockRequest
	3, // 8: rock.v1.RockStoreService.GetRock:output_type -> rock.v1.GetRockResponse
	5, // 9: rock.v1.RockStoreService.PutRock:output_type -> rock.v1.PutRockResponse
	7, // 10: rock.v1.RockStoreService.DeleteRock:output_type -> rock.v1.DeleteRockResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_rock_v1_rock_proto_init() }
func file_rock_v1_rock_proto_init() {
	if File_rock_v1_rock_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rock_v1_rock_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rock_v1_rock_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rock_v1_rock_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rock_v1_rock_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rock_v1_rock_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutRockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rock_v1_rock_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rock_v1_rock_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rock_v1_rock_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rock_v1_rock_proto_goTypes,
		DependencyIndexes: file_rock_v1_rock_proto_depIdxs,
		EnumInfos:         file_rock_v1_rock_proto_enumTypes,
		MessageInfos:      file_rock_v1_rock_proto_msgTypes,
	}.Build()
	File_rock_v1_rock_proto = out.File
	file_rock_v1_rock_proto_rawDesc = nil
	file_rock_v1_rock_proto_goTypes = nil
	file_rock_v1_rock_proto_depIdxs = nil
}
