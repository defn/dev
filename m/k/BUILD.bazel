load("//b/out:out.bzl", "copy_files")

cluster_apps = glob(
    ["*-cluster-*"],
    exclude_directories = 0,
)

filegroup(
    name = "gen_kustomize_build_sh",
    srcs = ["gen_kustomize_build.sh"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "gen_cue_import_sh",
    srcs = ["gen_cue_import.sh"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "gen_deploy_yaml_sh",
    srcs = ["gen_deploy_yaml.sh"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "deploy_cue",
    srcs = glob(["*.cue"]),
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all_kustomize_build_sh",
    srcs = [
        "kustomize_build_{}".format(k)
        for k in cluster_apps
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all_cue_import_sh",
    srcs = [
        "cue_import_{}".format(k)
        for k in cluster_apps
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "all_deploy_yaml_sh",
    srcs = [
        "deploy_yaml_{}".format(k)
        for k in cluster_apps
    ],
    visibility = ["//visibility:public"],
)

[
    genrule(
        name = "kustomize_build_{}".format(k),
        srcs = glob(
            ["{}/*.yaml".format(k)],
            exclude = [],
            exclude_directories = 1,
        ),
        outs = ["{}.yaml".format(k)],
        cmd = "$(location gen_kustomize_build_sh) app=k/{} $@".format(k),
        tools = [
            "gen_kustomize_build_sh",
            "//b/lib:lib_sh",
        ],
    )
    for k in cluster_apps
]

[
    genrule(
        name = "cue_import_{}".format(k),
        srcs = ["kustomize_build_{}".format(k)],
        outs = ["{}.cue".format(k)],
        cmd = "$(location gen_cue_import_sh) app=$(location kustomize_build_{}) $@".format(k),
        tools = [
            "gen_cue_import_sh",
            "//b/lib:lib_sh",
        ],
    )
    for k in cluster_apps
]

[
    genrule(
        name = "deploy_yaml_{}".format(k),
        srcs = [
            "cue_import_{}".format(k),
            "deploy_cue",
            "//cue.mod:cue_mod",
            "//cue.mod/gen/k8s.io:k8s_io",
        ],
        outs = ["{}-deploy.yaml".format(k)],
        cmd = "$(location gen_deploy_yaml_sh) app=$(location cue_import_{}) $@".format(k),
        tools = [
            "gen_deploy_yaml_sh",
            "//b/lib:lib_sh",
        ],
    )
    for k in cluster_apps
]
