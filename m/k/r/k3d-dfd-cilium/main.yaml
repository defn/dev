apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  kube-proxy-replacement: disabled
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWGFjaVpQTGpQUS82ckEwOE43bVhSVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFeE1EVXpNREUwV2hjTk1qWXdPREV3TURVegpNREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VxdjR1QnoraGYrVHdBVVVPUC8rSENMNVJ4Zk1LQndiZERqQWJ2ZW5WTTZ4UHJjZDcKM0JCUjJwV2FZeHhGa21XYWZMZnBDZS9NTmR3dGl2WU1hOXJzOTBJc0xUMFloNXJEa1YyR1pBdWc4VHRrekozYgpxYkV4WGtZZlVwemRtQWlzNjhDWjNaemZOdHU3aWY2Q3dML2xLVkFISm56VjZNVFNSeTA3L3IwQnJzeDBRcDh4CjRScnZ6dUxRY2FoTnZwVlVRNjRUZm1WQVV6NnYxUk5YMTRKb21LNEtUTDJ0d0dYaE5jMkdDaXRYbFFaSXI4YTAKZFpROERTWDhWeFd3ZWlVN3FkenI2elJXbmk2RWx0QjR0T2ZzdSsvVmdQMWY1Z2hTWU5UVXoxaGt4RzhReWZ3MAoya2JjUThKUjlUV1o4NUxxdW9HNmlKR3BBWkYyd0RicUt2d05BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQV25uSDFwdXNpblJzWVdGTjBlU2ZjMzJwdFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKaHViV1grNUJOWXBJV2dmSWdUeWQ3TDV3ejQ0VmNOSDNLV0c1dG40dWtTT3lkM2gwU2JZVE5uCk1BdFNLY0JmWVFwQXZJODBnS0tXc08xZlZMc1kvZDJ4dW9ZSDM4d0gyNTFqMkxWMnhEUHRXWitTNGdGN1FIZEMKMW9Zc0NMczFxNUJUcTAreGFJUk4yT1piZVpFUkN4RnFnM1RsUXJIY0hXRVArL0dTS2lLdE02K0dnbXJ0Zjh4QgpOZHZwL3FtaksyYmdrYlRSUGRMNlZRVGtaNFpwN3RKbEQwT3N5dzhlKzFLT01ISUxzUm5RbXpqbVJ1YitYSEY4Ck5DSGdwOWYydDkwVW9kN0c3Q2Z2c25MZ0ZkUHdlM2YvTjNMay81MnlKcTZXeERPNFBTZFdJdW4rSVJDS2F3TmoKUy9EcDB2YmdCblczZWNIdkQxb2srSzl3b3N6b0Z4UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbnFyK0xnYy9vWC9rOEFGRkRqLy9od2krVWNYekNnY0czUTR3RzczcDFUT3NUNjNICmU5d1FVZHFWbW1NY1JaSmxtbnkzNlFudnpEWGNMWXIyREd2YTdQZENMQzA5R0llYXc1RmRobVFMb1BFN1pNeWQKMjZteE1WNUdIMUtjM1pnSXJPdkFtZDJjM3piYnU0bitnc0MvNVNsUUJ5WjgxZWpFMGtjdE8vNjlBYTdNZEVLZgpNZUVhNzg3aTBIR29UYjZWVkVPdUUzNWxRRk0rcjlVVFY5ZUNhSml1Q2t5OXJjQmw0VFhOaGdvclY1VUdTSy9HCnRIV1VQQTBsL0ZjVnNIb2xPNm5jNitzMFZwNHVoSmJRZUxUbjdMdnYxWUQ5WCtZSVVtRFUxTTlZWk1SdkVNbjgKTk5wRzNFUENVZlUxbWZPUzZycUJ1b2lScVFHUmRzQTI2aXI4RFFJREFRQUJBb0lCQUVuMmY2SkpNcm8vK2lKLwpGUWU5Z1lvYTQwMFBMMm9mT0czWGJVbWhUOTFZeHh3bGIvWW04VnlXdm1KSGpTaEpSQit0djdWY01uSkpNU2Z4CnZSeXhNazZBUEZLSGpCRmhOUjJ4SjUyOENVZXU2L2JqQXpzZ2NUOElLVHYwc0xjRFpoZmxsZFNqMzdxVndmdzgKS1c0ZUY5WGxXaTdiSEJwQzlXem9UUWZJaWFhOGJ4NDdvNGFtek1lZk1mbUNieldLNGNubDB3NkNxaTVOWXMyKwo1NG1RTm5QQzdOamFGRU1FRm1mNXFqL0FXYzZOTitMazlHSjMzekZvSWxuemtTSWJZY05vZXg3UG94M0FxRUtFCldqWnllVmxlV0NKQ3pMMEFVSGpYTndDZ25SMFBJN2hzMzlvOTA0NXFPZzFOTW5HLzF4QnJROHFyUWxuQTJtTzEKdFk3SS8ra0NnWUVBeTBZbUhvRWZnanZrQUhBaHl3STE1YVN3TjMya080SW8yQ2huVUMzTVVnM0tQRDFndktkOAo4b1IxRDhXSnkzY3FYR0RDZGp0dW11bVRqeVRBYVRJeThnd25NS2FpNktUVnphWDdKcUx5N3k4MGwyMkFPZ0dUCnhsOVB1aWhsV0dsZ1Z0VUd2Qlh1QnRsZDRBQlNEN2s2RmJ3MUlCWXphenh3eE5mSkdkYXZqNk1DZ1lFQXg5TG0KZU8yc2lPRGQwTGovMVF5enZ5NklKSU1BRE9BQnFuWlI0WFlabWhMRFQ2bldNTkFwUXJGRkh6WjdrWG9YaEQ4aQp6TGNSaExkYkFWMCszTFo4SUpOMkpqT0hJSmdvMUNYUVRISGg4MGN4Ykl2R3lMTVpMZkloZzFJUk9qMk9GbE9XCjc2N2ErUWgvV0pnUkR1MGZ5QmdZRzdqak9sTm1VQ0NaTjN3YlFJOENnWUIzb3pYVVJsTHhKNmF0eTFGWVZsaTYKYkE5NjJXdkx5bk9YcFZBSkZLdG9yODBUWDF5TUxGZVJ0UHZnNkhhTlZmbU1uVFpXdCt3RktPdzhGM2xYY01BagpUWnZUT29BdlJMVEJjS3M4dGpNZEt6OWMwSW5qbWdJTGd4VTlqNEQyWkM3YmJFMm1iWkhHWGpDdUlnSXFWdTRrCjFMeS93ZEZKa0MwZTdaSGlyMFJzMlFLQmdDWnRSVXIrRWM3a3gyTkxJRStkT0xmTVAvd2RnUlg0d2ZsQTliQVEKNFEyRERESTJxKzBKS3RZYmR2cHdwTVN1SVBXYW1wdVpuUEhUdk5sL1VBWnJ4V1VTVm9jMEk0aytHYVBxZmFzbAp2MWprV1BuUnkzRnZGNm1CUmJhV1FwL2JsSVp3bnJjSy9pc2oyakYwVk50MCtFYW5jNE5wUTdGRXRvazBLNkxDCjZBNjdBb0dCQUlBOFlJL2U2MkQzcEpmamZXY25KTU1Ybmc1R0V3QWtBREs5OVJqZHZzZjBKQVlKRVFaZ3NpeGQKTTV0NTdmZi9rTFAwTmdOOTZIMEw1VFBWTWhmWW93dng2UW4wSmx6UFJtRGM3SlhHbFJCeWhjYmx4WHR1TjZYSQpSY1RhclJ4d2NLc0NQZ0Y5Q1VoeHFYQzFEOGw1a1B0aVBOaWZrcE05dEpneHhrSkU4OVBNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWGFjaVpQTGpQUS82ckEwOE43bVhSVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFeE1EVXpNREUwV2hjTk1qWXdPREV3TURVegpNREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VxdjR1QnoraGYrVHdBVVVPUC8rSENMNVJ4Zk1LQndiZERqQWJ2ZW5WTTZ4UHJjZDcKM0JCUjJwV2FZeHhGa21XYWZMZnBDZS9NTmR3dGl2WU1hOXJzOTBJc0xUMFloNXJEa1YyR1pBdWc4VHRrekozYgpxYkV4WGtZZlVwemRtQWlzNjhDWjNaemZOdHU3aWY2Q3dML2xLVkFISm56VjZNVFNSeTA3L3IwQnJzeDBRcDh4CjRScnZ6dUxRY2FoTnZwVlVRNjRUZm1WQVV6NnYxUk5YMTRKb21LNEtUTDJ0d0dYaE5jMkdDaXRYbFFaSXI4YTAKZFpROERTWDhWeFd3ZWlVN3FkenI2elJXbmk2RWx0QjR0T2ZzdSsvVmdQMWY1Z2hTWU5UVXoxaGt4RzhReWZ3MAoya2JjUThKUjlUV1o4NUxxdW9HNmlKR3BBWkYyd0RicUt2d05BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQV25uSDFwdXNpblJzWVdGTjBlU2ZjMzJwdFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKaHViV1grNUJOWXBJV2dmSWdUeWQ3TDV3ejQ0VmNOSDNLV0c1dG40dWtTT3lkM2gwU2JZVE5uCk1BdFNLY0JmWVFwQXZJODBnS0tXc08xZlZMc1kvZDJ4dW9ZSDM4d0gyNTFqMkxWMnhEUHRXWitTNGdGN1FIZEMKMW9Zc0NMczFxNUJUcTAreGFJUk4yT1piZVpFUkN4RnFnM1RsUXJIY0hXRVArL0dTS2lLdE02K0dnbXJ0Zjh4QgpOZHZwL3FtaksyYmdrYlRSUGRMNlZRVGtaNFpwN3RKbEQwT3N5dzhlKzFLT01ISUxzUm5RbXpqbVJ1YitYSEY4Ck5DSGdwOWYydDkwVW9kN0c3Q2Z2c25MZ0ZkUHdlM2YvTjNMay81MnlKcTZXeERPNFBTZFdJdW4rSVJDS2F3TmoKUy9EcDB2YmdCblczZWNIdkQxb2srSzl3b3N6b0Z4UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbnFyK0xnYy9vWC9rOEFGRkRqLy9od2krVWNYekNnY0czUTR3RzczcDFUT3NUNjNICmU5d1FVZHFWbW1NY1JaSmxtbnkzNlFudnpEWGNMWXIyREd2YTdQZENMQzA5R0llYXc1RmRobVFMb1BFN1pNeWQKMjZteE1WNUdIMUtjM1pnSXJPdkFtZDJjM3piYnU0bitnc0MvNVNsUUJ5WjgxZWpFMGtjdE8vNjlBYTdNZEVLZgpNZUVhNzg3aTBIR29UYjZWVkVPdUUzNWxRRk0rcjlVVFY5ZUNhSml1Q2t5OXJjQmw0VFhOaGdvclY1VUdTSy9HCnRIV1VQQTBsL0ZjVnNIb2xPNm5jNitzMFZwNHVoSmJRZUxUbjdMdnYxWUQ5WCtZSVVtRFUxTTlZWk1SdkVNbjgKTk5wRzNFUENVZlUxbWZPUzZycUJ1b2lScVFHUmRzQTI2aXI4RFFJREFRQUJBb0lCQUVuMmY2SkpNcm8vK2lKLwpGUWU5Z1lvYTQwMFBMMm9mT0czWGJVbWhUOTFZeHh3bGIvWW04VnlXdm1KSGpTaEpSQit0djdWY01uSkpNU2Z4CnZSeXhNazZBUEZLSGpCRmhOUjJ4SjUyOENVZXU2L2JqQXpzZ2NUOElLVHYwc0xjRFpoZmxsZFNqMzdxVndmdzgKS1c0ZUY5WGxXaTdiSEJwQzlXem9UUWZJaWFhOGJ4NDdvNGFtek1lZk1mbUNieldLNGNubDB3NkNxaTVOWXMyKwo1NG1RTm5QQzdOamFGRU1FRm1mNXFqL0FXYzZOTitMazlHSjMzekZvSWxuemtTSWJZY05vZXg3UG94M0FxRUtFCldqWnllVmxlV0NKQ3pMMEFVSGpYTndDZ25SMFBJN2hzMzlvOTA0NXFPZzFOTW5HLzF4QnJROHFyUWxuQTJtTzEKdFk3SS8ra0NnWUVBeTBZbUhvRWZnanZrQUhBaHl3STE1YVN3TjMya080SW8yQ2huVUMzTVVnM0tQRDFndktkOAo4b1IxRDhXSnkzY3FYR0RDZGp0dW11bVRqeVRBYVRJeThnd25NS2FpNktUVnphWDdKcUx5N3k4MGwyMkFPZ0dUCnhsOVB1aWhsV0dsZ1Z0VUd2Qlh1QnRsZDRBQlNEN2s2RmJ3MUlCWXphenh3eE5mSkdkYXZqNk1DZ1lFQXg5TG0KZU8yc2lPRGQwTGovMVF5enZ5NklKSU1BRE9BQnFuWlI0WFlabWhMRFQ2bldNTkFwUXJGRkh6WjdrWG9YaEQ4aQp6TGNSaExkYkFWMCszTFo4SUpOMkpqT0hJSmdvMUNYUVRISGg4MGN4Ykl2R3lMTVpMZkloZzFJUk9qMk9GbE9XCjc2N2ErUWgvV0pnUkR1MGZ5QmdZRzdqak9sTm1VQ0NaTjN3YlFJOENnWUIzb3pYVVJsTHhKNmF0eTFGWVZsaTYKYkE5NjJXdkx5bk9YcFZBSkZLdG9yODBUWDF5TUxGZVJ0UHZnNkhhTlZmbU1uVFpXdCt3RktPdzhGM2xYY01BagpUWnZUT29BdlJMVEJjS3M4dGpNZEt6OWMwSW5qbWdJTGd4VTlqNEQyWkM3YmJFMm1iWkhHWGpDdUlnSXFWdTRrCjFMeS93ZEZKa0MwZTdaSGlyMFJzMlFLQmdDWnRSVXIrRWM3a3gyTkxJRStkT0xmTVAvd2RnUlg0d2ZsQTliQVEKNFEyRERESTJxKzBKS3RZYmR2cHdwTVN1SVBXYW1wdVpuUEhUdk5sL1VBWnJ4V1VTVm9jMEk0aytHYVBxZmFzbAp2MWprV1BuUnkzRnZGNm1CUmJhV1FwL2JsSVp3bnJjSy9pc2oyakYwVk50MCtFYW5jNE5wUTdGRXRvazBLNkxDCjZBNjdBb0dCQUlBOFlJL2U2MkQzcEpmamZXY25KTU1Ybmc1R0V3QWtBREs5OVJqZHZzZjBKQVlKRVFaZ3NpeGQKTTV0NTdmZi9rTFAwTmdOOTZIMEw1VFBWTWhmWW93dng2UW4wSmx6UFJtRGM3SlhHbFJCeWhjYmx4WHR1TjZYSQpSY1RhclJ4d2NLc0NQZ0Y5Q1VoeHFYQzFEOGw1a1B0aVBOaWZrcE05dEpneHhrSkU4OVBNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWGFjaVpQTGpQUS82ckEwOE43bVhSVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFeE1EVXpNREUwV2hjTk1qWXdPREV3TURVegpNREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VxdjR1QnoraGYrVHdBVVVPUC8rSENMNVJ4Zk1LQndiZERqQWJ2ZW5WTTZ4UHJjZDcKM0JCUjJwV2FZeHhGa21XYWZMZnBDZS9NTmR3dGl2WU1hOXJzOTBJc0xUMFloNXJEa1YyR1pBdWc4VHRrekozYgpxYkV4WGtZZlVwemRtQWlzNjhDWjNaemZOdHU3aWY2Q3dML2xLVkFISm56VjZNVFNSeTA3L3IwQnJzeDBRcDh4CjRScnZ6dUxRY2FoTnZwVlVRNjRUZm1WQVV6NnYxUk5YMTRKb21LNEtUTDJ0d0dYaE5jMkdDaXRYbFFaSXI4YTAKZFpROERTWDhWeFd3ZWlVN3FkenI2elJXbmk2RWx0QjR0T2ZzdSsvVmdQMWY1Z2hTWU5UVXoxaGt4RzhReWZ3MAoya2JjUThKUjlUV1o4NUxxdW9HNmlKR3BBWkYyd0RicUt2d05BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQV25uSDFwdXNpblJzWVdGTjBlU2ZjMzJwdFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKaHViV1grNUJOWXBJV2dmSWdUeWQ3TDV3ejQ0VmNOSDNLV0c1dG40dWtTT3lkM2gwU2JZVE5uCk1BdFNLY0JmWVFwQXZJODBnS0tXc08xZlZMc1kvZDJ4dW9ZSDM4d0gyNTFqMkxWMnhEUHRXWitTNGdGN1FIZEMKMW9Zc0NMczFxNUJUcTAreGFJUk4yT1piZVpFUkN4RnFnM1RsUXJIY0hXRVArL0dTS2lLdE02K0dnbXJ0Zjh4QgpOZHZwL3FtaksyYmdrYlRSUGRMNlZRVGtaNFpwN3RKbEQwT3N5dzhlKzFLT01ISUxzUm5RbXpqbVJ1YitYSEY4Ck5DSGdwOWYydDkwVW9kN0c3Q2Z2c25MZ0ZkUHdlM2YvTjNMay81MnlKcTZXeERPNFBTZFdJdW4rSVJDS2F3TmoKUy9EcDB2YmdCblczZWNIdkQxb2srSzl3b3N6b0Z4UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUGZhSUdpL3hkL2prR0hPdUdoTFlIREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFeE1EVXpNREUxV2hjTk1qWXdPREV3TURVegpNREUxV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDcjJBV0I2bWdUbmFKSk9ZSXJCRTVBWXlyUyszUm8KeXVsYWZwN2YraU5ZbW1JeDREeGdQblZlaWlveWtqLzRnUS82Qm9jYWpUL0ZHUDBabWl2SVpnNm9xU2o5ckFZRwpTWWI5T0VhVlZEWWpYNGFZMUh6cE84eFdVVmJRRVF1dkZTNTUvSTUyQ0RxUGVnTThTMy9pd0h4dzE3aHdQckpHCjNNYmw2QzR4aGtxRkxkMmJmbU5RdWJQN0dFbXkydjdrTmNETFdsQjBrUTFWbU53U0FNOUpVRlJ0REI0dVQ5eEoKNWNTZy9sUWEzcnBlU0JQa2JrRmgyeGhYQVBqOXQxV29lMEd4VVREYnN2UDVMbTRablpPVWs0bThReWJTTnQzego2ZUVMRGRMM1pXOU1YampYY1IxSHNWZnFvUC9EWUNOZG9SZDhQakZtSVBtL2FDN0ljeDF5eXhVdEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZEMXA1eDlhYnJJcDBiR0ZoVGRIa24zTgo5cWJVTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFHaGxJd1U3WjZxNkYwY2c0Q0FQRzZ6Vm9ZU1laVkNRV3FPdTRIUWRuSzg5cDVNYWoKSUt5RlI3TU5FSDFrb2dDNTQwcTNUV2ZnTVlCajRFNjM1dTFMN2xGbTVZYWVkbDNwbmE4Y1hld09QUHZqQkZycwpESXk3RmJrRWU1OEFxdDduUjR5bDdFdFMwczRnWGJ6ZTFtajc2aXZ0eWp6V2cwSjFqOG1vRXZFK1E0TGdBdG9pCi80TGYySmo5VEg5OEpWTGlKWWpocytReTdpWkFmNU1WSSthTEFoVy9SYUo4d2Y0SWhFd3p3Z2FxWnd6K1o1RjkKVmJsdnZkZlc0VkhFL1dyd3Roa0ZSQU43T0xybXU1UmVOTWoxcVVTb2JZaXQ1UUNWNGZWaUIzRmJoNVdNZXFDRAprZDVFNlBkQWNDTDQ1eW5vMVA2U3hNajFIWGwwUTZJZ1JkRG52QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcTlnRmdlcG9FNTJpU1RtQ0t3Uk9RR01xMHZ0MGFNcnBXbjZlMy9valdKcGlNZUE4CllENTFYb29xTXBJLytJRVArZ2FIR28wL3hSajlHWm9yeUdZT3FLa28vYXdHQmttRy9UaEdsVlEySTErR21OUjgKNlR2TVZsRlcwQkVMcnhVdWVmeU9kZ2c2ajNvRFBFdC80c0I4Y05lNGNENnlSdHpHNWVndU1ZWktoUzNkbTM1agpVTG16K3hoSnN0cis1RFhBeTFwUWRKRU5WWmpjRWdEUFNWQlViUXdlTGsvY1NlWEVvUDVVR3Q2NlhrZ1Q1RzVCCllkc1lWd0Q0L2JkVnFIdEJzVkV3MjdMeitTNXVHWjJUbEpPSnZFTW0wamJkOCtuaEN3M1M5MlZ2VEY0NDEzRWQKUjdGWDZxRC93MkFqWGFFWGZENHhaaUQ1djJndXlITWRjc3NWTFFJREFRQUJBb0lCQUczcVU4T0FhcWU1V1RkYgpDRzU1WjQvNW5rZXJQUTlXVXFKbWdUcWtKWDJqNmhFYTY2Tm43K3pUbFNBWnViODYxanhIZHAwK0liN3hOOXJyCmFQdmFnNS9QNjM4dVRBQXpnWnR3Sm4yWGlyVmZnWms1dU5mNlByNHJjc3JOVEZybHduK1dVbzBld0U1TGJjeGcKUW1HSVcxQldPd3ZZbm5HQy85bklnOXQ3bVNqTFcwcllNQ0pOUmE1SWNndnFLVWlCVWFSU3U0RXVBQldhRk04ZwpYU3duRlZvOUdnUmVRdytVVm9UVllXdTNIbWd5RVY4K3BsdWc3N1dQVzJVaXViczFUOXRhY3lja280dXRRWHg3CmtvRGdZS1RCMjY3V2NkSmVUdVdPWUk3Z2lvQXlCQW9YeEZjMWJaRkhpNFcwcTE4UWJIQXd6a2VRdE5WcndjZjMKTVg5a3NNRUNnWUVBNDlOK2tkUENkY2grbnBLb2NWTE5oMGZCdjFFeS9TcG5yUGpGMUZDSnJzUjlMMlJUNUQwawpzVDh3aEpGcUZCa0dsQ2R3NE5pRHlnbGM3d0dyYzRuaTV5SzZvU3Vmc0o4bW9hU28xdTRsWkd5VmpBQmpSZXJiCnBHbUtBT3lyV1Iza2krZEVFOFgxRllmbVlxUkpWTkRZd3EvVlcwSU1xMnhVNmYvM0dDUkc2VEVDZ1lFQXdSZysKRjNpNEREUEZwS0F1VWRNNWtQQXJtYnN6L1lVejBkZlkvZENDeHRrY3lQUUMweEtqa09ZRDdmU1U1bCs3cEZYdgpDTDJHRUxMamVwejliMVViS05Yd3pUTThwV2o4M2JrVjVGbGQxanNOTzFtN05lMWoyWGROTXRsSXJWTmdlRzk5CmRURWk2Mnh0SEY4dVdWSS9nQisranN2b0EvUFd2elpSdlRFRXJMMENnWUJrRUxPcDkxbVZCQi9oSkVkSnB2WFEKOGtwOTduczN5UlZLV3VZQlQvSjVTYUkyVzVtaFNOM0I0Q0ErU2VST3VZTXpOWE9Wdm1OOExNcWR5NXp6blYrRQo1N01UTVNidG02bUxHOWh3dHA3RDBoR0pNVzVvK2pQSXJmWklXNnNTOUZjNnY3UWQvemViWWxwbGZ3VWFkTFNRCkprek96VjdsT0NxL3NJWm1HeUR1TVFLQmdRQ3ovVVg3bVFKdUZXQTQrVHJUK1FGaThneWlTeGJHVFlDbExQOU8KY0N0RzhhQmNUTi9KSWttblNsRUZZUVBlemdQWnhtUi9FRExFcEF0WkFyZFdMTTJaUGZzdE80SmZhVUt6NXMvYQpQOWN4VjNBWkQ2WnJPVEhteHNjR0MvWXI0bGs5U2lkMnN1dXE2VEczelowbGszNHZqdWVRc2M4K3grODM0NGxECndrcHFQUUtCZ1FEUWhhaElWN1JYOW1DOHBENzFkdTlpVmJmOWMxcExRb0tGelo0NFJXS0wwOTJqTXNqUzFsM1UKVUNramdGZmZMUzMzNGlvaDlkT3VxeElueVlIZjE4cGs2cHowVjRwb0dMSUNVcnVzOXk1OWZmamFOMEFoUktVQwpKVFl1VkYyenl5eGdURjVVbTUzTXh6ckJwR2dYRytqSld6OVBOU3BVcXZTQjBHYnZUMS9vRmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRWGFjaVpQTGpQUS82ckEwOE43bVhSVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFeE1EVXpNREUwV2hjTk1qWXdPREV3TURVegpNREUwV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ2VxdjR1QnoraGYrVHdBVVVPUC8rSENMNVJ4Zk1LQndiZERqQWJ2ZW5WTTZ4UHJjZDcKM0JCUjJwV2FZeHhGa21XYWZMZnBDZS9NTmR3dGl2WU1hOXJzOTBJc0xUMFloNXJEa1YyR1pBdWc4VHRrekozYgpxYkV4WGtZZlVwemRtQWlzNjhDWjNaemZOdHU3aWY2Q3dML2xLVkFISm56VjZNVFNSeTA3L3IwQnJzeDBRcDh4CjRScnZ6dUxRY2FoTnZwVlVRNjRUZm1WQVV6NnYxUk5YMTRKb21LNEtUTDJ0d0dYaE5jMkdDaXRYbFFaSXI4YTAKZFpROERTWDhWeFd3ZWlVN3FkenI2elJXbmk2RWx0QjR0T2ZzdSsvVmdQMWY1Z2hTWU5UVXoxaGt4RzhReWZ3MAoya2JjUThKUjlUV1o4NUxxdW9HNmlKR3BBWkYyd0RicUt2d05BZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQV25uSDFwdXNpblJzWVdGTjBlU2ZjMzJwdFF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFKaHViV1grNUJOWXBJV2dmSWdUeWQ3TDV3ejQ0VmNOSDNLV0c1dG40dWtTT3lkM2gwU2JZVE5uCk1BdFNLY0JmWVFwQXZJODBnS0tXc08xZlZMc1kvZDJ4dW9ZSDM4d0gyNTFqMkxWMnhEUHRXWitTNGdGN1FIZEMKMW9Zc0NMczFxNUJUcTAreGFJUk4yT1piZVpFUkN4RnFnM1RsUXJIY0hXRVArL0dTS2lLdE02K0dnbXJ0Zjh4QgpOZHZwL3FtaksyYmdrYlRSUGRMNlZRVGtaNFpwN3RKbEQwT3N5dzhlKzFLT01ISUxzUm5RbXpqbVJ1YitYSEY4Ck5DSGdwOWYydDkwVW9kN0c3Q2Z2c25MZ0ZkUHdlM2YvTjNMay81MnlKcTZXeERPNFBTZFdJdW4rSVJDS2F3TmoKUy9EcDB2YmdCblczZWNIdkQxb2srSzl3b3N6b0Z4UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRYlR2ZS81TXZOSXJYQ0U0UDU2VVBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFeE1EVXpNREUwV2hjTk1qWXdPREV3TURVegpNREUwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBN3dES1lCWTl1c2dlanFNdkY5cmEKSmcxSnhBYSt4RVFKbGtBQzBWdGd6YUt1aUF3ZVc1QjZ2bFRlSkNBaHFWUjlGckpDSzV2Q2FSQ0FWMzdRZ21VbQpZcW5hR201cUdiV2NCR1FzcUhHVU53UnM4R2JEMUIzTjJ5YlI0V2dLV05PRUUwVDZJTXkxcEUyeVdjaGxTelplCllSQU9GNVJoSEJsc1NpbFRDTnFPWGVkZ1Azbmo0Yko1aXRqemN5QTZOOGcybW9CSmV6U05lR3RLSlQ5MWxBSzkKMWpjL2lWYVAyQkNoWTZIQkYyN0tqdjhPQmpKc3VtZndzbjdab2gzU0FFcXlHcWFoV3o5WkRoMjBZbENTNFBPbgpaU1ZIZ0pYYTlZbjBHSnBjSE1nVjJwbXJoTGhOelh6U0ZUeVB0eFUveDJqN1NVVTUxeU9vQWw1Nk9HVHpWV3p5CjhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JROWFlY2ZXbTZ5S2RHeApoWVUzUjVKOXpmYW0xREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBSHhVNmFaNEEzSGVyc2ptMXFkQ1VaYUpmYWk0MmEKTXlDbjFVWGZEeFRSd2JXV1FHUGFmVy9wc204d2R5TnNjTms4eW5jaDMvcWwwY0lZUUk2N04rWFJsKzRlWTJ6Vwo4aGRNT3JxN1V5eWNIaCtKVVBpUGphVUY5QWRQWjVtMzluVXZST3FsczgwYUovN3FFVnllUGRVZEV5SmkwMk1sCjkxdXVFVERoN1NvN0h4cGtQY0ZLL3hUWFdLaVV6Z0tKSFJGcmhLc0NBOGYwM1NhNUpqWTBHN3dEcEpsbnBCQzAKTFVEL0IzNlNPYUdqWktxQVQvUThndDVHbTZyUTdRRmU4L3ZIb0JoQzRtcHkyYVZMdEtxdUUyb0gxZnFwcVRlRgpneXhycHhLTkM5dDRpcFRYN0Z4azZEQUZ1MjN6bVpENlBHOEEzMDNuS2c4WTFlUWFuQmN6SGEvMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN3dES1lCWTl1c2dlanFNdkY5cmFKZzFKeEFhK3hFUUpsa0FDMFZ0Z3phS3VpQXdlClc1QjZ2bFRlSkNBaHFWUjlGckpDSzV2Q2FSQ0FWMzdRZ21VbVlxbmFHbTVxR2JXY0JHUXNxSEdVTndSczhHYkQKMUIzTjJ5YlI0V2dLV05PRUUwVDZJTXkxcEUyeVdjaGxTelplWVJBT0Y1UmhIQmxzU2lsVENOcU9YZWRnUDNuago0Yko1aXRqemN5QTZOOGcybW9CSmV6U05lR3RLSlQ5MWxBSzkxamMvaVZhUDJCQ2hZNkhCRjI3S2p2OE9CakpzCnVtZndzbjdab2gzU0FFcXlHcWFoV3o5WkRoMjBZbENTNFBPblpTVkhnSlhhOVluMEdKcGNITWdWMnBtcmhMaE4Kelh6U0ZUeVB0eFUveDJqN1NVVTUxeU9vQWw1Nk9HVHpWV3p5OFFJREFRQUJBb0lCQVFDVUVhOVBYRGdlTWNFTQpxWGlSbE5xMTNHR28rbXpSZHoxaFFvTDhaVnBSeThuSks0amJQV1Z0NlhJK2UxR2ZjR0tXM3hVem95b01vVmFCCjNtVWJnOE1HT1NpUVczdU1OZ0ZVanlORHNDb2M4N2J5TVJoOW40RmJsbTlNOElJSWlmSTNaZko0dzVwOUVrMisKWmZLcmFDR01qTC9PUi9UcHphNVRPOHJmbjFlNFFGKzJXSk5FVnFGc05HNTJqSC9yd2VIM2o5eXZ0Z0dYTXBZUApDS2pwMXV0dzdQbUVXM2tzUGRkUmZpRmFOakFGcUFEYUkrcVl1Q1cyQ1pDNXZid0lvTk92UU5WeVg1TXRkblJLCnZEd1lNR3c3N2N6b1RCd2NCbUI4elFnck5CeVNuVFpWd1dvSGhqS2hrOW1iajR1UmxXT0diWE92ZXJvZFRPOFEKaG5VNG9JZGhBb0dCQVBBank0YTRTRWRHak1vVVhIM0NEZWVjZkR6aUhCOHlCRXUvTExHS1RKS0tqc3V5eHorWgpsUUd0S3FDVGgxNm9laUR5VEJNaGFBTzRRK3c4cGN0WVJPdi9vS0x0TEF4Mlh0YURpZVFsUGFzczFxSDJPKytTCnhoMkpWZ095VUJncUFHMXUyQmM5Z2Fnd3Z0aUUvUTJ3MXlpTEdUWjYyejNkZGdIVXc0bUVwbWpWQW9HQkFQN0oKeHFRWjRUTlNIb1ZoZUQrYXdLcDFLSUQzd1lhS3hoZVNORndXdWZUcjE4MFNmV3dxTmo3SVA4ejRiTis1N2VwZwoxSE9TR09RbUxtMEE1a1FVRXZaUVhJSVY3R3k2eXF2Z05kbFhLcGJZSGNPZ3R5R3llSm96SUkwczhSTmY5U2NECjZHay81R2EyaVZKNEQ3T3RIZkRoNXpMT2pkWWdFbDhvMkQ2QlZTK3RBb0dCQUxtd3BDL1BqaXgzVkdUcXE3NmUKOE11WlNNUjNmNUZyeHNDZjJycUttNzF4SVF4SWVTUW42WDM3WG92K3FGMjgzM3RjZ1JFRjh2MTFYaWh0bVRLTgpWZlk3bkFhQWFXQlZvKzR5bHN6eE15ZUxLNGpmOCtiRVV5Z0J5NTVlSXVzY2gyb1huVWNUUzVBMzZVdGFRcWQwCmlGdVVlL0dSdkxpdzZCQndhcWVMQ0hibEFvR0JBTXhKZHBidkZTejBBL3JIK3dWc2pGeGdFYmpPYmdIMVZQMWoKUWM0d2ZxdE5TanRvUHQ0eVBrbzZmMFZXVHQxWGs5WmdDeGdiSlJBUk9SbzNKV21pZXMyNkEySmVON0c2VjNSVwpFbmNRTjlxNHI2ekNPUE93eUpoQ3RDL2R2L0hiOTVGdnhiSldBMGtEeExrMkFNajgza3ZjcFdhTVRSZEpvZEZnCnkzbmFjellGQW9HQUtIZVZMeE9ML25BZVl4Z0xlTnpWUU5TbFJhZGZFSzhVcXFtTWpHMFFQclNBRC9NeWgvSnkKV0NDRXQxSHpmV2xhdEFqYXY0Zjl5RElXU1NJMGlWKzdMOHV1a2Zad01QZ21ZaUhNTUtGZFpIMlc0bmNBZ2luWgpvTmRlMDBqNzR0bmppTHppSkk5Q0Vsa3E3bS9iZm5wQjFPc0dBMmVLNDVoNmw5bFltVk5pZldJPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.13.5@sha256:d77f3e1472725b3c28b5d88d6a49c7fcba3072c0c08a26e2e16c1e9139c96207
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.5@sha256:a1bca42ac2f9f934d7dc9311ecff5ff7012023830a63ba2980091abbfc148cbb
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.5@sha256:e02744b4413824093d25a6fb35e2e418f7301e55825fa53a8e1943fe7e9e5aef
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
