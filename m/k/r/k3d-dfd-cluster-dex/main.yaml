rules:
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - create
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
  - kind: ServiceAccount
    name: dex
    namespace: dex
---
apiVersion: v1
kind: Namespace
metadata:
  name: dex
---
spec:
  template:
    spec:
      containers:
        - image: 169.254.32.1:5000/ghcr.io/dexidp/dex@sha256:f579d00721b0d842328c43a562f50343c54b0048ef2d58d6b54e750c21fc7938
          args:
            - dex
            - serve
            - --web-http-addr
            - "0.0.0.0:5556"
            - --telemetry-addr
            - "0.0.0.0:5558"
            - /etc/dex/config.yaml
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: telemetry
          name: dex
          ports:
            - containerPort: 5556
              name: http
              protocol: TCP
            - containerPort: 5558
              name: telemetry
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: telemetry
          resources: {}
          securityContext: {}
          volumeMounts:
            - mountPath: /etc/dex
              name: config
              readOnly: true
      securityContext: {}
      serviceAccountName: dex
      volumes:
        - name: config
          secret:
            secretName: dex
    metadata:
      annotations:
        checksum/config: 45424f5822f22c447091deb2b67f74460e498e3929a50fcebee4d6660df2a4e2
      labels:
        app.kubernetes.io/instance: dex
        app.kubernetes.io/name: dex
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: dex
      app.kubernetes.io/name: dex
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
---
spec:
  ingressClassName: traefik
  rules:
    - host: dex.dev.amanibhavam.defn.run
      http:
        paths:
          - backend:
              service:
                name: dex
                port:
                  number: 5556
            path: /
            pathType: Prefix
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: dex
  namespace: dex
---
rules:
  - apiGroups:
      - dex.coreos.com
    resources:
      - '*'
    verbs:
      - '*'
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dex
subjects:
  - kind: ServiceAccount
    name: dex
    namespace: dex
---
apiVersion: v1
data:
  config.yaml: Y29ubmVjdG9yczoKLSBjb25maWc6CiAgICBjbGllbnRJRDogJEdJVEhVQl9DTElFTlRfSUQKICAgIGNsaWVudFNlY3JldDogJEdJVEhVQl9DTElFTlRfU0VDUkVUCiAgICBsb2FkQWxsR3JvdXBzOiBmYWxzZQogICAgb3JnczoKICAgIC0gbmFtZTogZGVmbgogICAgICB0ZWFtczoKICAgICAgLSBjbGFzcwogICAgcmVkaXJlY3RVUkk6IGh0dHBzOi8vZGV4LmRldi5hbWFuaWJoYXZhbS5kZWZuLnJ1bi9jYWxsYmFjawogICAgdGVhbU5hbWVGaWVsZDogc2x1ZwogICAgdXNlTG9naW5Bc0lEOiBmYWxzZQogIGlkOiBnaXRodWIKICBuYW1lOiBHaXRIdWIKICB0eXBlOiBnaXRodWIKZW5hYmxlUGFzc3dvcmREQjogdHJ1ZQppc3N1ZXI6IGh0dHBzOi8vZGV4LmRldi5hbWFuaWJoYXZhbS5kZWZuLnJ1bgpzdG9yYWdlOgogIHR5cGU6IG1lbW9yeQ==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
type: Opaque
---
spec:
  ports:
    - appProtocol: http
      name: http
      port: 5556
      protocol: TCP
      targetPort: http
    - appProtocol: http
      name: telemetry
      port: 5558
      protocol: TCP
      targetPort: telemetry
  selector:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/name: dex
  type: ClusterIP
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
