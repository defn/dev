apiVersion: v1
kind: Namespace
metadata:
  name: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: dex
---
apiVersion: v1
data:
  config.yaml: ZW5hYmxlUGFzc3dvcmREQjogInRydWUiCmlzc3VlcjogaHR0cDovL2RleC5kZXYuYW1hbmliaGF2YW0uZGVmbi5ydW4Kc3RvcmFnZToKICB0eXBlOiBtZW1vcnk=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
spec:
  ports:
  - appProtocol: http
    name: http
    port: 5556
    protocol: TCP
    targetPort: http
  - appProtocol: http
    name: telemetry
    port: 5558
    protocol: TCP
    targetPort: telemetry
  selector:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/name: dex
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: dex
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: dex
    app.kubernetes.io/version: 2.37.0
    helm.sh/chart: dex-0.15.3
  name: dex
  namespace: dex
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: dex
      app.kubernetes.io/name: dex
  template:
    metadata:
      annotations:
        checksum/config: 149bc7e7b2965e0be34791675a10d0752c103ec5806eac9a15d341930f6c21e3
      labels:
        app.kubernetes.io/instance: dex
        app.kubernetes.io/name: dex
    spec:
      containers:
      - args:
        - dex
        - serve
        - --web-http-addr
        - 0.0.0.0:5556
        - --telemetry-addr
        - 0.0.0.0:5558
        - /etc/dex/config.yaml
        env: null
        image: ghcr.io/dexidp/dex:v2.37.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: telemetry
        name: dex
        ports:
        - containerPort: 5556
          name: http
          protocol: TCP
        - containerPort: 5558
          name: telemetry
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: telemetry
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /etc/dex
          name: config
          readOnly: true
      securityContext: {}
      serviceAccountName: dex
      volumes:
      - name: config
        secret:
          secretName: dex
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  name: dex
  namespace: dex
spec:
  ingressClassName: traefik
  rules:
  - host: dex.dev.amanibhavam.defn.run
    http:
      paths:
      - backend:
          service:
            name: dex
            port:
              number: 80
        path: /
        pathType: Prefix
