apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/version: v0.4.0
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.2.0
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/version: v0.4.0
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.2.0
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/version: v0.4.0
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.2.0
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
subjects:
- kind: ServiceAccount
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  namespace: default
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/version: v0.4.0
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.2.0
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  - name: metrics
    port: 9999
    protocol: TCP
    targetPort: metrics
  selector:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/version: v0.4.0
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.2.0
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: pod-identity-webhook
      app.kubernetes.io/name: amazon-eks-pod-identity-webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: pod-identity-webhook
        app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    spec:
      containers:
      - command:
        - /webhook
        - --annotation-prefix=eks.amazonaws.com
        - --aws-default-region=us-east-1
        - --in-cluster=false
        - --logtostderr
        - --namespace=default
        - --metrics-port=9999
        - --port=8443
        - --sts-regional-endpoint=true
        - --token-audience=sts.amazonaws.com
        - --token-expiration=86400
        - --token-mount-path=/var/run/secrets/eks.amazonaws.com/serviceaccount
        - --tls-cert=/etc/webhook/certs/tls.crt
        - --tls-key=/etc/webhook/certs/tls.key
        image: docker.io/amazon/amazon-eks-pod-identity-webhook:v0.4.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: metrics
        name: amazon-eks-pod-identity-webhook
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        - containerPort: 9999
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: metrics
        resources:
          limits: {}
          requests: {}
        securityContext:
          readOnlyRootFilesystem: true
          runAsGroup: 1
          runAsNonRoot: false
          runAsUser: 65534
        volumeMounts:
        - mountPath: /etc/webhook/certs
          name: cert
          readOnly: true
      hostNetwork: false
      securityContext: {}
      serviceAccountName: pod-identity-webhook-amazon-eks-pod-identity-webhook
      volumes:
      - name: cert
        secret:
          secretName: pod-identity-webhook-amazon-eks-pod-identity-webhook-cert
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  namespace: default
spec:
  commonName: pod-identity-webhook-amazon-eks-pod-identity-webhook.default.svc
  dnsNames:
  - pod-identity-webhook-amazon-eks-pod-identity-webhook
  - pod-identity-webhook-amazon-eks-pod-identity-webhook.default
  - pod-identity-webhook-amazon-eks-pod-identity-webhook.default.svc
  - pod-identity-webhook-amazon-eks-pod-identity-webhook.default.svc.local
  duration: 2160h0m0s
  issuerRef:
    kind: Issuer
    name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  renewBefore: 360h0m0s
  secretName: pod-identity-webhook-amazon-eks-pod-identity-webhook-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  labels:
    app.kubernetes.io/instance: pod-identity-webhook
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: amazon-eks-pod-identity-webhook
    app.kubernetes.io/version: v0.4.0
    helm.sh/chart: amazon-eks-pod-identity-webhook-1.2.0
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
  namespace: default
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: default/pod-identity-webhook-amazon-eks-pod-identity-webhook
  name: pod-identity-webhook-amazon-eks-pod-identity-webhook
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: pod-identity-webhook-amazon-eks-pod-identity-webhook
      namespace: default
      path: /mutate
      port: 8443
  failurePolicy: Ignore
  name: pod-identity-webhook.amazonaws.com
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/name
      operator: NotIn
      values:
      - amazon-eks-pod-identity-webhook
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
