spec:
  template:
    spec:
      containers:
        - image: 169.254.32.1:5000/public.ecr.aws/aws-ec2/aws-node-termination-handler@sha256:844478ebd5b852e2575fa8a23afc2a2e3e44ee7b3c1467f37555bdf75cbd723b
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ENABLE_PROBES_SERVER
              value: "false"
            - name: PROBES_SERVER_PORT
              value: "8080"
            - name: PROBES_SERVER_ENDPOINT
              value: /healthz
            - name: LOG_LEVEL
              value: info
            - name: JSON_LOGGING
              value: "false"
            - name: LOG_FORMAT_VERSION
              value: "1"
            - name: ENABLE_PROMETHEUS_SERVER
              value: "false"
            - name: PROMETHEUS_SERVER_PORT
              value: "9092"
            - name: METADATA_TRIES
              value: "3"
            - name: DRY_RUN
              value: "false"
            - name: CORDON_ONLY
              value: "false"
            - name: TAINT_NODE
              value: "false"
            - name: EXCLUDE_FROM_LOAD_BALANCERS
              value: "false"
            - name: DELETE_LOCAL_DATA
              value: "true"
            - name: IGNORE_DAEMON_SETS
              value: "true"
            - name: POD_TERMINATION_GRACE_PERIOD
              value: "-1"
            - name: NODE_TERMINATION_GRACE_PERIOD
              value: "120"
            - name: EMIT_KUBERNETES_EVENTS
              value: "false"
            - name: ENABLE_SPOT_INTERRUPTION_DRAINING
              value: "true"
            - name: ENABLE_SCHEDULED_EVENT_DRAINING
              value: "true"
            - name: ENABLE_REBALANCE_MONITORING
              value: "false"
            - name: ENABLE_REBALANCE_DRAINING
              value: "false"
            - name: ENABLE_SQS_TERMINATION_DRAINING
              value: "false"
            - name: UPTIME_FROM_FILE
              value: /proc/uptime
          imagePullPolicy: IfNotPresent
          name: aws-node-termination-handler
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /proc/uptime
              name: uptime
              readOnly: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: eks.amazonaws.com/compute-type
                    operator: NotIn
                    values:
                      - fargate
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      securityContext:
        fsGroup: 1000
      serviceAccountName: aws-node-termination-handler
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /proc/uptime
          name: uptime
    metadata:
      labels:
        app.kubernetes.io/component: daemonset
        app.kubernetes.io/instance: aws-node-termination-handler
        app.kubernetes.io/name: aws-node-termination-handler
        k8s-app: aws-node-termination-handler
        kubernetes.io/os: linux
  selector:
    matchLabels:
      app.kubernetes.io/component: daemonset
      app.kubernetes.io/instance: aws-node-termination-handler
      app.kubernetes.io/name: aws-node-termination-handler
      kubernetes.io/os: linux
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 25%
    type: RollingUpdate
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: daemonset
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/part-of: aws-node-termination-handler
    app.kubernetes.io/version: 1.19.0
    helm.sh/chart: aws-node-termination-handler-0.21.0
  name: aws-node-termination-handler
  namespace: aws-node-termination-handler
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/part-of: aws-node-termination-handler
    app.kubernetes.io/version: 1.19.0
    helm.sh/chart: aws-node-termination-handler-0.21.0
  name: aws-node-termination-handler
  namespace: aws-node-termination-handler
---
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - get
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - extensions
    resources:
      - daemonsets
    verbs:
      - get
  - apiGroups:
      - apps
    resources:
      - daemonsets
    verbs:
      - get
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/part-of: aws-node-termination-handler
    app.kubernetes.io/version: 1.19.0
    helm.sh/chart: aws-node-termination-handler-0.21.0
  name: aws-node-termination-handler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: aws-node-termination-handler
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aws-node-termination-handler
    app.kubernetes.io/part-of: aws-node-termination-handler
    app.kubernetes.io/version: 1.19.0
    helm.sh/chart: aws-node-termination-handler-0.21.0
  name: aws-node-termination-handler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: aws-node-termination-handler
subjects:
  - kind: ServiceAccount
    name: aws-node-termination-handler
    namespace: aws-node-termination-handler
---
apiVersion: v1
kind: Namespace
metadata:
  name: aws-node-termination-handler
