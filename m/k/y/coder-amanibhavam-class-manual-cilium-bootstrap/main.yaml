apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-envoy
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hubble-relay
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumpodippools
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: clustermesh-apiserver
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/part-of: cilium
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: clustermesh-apiserver
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "false"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "true"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /run/cilium/cgroupv2
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: coder-amanibhavam-class
  cluster-pool-ipv4-cidr: 10.0.0.0/8
  cluster-pool-ipv4-mask-size: "24"
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  disable-cnp-status-updates: "true"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-endpoint-health-checking: "true"
  enable-external-ips: "false"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-host-port: "false"
  enable-hubble: "true"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-node-port: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  external-envoy-proxy: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: cluster-pool
  ipam-cilium-node-update-rate: 15s
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  remove-cilium-node-taints: "true"
  routing-mode: tunnel
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel-protocol: vxlan
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  bootstrap-config.json: |
    {
      "node": {
        "id": "host~127.0.0.1~no-id~localdomain",
        "cluster": "ingress-cluster"
      },
      "staticResources": {
        "listeners": [
          {
            "name": "envoy-prometheus-metrics-listener",
            "address": {
              "socket_address": {
                "address": "0.0.0.0",
                "port_value": 9964
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-prometheus-metrics-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "prometheus_metrics_route",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "prometheus_metrics_route",
                                "match": {
                                  "prefix": "/metrics"
                                },
                                "route": {
                                  "cluster": "envoy-admin",
                                  "prefix_rewrite": "/stats/prometheus"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          },
          {
            "name": "envoy-health-listener",
            "address": {
              "socket_address": {
                "address": "127.0.0.1",
                "port_value": 9878
              }
            },
            "filter_chains": [
              {
                "filters": [
                  {
                    "name": "envoy.filters.network.http_connection_manager",
                    "typed_config": {
                      "@type": "type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager",
                      "stat_prefix": "envoy-health-listener",
                      "route_config": {
                        "virtual_hosts": [
                          {
                            "name": "health",
                            "domains": [
                              "*"
                            ],
                            "routes": [
                              {
                                "name": "health",
                                "match": {
                                  "prefix": "/healthz"
                                },
                                "route": {
                                  "cluster": "envoy-admin",
                                  "prefix_rewrite": "/ready"
                                }
                              }
                            ]
                          }
                        ]
                      },
                      "http_filters": [
                        {
                          "name": "envoy.filters.http.router",
                          "typed_config": {
                            "@type": "type.googleapis.com/envoy.extensions.filters.http.router.v3.Router"
                          }
                        }
                      ],
                      "stream_idle_timeout": "0s"
                    }
                  }
                ]
              }
            ]
          }
        ],
        "clusters": [
          {
            "name": "ingress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "egress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "egress-cluster",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s"
          },
          {
            "name": "ingress-cluster-tls",
            "type": "ORIGINAL_DST",
            "connectTimeout": "2s",
            "lbPolicy": "CLUSTER_PROVIDED",
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "commonHttpProtocolOptions": {
                  "idleTimeout": "60s",
                  "maxConnectionDuration": "0s",
                  "maxRequestsPerConnection": 0
                },
                "upstreamHttpProtocolOptions": {},
                "useDownstreamProtocolConfig": {}
              }
            },
            "cleanupInterval": "2.500s",
            "transportSocket": {
              "name": "cilium.tls_wrapper",
              "typedConfig": {
                "@type": "type.googleapis.com/cilium.UpstreamTlsWrapperContext"
              }
            }
          },
          {
            "name": "xds-grpc-cilium",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "xds-grpc-cilium",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/xds.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            },
            "typedExtensionProtocolOptions": {
              "envoy.extensions.upstreams.http.v3.HttpProtocolOptions": {
                "@type": "type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions",
                "explicitHttpConfig": {
                  "http2ProtocolOptions": {}
                }
              }
            }
          },
          {
            "name": "envoy-admin",
            "type": "STATIC",
            "connectTimeout": "2s",
            "loadAssignment": {
              "clusterName": "envoy-admin",
              "endpoints": [
                {
                  "lbEndpoints": [
                    {
                      "endpoint": {
                        "address": {
                          "pipe": {
                            "path": "/var/run/cilium/envoy/sockets/admin.sock"
                          }
                        }
                      }
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "dynamicResources": {
        "ldsConfig": {
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        },
        "cdsConfig": {
          "apiConfigSource": {
            "apiType": "GRPC",
            "transportApiVersion": "V3",
            "grpcServices": [
              {
                "envoyGrpc": {
                  "clusterName": "xds-grpc-cilium"
                }
              }
            ],
            "setNodeOnFirstMessageOnly": true
          },
          "resourceApiVersion": "V3"
        }
      },
      "layeredRuntime": {
        "layers": [
          {
            "name": "static_layer_0",
            "staticLayer": {
              "overload": {
                "global_downstream_max_connections": 50000
              }
            }
          }
        ]
      },
      "admin": {
        "address": {
          "pipe": {
            "path": "/var/run/cilium/envoy/sockets/admin.sock"
          }
        }
      }
    }
kind: ConfigMap
metadata:
  name: cilium-envoy-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: coder-amanibhavam-class\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtpOTcyUEpOSUxqeTNleStOMXNiQjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE1EQTJOVFV3TjFvWERUSTJNVEF3T1RBMgpOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2RmgyQ3FEdjNFMHJaUVY4MmRvK1NDNUxVQ2RZYVc3Mlk1Z1hFSERHaFBGZmp2dzUKTnlrRDJkMktiZElTcnZXczZmM3ZBblJUMjB1MlFrS2RQL2NmcnBZdDQ1WmNIbW1mOU1yVVRyRWN4MVUwQ0tRVApudUNRbXgyRFg4VWVjSjlGOWQvSmcycGFZdkRuL2Z4bmtlOVZSSkZ6KzJPTDRiVlF5TGgrdTVvRFFEaTRlVUZaCnlFaWYyVmVrZWRtNEczUld4cytKeDNTeUY5bFNJcUV3dy91OWhHTjhGTlpnQWQrdDFmYXM0THhsNHdOck9HdXcKL2cxRlVoWk85R2ZUVUpNNjJNS1YvU3FsenlwcnRYRCt2WU1qVStjd1pJa1lZdnUyZ1FEdkcxWWFoTWVzYzQwQgppNXl5TDhCbzBPRHJIajV6YVVHeHJSOUhodjcxSU9mWEM1UytKUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWNER2tKRllDaFVIcExWS1FqdXY0WnBYM1FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU9WdC90dTExMTRFSVZDNUJJYm9TL2JkTW9CWUZCay9FS1BXQWNlMURqRXJLNFIrWjhvWWl6CmhzamdxN2hpb3hoWHREb1JSMUh6eFZIZGw4VG11b2FLOCtlRG9JczJMQ0JGYkFGYXlEeUc3Ri9MWWVBdkdwVGsKdDhnY25XNGZ0Yjh2eUM3VFI5YzhZek5qMVNDMlFOM2x0Q2N2dGJabjlTVFZDajNtTmFVMWtjK2FIY1RGU29IYQplVHVFR01UcUFhSUJYWDRXc1dNT21JOE8xbjJFejg5TTRnc25LUG9hb3RYdVZ3ZFh4aXl6dlJkMkFwNzFvTUlPCnFuK2kzeTJoakxwL2ZRdi9yMUtjdWJuMVptZVRVY0w4ZVRnWEh0NVEvK3J6RWVjRHFzRGlPbnR5eEQ3cVF4TGMKSnc1U0FJRFpxS0ZJV01HOHYyOVVWZzlOcTV4ZFJzTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdkZoMkNxRHYzRTByWlFWODJkbytTQzVMVUNkWWFXNzJZNWdYRUhER2hQRmZqdnc1Ck55a0QyZDJLYmRJU3J2V3M2ZjN2QW5SVDIwdTJRa0tkUC9jZnJwWXQ0NVpjSG1tZjlNclVUckVjeDFVMENLUVQKbnVDUW14MkRYOFVlY0o5RjlkL0pnMnBhWXZEbi9meG5rZTlWUkpGeisyT0w0YlZReUxoK3U1b0RRRGk0ZVVGWgp5RWlmMlZla2VkbTRHM1JXeHMrSngzU3lGOWxTSXFFd3cvdTloR044Rk5aZ0FkK3QxZmFzNEx4bDR3TnJPR3V3Ci9nMUZVaFpPOUdmVFVKTTYyTUtWL1NxbHp5cHJ0WEQrdllNalUrY3daSWtZWXZ1MmdRRHZHMVlhaE1lc2M0MEIKaTV5eUw4Qm8wT0RySGo1emFVR3hyUjlIaHY3MUlPZlhDNVMrSlFJREFRQUJBb0lCQURQWGlZNDlaQ2hZV1dSeQpFVDZKc3ZEOVJSK241TThJaXVzNDlzaEFzblB2V0dVc0NiZWtJM281WDV3QTRjR2t2OWFjWGNob0twakhDMERMCnd5clRJN1pUZ2dnTjRBZEMvWk5NclFtSCtLcnBTZXhDOVYrYTRsSy8yZVJuaG94cldyOWx2THJlY0VpaGxNbTEKU3ZEQlZ0QUwxVWZSeTdQeHkyMmtVc1hpaTVpR1MyYnE3OG9CQWl6eC9XbEdVd0hJVlg4ZWtrQkpmZDlTcGQzUQpVOVJWVGZHM29GeTBTQWtDMjUzWEFIOEpZZmpYM1ZENm40TFRFNElDQUtSSFpwdndKZVMwaWpKOU9RZlRjNFNjCmhTOEREVVA0Ymx4Vi9zR2h1UDlaVFRYMkoweVhwUllOMm5YUTZKTy9BTHVDY3JBSGhkMlBIV2JlTkV3NlBENE8KeUZyYkVzRUNnWUVBMjNJREltM3JPTStYeWhmSVdWcmw5elNrSnQ0YU4zNjlqakhiYm9MN3VseGl5ZFZWYVBjVgpIQU4xMGRvNDVPYjV2cjJST0N2bDlMTzNueGJMVW5VM3ZNSXplZnh4ZDdpOGZNbUZQNk1WWWp6ZkhoTkZKVk5KCkJ1azZYT245NmNsMytibTNNR0dCSnZhL0FpYTg3VzJIUmFuMmNIQUZlZFJ2UmdCazlqSjNFVlVDZ1lFQTI3ZzcKK21iRlpTTVgwaW1XN0E0Zk5TSE02SkdnR1pvYjBjanJpcVJ3RkJZZEJYWlErUi9JTU5QdGl4V1dOVVVSeGxwcApuVWxoeXhOZkQ1anNpM3RCbE0rTmpMbXN4UEU2QzF4Q2txWGlqM0tuN3c0UVVjOFQwVStRc1RuTUpTdFRUcTRvCkVFTzBLdVZXcUJnZk9FZTF0KzJ2cVBxRkhmajR4NHZla0VZb09aRUNnWUIxNnYza01reURhb21WL3RHWnNrNkEKVjdrZGFadU0xbjNsT3NVK3pRT1hVSzJFNXkzT0NYYytabDJaTmpuOFJtRk5MWEFyVHV0eVlsLzVETGFVeUlmNgoxaC96SE1PY0laaW5OV0owbjUyTi9FZW9VWktHVEFxaHZCR3dlOHdGSkUxajAzZXNkN2greDNnOEg3VEZvR1ZmCitjU0RCcTdxbUV4eXdTTi9aLzZ6UVFLQmdDLzFnZG9CVHJycHN3eGptWmJDNmxydG1zMTA0KzVTcmhuWGNscGIKMUQ3K0tLMkZpdDBsNjh1RXBzZ0NHVHhkYkNqUW1WY0VxbnpxS0lpK0IzdldscFVGek03WHhIZGtkQmdBdG1OTwpKQ3JOaXd4cUZIUFc4R3R5bzVHYm5Rekw3UzR5WTNwUlhPVTBFL3N5OExXWEtYb1JQcE55dzFXc2Y1a0cxYmpHCko0ZVJBb0dBTnJxdlgwK2xuaVpPVmk5TWFJaWJzUEx0QVExVjRuRVlabDl1dXdldmZ2SnZORmFRMlJCS2V3ZHIKVnFycXplTk40MnF4S0hJcW04eEpzMjBHenBjUk16Z0ZDZmtNelZYd0pLME12YVg2dHFsM2Rqd1l5S21QSnY4MwpPL2ZaTEtWSVhtTlRCUTF2eXJnRnZRTlJxaElva2NpZytWN0JFQzFCek9SNnAzcVVLYmM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtpOTcyUEpOSUxqeTNleStOMXNiQjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE1EQTJOVFV3TjFvWERUSTJNVEF3T1RBMgpOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2RmgyQ3FEdjNFMHJaUVY4MmRvK1NDNUxVQ2RZYVc3Mlk1Z1hFSERHaFBGZmp2dzUKTnlrRDJkMktiZElTcnZXczZmM3ZBblJUMjB1MlFrS2RQL2NmcnBZdDQ1WmNIbW1mOU1yVVRyRWN4MVUwQ0tRVApudUNRbXgyRFg4VWVjSjlGOWQvSmcycGFZdkRuL2Z4bmtlOVZSSkZ6KzJPTDRiVlF5TGgrdTVvRFFEaTRlVUZaCnlFaWYyVmVrZWRtNEczUld4cytKeDNTeUY5bFNJcUV3dy91OWhHTjhGTlpnQWQrdDFmYXM0THhsNHdOck9HdXcKL2cxRlVoWk85R2ZUVUpNNjJNS1YvU3FsenlwcnRYRCt2WU1qVStjd1pJa1lZdnUyZ1FEdkcxWWFoTWVzYzQwQgppNXl5TDhCbzBPRHJIajV6YVVHeHJSOUhodjcxSU9mWEM1UytKUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWNER2tKRllDaFVIcExWS1FqdXY0WnBYM1FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU9WdC90dTExMTRFSVZDNUJJYm9TL2JkTW9CWUZCay9FS1BXQWNlMURqRXJLNFIrWjhvWWl6CmhzamdxN2hpb3hoWHREb1JSMUh6eFZIZGw4VG11b2FLOCtlRG9JczJMQ0JGYkFGYXlEeUc3Ri9MWWVBdkdwVGsKdDhnY25XNGZ0Yjh2eUM3VFI5YzhZek5qMVNDMlFOM2x0Q2N2dGJabjlTVFZDajNtTmFVMWtjK2FIY1RGU29IYQplVHVFR01UcUFhSUJYWDRXc1dNT21JOE8xbjJFejg5TTRnc25LUG9hb3RYdVZ3ZFh4aXl6dlJkMkFwNzFvTUlPCnFuK2kzeTJoakxwL2ZRdi9yMUtjdWJuMVptZVRVY0w4ZVRnWEh0NVEvK3J6RWVjRHFzRGlPbnR5eEQ3cVF4TGMKSnc1U0FJRFpxS0ZJV01HOHYyOVVWZzlOcTV4ZFJzTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lRVU5RdnpRRVBOa2l4NjBuUHlvZVE3ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURFd01EWTFOVEE0V2hjTk1qWXhNREE1TURZMQpOVEE0V2pBb01TWXdKQVlEVlFRREV4MWhaRzFwYmkxamIyUmxjaTFoYldGdWFXSm9ZWFpoYlMxamJHRnpjekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGNpS2ZINnNnRVc0bnJuMEhkRUhXTEEKUUVoaHpLOUFiUnBuellxdHBiL1FsSVZGMlk2QVJFRi9lVWRxS25SejZPbVpLZklDazhuM1ZsM0FxZ0NQa09MaApxcnRZZTBxZ21FeE1VVFpST1VsaDhTdWNCWGVXREhBbnRIaGZQcSs5L0s4Q1l5YjhMaXJrYThQcGcrc0lpejc0CnFHeXY0WmZIOXl3R2xMOFFxeW05bVFaa2RhRzB2NG1rWGJkeHR1NTBKZzZYVlV5T1pkcU4wNlRoeHUzYUFaOEsKaWk2ZlNGekNSd1lvQ3NSTU15R01Idm5VMHFYWWc0Q1lkTEFRVENUUk92SkorcmUvN012QURiNTdNTmc1a21vZwpTcmpaUlVSTTNnZjRhN2tMaUljK2NjYXlZc0p3cUxCb3FBVEEycVQwME5pVlZvQkpLdTVZS203SjJQbXBOb1VDCkF3RUFBYU4yTUhRd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGTWNER2tKRllDaFVIcExWS1FqdQp2NFpwWDNRU01CUUdBMVVkRVFRTk1BdUNDV3h2WTJGc2FHOXpkREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCk5KWGo5YVF6OXlqTkpCeHpPbTNaVmZHa3o1L1pzbms3YU1OWFlXVlBaMmttaDdud08vRFhYeEFPdkhjTG95akwKaVF2YUljcDJBWkFpZFZSNXRIcTZNVGszQVF2dXkxVDZrb3lCNXVkanpQWDZlL2QzY0NTN2txamh0TnFCMFdGRQoxcFJISUZtTFc2bXJkTEQ5T0xUa1djMjR2clQyQzJ1YzgwOWYzbVFmaFZPcUl4aWJrcmVKSnBDVmpUcTZLd1I0CitKY1YrQ3dqYm9IRDNxaVQydHRia2lsODdFL0U3cXRiYkZVSUZMVjRsMlUwWnFvZHR1cTIyS21obDhqQTE1TlkKcWdFbUhCQVZYUHBLdFZrMEtZNzJOYkVoN0J2ajlxb0EzNjBmMHVhb1VPbUllMlpFTmhLRE5VOWFIb2syL1ZkSApkcGtCYmJwOGN1UTZ6ekVtNC96b1ZBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdHlJcDhmcXlBUmJpZXVmUWQwUWRZc0JBU0dITXIwQnRHbWZOaXEybHY5Q1VoVVhaCmpvQkVRWDk1UjJvcWRIUG82WmtwOGdLVHlmZFdYY0NxQUkrUTR1R3F1MWg3U3FDWVRFeFJObEU1U1dIeEs1d0YKZDVZTWNDZTBlRjgrcjczOHJ3SmpKdnd1S3VScncrbUQ2d2lMUHZpb2JLL2hsOGYzTEFhVXZ4Q3JLYjJaQm1SMQpvYlMvaWFSZHQzRzI3blFtRHBkVlRJNWwybzNUcE9IRzdkb0Jud3FLTHA5SVhNSkhCaWdLeEV3eklZd2UrZFRTCnBkaURnSmgwc0JCTUpORTY4a242dDcvc3k4QU52bnN3MkRtU2FpQkt1TmxGUkV6ZUIvaHJ1UXVJaHo1eHhySmkKd25Db3NHaW9CTURhcFBUUTJKVldnRWtxN2xncWJzblkrYWsyaFFJREFRQUJBb0lCQVFDTHAwRG5aKzhBaDZ3VQpYOTBJWm1nbVcwZHFLektFM3BPVTFGM1pDRXppdHJQYjRnVmk5d3VXQ3hpNFRneXNHNHdkUDVET0hnc0h0RmNuClRYb1d6V1NHcitLYjFZREh5eW40M1NYOVR2bHByWWZWWXJpRWxtZEx5K3VDODljQSs5Zkt1ZjVVeDNDSmd3RnYKT0E5Q1Y1U2dZODFFZk9lQzhKbmI5L1RNczNCamRna1VBekdRRW0yNERWdXZQd0djdndubmRsbGJSQXIrRG4zWAo1MC9hc2kvcFVwcEtUSzBadGhTS09iSWh3WTZTeXlmTzhQeENzUzhvNGhPcVA3WWZqdHBPM0VzRGg5a1JEMHlCCnNTUDhlTlBWYlpBeWw0UER6SXJDMkxCbTNXeGtZZGxlUEtkY1NKbTNiOHpEdUZhNTd3eGY1bFcyRml0L09jcFQKSzUxWFV0ZHRBb0dCQU5sTkU0allDSjlrelJlUmZaWlNvdFpTV1ZTQkZac1IxaVhFazFPa3ZSRVlpTDJhQjJWTwptTENRRTBpYXpyRHFBLzFKVXMvK28zbUY5am8rdHkyNkwybGQ0RGp5QUJoYVlFZ2d1RnRVa0FkdmlON0JtVHd2CkNqcWt0a2thTnhaU3EwblN0NzNGZmE2dldWbkRTQ1lrRUJkaFpycFRWeEc4dTNLNlNVR0lyc3FMQW9HQkFOZS8KVys0Uko2YjZLOW5BUURYZ3dZNlFScFYvc0kyQ2llcWxVNnZYYkJFTXZhazJDT2VRN2g3N0VRVzlMMHlBaVhjbgp6ditUaGxvZU1tOW9BTVdKZ29HaTk3L1JEaG45VkpPaDRabStWdjZhd1ZyeTFMMmpya1F0THplVUNiZWhNWExLClRHRDlOemR6cE8yK0ppMHduMFlrSHBMdXhCb090UHdJUzB2RGtmVXZBb0dCQUtER1owS2pYRlhhZGVnUExGVlIKVk11djZBb2U2OFpzL3YyNG9LeU5RWm5waGhxS1lSaHllNFIvUk5VK1BOa21lOGNtUGhCSVBkbUc1VFFZL056bgpXWGJqRHlmeTNXRW5WUDlvdmg1TXhiZktyUURyU3AzOXk5cXh6WER1NVgwdHN6QU9xUVhPbmZ2bUh2ek1BSkMvCnMrd29rNkllVVZoOVJFOVJSeXdtbmZTYkFvR0JBSkhKT0JpVnRRS3JHQWlMVlpoU3FOaHArNWczOFppZDlnMzkKNjUwNTgwZE9JYmIrMFdPUTFxZE9wa0VIaHJlZVA4V3B1OEdOOFlKaDExamFvWExhS2JycDRablhiVHo0cHpjZgpjMi9OWThHbDF6UmExSkRVMHdRMHVDeEpONHZETzhQQ21Yd01mMHhVTThXRzhRc21TT28vcS8xRHBIV3JMSGNHCkw4TWhnelozQW9HQUp0c213Vjk5WEJWUEpBMVMyOWp4Y0xuL3YySnZNQTdqUmxSeWpzZ2kwR3Q3U1p2aGFYSGcKWG5pbGUzU2dpNzVxbTV6Z2ZxUGJZcVp1ZzloWG9KZk5IUzhsZGk3dWVJRFo5RU0ycURTWXJBWnJqV2tUeGxkQwpLamhCNldCR1dpVXpaNENKczQ2NEtCZlA2M3dFWG9kd3JyNEErcmFrcytNUjN4aW9qa2Q1MGhNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtpOTcyUEpOSUxqeTNleStOMXNiQjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE1EQTJOVFV3TjFvWERUSTJNVEF3T1RBMgpOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2RmgyQ3FEdjNFMHJaUVY4MmRvK1NDNUxVQ2RZYVc3Mlk1Z1hFSERHaFBGZmp2dzUKTnlrRDJkMktiZElTcnZXczZmM3ZBblJUMjB1MlFrS2RQL2NmcnBZdDQ1WmNIbW1mOU1yVVRyRWN4MVUwQ0tRVApudUNRbXgyRFg4VWVjSjlGOWQvSmcycGFZdkRuL2Z4bmtlOVZSSkZ6KzJPTDRiVlF5TGgrdTVvRFFEaTRlVUZaCnlFaWYyVmVrZWRtNEczUld4cytKeDNTeUY5bFNJcUV3dy91OWhHTjhGTlpnQWQrdDFmYXM0THhsNHdOck9HdXcKL2cxRlVoWk85R2ZUVUpNNjJNS1YvU3FsenlwcnRYRCt2WU1qVStjd1pJa1lZdnUyZ1FEdkcxWWFoTWVzYzQwQgppNXl5TDhCbzBPRHJIajV6YVVHeHJSOUhodjcxSU9mWEM1UytKUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWNER2tKRllDaFVIcExWS1FqdXY0WnBYM1FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU9WdC90dTExMTRFSVZDNUJJYm9TL2JkTW9CWUZCay9FS1BXQWNlMURqRXJLNFIrWjhvWWl6CmhzamdxN2hpb3hoWHREb1JSMUh6eFZIZGw4VG11b2FLOCtlRG9JczJMQ0JGYkFGYXlEeUc3Ri9MWWVBdkdwVGsKdDhnY25XNGZ0Yjh2eUM3VFI5YzhZek5qMVNDMlFOM2x0Q2N2dGJabjlTVFZDajNtTmFVMWtjK2FIY1RGU29IYQplVHVFR01UcUFhSUJYWDRXc1dNT21JOE8xbjJFejg5TTRnc25LUG9hb3RYdVZ3ZFh4aXl6dlJkMkFwNzFvTUlPCnFuK2kzeTJoakxwL2ZRdi9yMUtjdWJuMVptZVRVY0w4ZVRnWEh0NVEvK3J6RWVjRHFzRGlPbnR5eEQ3cVF4TGMKSnc1U0FJRFpxS0ZJV01HOHYyOVVWZzlOcTV4ZFJzTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdkZoMkNxRHYzRTByWlFWODJkbytTQzVMVUNkWWFXNzJZNWdYRUhER2hQRmZqdnc1Ck55a0QyZDJLYmRJU3J2V3M2ZjN2QW5SVDIwdTJRa0tkUC9jZnJwWXQ0NVpjSG1tZjlNclVUckVjeDFVMENLUVQKbnVDUW14MkRYOFVlY0o5RjlkL0pnMnBhWXZEbi9meG5rZTlWUkpGeisyT0w0YlZReUxoK3U1b0RRRGk0ZVVGWgp5RWlmMlZla2VkbTRHM1JXeHMrSngzU3lGOWxTSXFFd3cvdTloR044Rk5aZ0FkK3QxZmFzNEx4bDR3TnJPR3V3Ci9nMUZVaFpPOUdmVFVKTTYyTUtWL1NxbHp5cHJ0WEQrdllNalUrY3daSWtZWXZ1MmdRRHZHMVlhaE1lc2M0MEIKaTV5eUw4Qm8wT0RySGo1emFVR3hyUjlIaHY3MUlPZlhDNVMrSlFJREFRQUJBb0lCQURQWGlZNDlaQ2hZV1dSeQpFVDZKc3ZEOVJSK241TThJaXVzNDlzaEFzblB2V0dVc0NiZWtJM281WDV3QTRjR2t2OWFjWGNob0twakhDMERMCnd5clRJN1pUZ2dnTjRBZEMvWk5NclFtSCtLcnBTZXhDOVYrYTRsSy8yZVJuaG94cldyOWx2THJlY0VpaGxNbTEKU3ZEQlZ0QUwxVWZSeTdQeHkyMmtVc1hpaTVpR1MyYnE3OG9CQWl6eC9XbEdVd0hJVlg4ZWtrQkpmZDlTcGQzUQpVOVJWVGZHM29GeTBTQWtDMjUzWEFIOEpZZmpYM1ZENm40TFRFNElDQUtSSFpwdndKZVMwaWpKOU9RZlRjNFNjCmhTOEREVVA0Ymx4Vi9zR2h1UDlaVFRYMkoweVhwUllOMm5YUTZKTy9BTHVDY3JBSGhkMlBIV2JlTkV3NlBENE8KeUZyYkVzRUNnWUVBMjNJREltM3JPTStYeWhmSVdWcmw5elNrSnQ0YU4zNjlqakhiYm9MN3VseGl5ZFZWYVBjVgpIQU4xMGRvNDVPYjV2cjJST0N2bDlMTzNueGJMVW5VM3ZNSXplZnh4ZDdpOGZNbUZQNk1WWWp6ZkhoTkZKVk5KCkJ1azZYT245NmNsMytibTNNR0dCSnZhL0FpYTg3VzJIUmFuMmNIQUZlZFJ2UmdCazlqSjNFVlVDZ1lFQTI3ZzcKK21iRlpTTVgwaW1XN0E0Zk5TSE02SkdnR1pvYjBjanJpcVJ3RkJZZEJYWlErUi9JTU5QdGl4V1dOVVVSeGxwcApuVWxoeXhOZkQ1anNpM3RCbE0rTmpMbXN4UEU2QzF4Q2txWGlqM0tuN3c0UVVjOFQwVStRc1RuTUpTdFRUcTRvCkVFTzBLdVZXcUJnZk9FZTF0KzJ2cVBxRkhmajR4NHZla0VZb09aRUNnWUIxNnYza01reURhb21WL3RHWnNrNkEKVjdrZGFadU0xbjNsT3NVK3pRT1hVSzJFNXkzT0NYYytabDJaTmpuOFJtRk5MWEFyVHV0eVlsLzVETGFVeUlmNgoxaC96SE1PY0laaW5OV0owbjUyTi9FZW9VWktHVEFxaHZCR3dlOHdGSkUxajAzZXNkN2greDNnOEg3VEZvR1ZmCitjU0RCcTdxbUV4eXdTTi9aLzZ6UVFLQmdDLzFnZG9CVHJycHN3eGptWmJDNmxydG1zMTA0KzVTcmhuWGNscGIKMUQ3K0tLMkZpdDBsNjh1RXBzZ0NHVHhkYkNqUW1WY0VxbnpxS0lpK0IzdldscFVGek03WHhIZGtkQmdBdG1OTwpKQ3JOaXd4cUZIUFc4R3R5bzVHYm5Rekw3UzR5WTNwUlhPVTBFL3N5OExXWEtYb1JQcE55dzFXc2Y1a0cxYmpHCko0ZVJBb0dBTnJxdlgwK2xuaVpPVmk5TWFJaWJzUEx0QVExVjRuRVlabDl1dXdldmZ2SnZORmFRMlJCS2V3ZHIKVnFycXplTk40MnF4S0hJcW04eEpzMjBHenBjUk16Z0ZDZmtNelZYd0pLME12YVg2dHFsM2Rqd1l5S21QSnY4MwpPL2ZaTEtWSVhtTlRCUTF2eXJnRnZRTlJxaElva2NpZytWN0JFQzFCek9SNnAzcVVLYmM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtpOTcyUEpOSUxqeTNleStOMXNiQjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE1EQTJOVFV3TjFvWERUSTJNVEF3T1RBMgpOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2RmgyQ3FEdjNFMHJaUVY4MmRvK1NDNUxVQ2RZYVc3Mlk1Z1hFSERHaFBGZmp2dzUKTnlrRDJkMktiZElTcnZXczZmM3ZBblJUMjB1MlFrS2RQL2NmcnBZdDQ1WmNIbW1mOU1yVVRyRWN4MVUwQ0tRVApudUNRbXgyRFg4VWVjSjlGOWQvSmcycGFZdkRuL2Z4bmtlOVZSSkZ6KzJPTDRiVlF5TGgrdTVvRFFEaTRlVUZaCnlFaWYyVmVrZWRtNEczUld4cytKeDNTeUY5bFNJcUV3dy91OWhHTjhGTlpnQWQrdDFmYXM0THhsNHdOck9HdXcKL2cxRlVoWk85R2ZUVUpNNjJNS1YvU3FsenlwcnRYRCt2WU1qVStjd1pJa1lZdnUyZ1FEdkcxWWFoTWVzYzQwQgppNXl5TDhCbzBPRHJIajV6YVVHeHJSOUhodjcxSU9mWEM1UytKUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWNER2tKRllDaFVIcExWS1FqdXY0WnBYM1FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU9WdC90dTExMTRFSVZDNUJJYm9TL2JkTW9CWUZCay9FS1BXQWNlMURqRXJLNFIrWjhvWWl6CmhzamdxN2hpb3hoWHREb1JSMUh6eFZIZGw4VG11b2FLOCtlRG9JczJMQ0JGYkFGYXlEeUc3Ri9MWWVBdkdwVGsKdDhnY25XNGZ0Yjh2eUM3VFI5YzhZek5qMVNDMlFOM2x0Q2N2dGJabjlTVFZDajNtTmFVMWtjK2FIY1RGU29IYQplVHVFR01UcUFhSUJYWDRXc1dNT21JOE8xbjJFejg5TTRnc25LUG9hb3RYdVZ3ZFh4aXl6dlJkMkFwNzFvTUlPCnFuK2kzeTJoakxwL2ZRdi9yMUtjdWJuMVptZVRVY0w4ZVRnWEh0NVEvK3J6RWVjRHFzRGlPbnR5eEQ3cVF4TGMKSnc1U0FJRFpxS0ZJV01HOHYyOVVWZzlOcTV4ZFJzTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRWHQ2UzRGNGt2bVZQbGZ3TGptRXNDVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURFd01EWTFOVEEzV2hjTk1qWXhNREE1TURZMQpOVEEzV2pBUk1ROHdEUVlEVlFRREV3WnlaVzF2ZEdVd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEeXRuczRHQk50R2JJc2hDc3grOWlLa1dqaVIyK1ViVmFiYys2R0xJMGRscUEwaGpTSUdtM1MKVkkyclJmbm9BaEQrRkd3MzBSY1dvVU9OMnBPT0J5SDhCdDQwRnNBTDlPUytVMUNwMXhrZjlOdUpDT1NERWhwUQpGZHFLaG9mTFI2VytiaHVNdE5OSU9HTXFnZU1MRjV4bmw4OXdRaVdYNE92L1VwNXU0QTh5dUtMcFJrMW5vUndnCmxRc3F4MHZmb0M5NnpkVzI1UTgybTV1ak9CdDgwaXUxSEtqM2pjUHVFcmtKZjVQUVJySStIRzRaYkxXYWFnU2wKM1BLbm1tR0ZxbDM2SVZvUVIyMFVodGh1SUZDODE3R0wrdkJJUlNEbzIrSXZEY0VGU1orM09DSEJIUnAwY21qeQpMRm1zKzRxQVE3RjNoWEtrZXMrRnVwVHArVDNzczN2ekFnTUJBQUdqWURCZU1BNEdBMVVkRHdFQi93UUVBd0lGCm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWYKQmdOVkhTTUVHREFXZ0JUSEF4cENSV0FvVkI2UzFTa0k3citHYVY5MEVqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBUmdRTUFpWUxYWno5SURjM25Vamd6WmJYaXl5WWtFL1NoM1V3UGhQOERmUDA1cHNTKzlxMU5kZi96SjQyCnpBaExTNDJGbEpmbExGQm4wcmhBUkx3VWZRM2FVaWNHQ2xEdklQZ2d2RHBZTjdZOFNFY2c3VWgxdGZRU1VJSVYKd0NmRXoxSnFkdkxFUVY2dnpIaUo4a0xNc3U2T2JnNURVVXZoa3JNZUZIWnFPYUdOcTU0bDlmWVJVaUhGOTVBZgp3L1o1SUFUVEI4b21VSmlXK3V1WGZWRFdNVC9KejlGdllrRTZRODZvNlJhZTdtTkNxVkFLV2JnUTJHdWovZDcxCnRpclB6RXpkZTlIcW5meFdwWG5yWW5VK3oxREtMMGhxWWgrTWdwWTVrUmFEN3FkNy92WXVEWndOYnpFQ2tiWFgKK1ZScGhnYnZ1cC95SzJWUVF4dG1BZmRPRUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOHJaN09CZ1RiUm15TElRck1mdllpcEZvNGtkdmxHMVdtM1B1aGl5TkhaYWdOSVkwCmlCcHQwbFNOcTBYNTZBSVEvaFJzTjlFWEZxRkRqZHFUamdjaC9BYmVOQmJBQy9Ua3ZsTlFxZGNaSC9UYmlRamsKZ3hJYVVCWGFpb2FIeTBlbHZtNGJqTFRUU0RoaktvSGpDeGVjWjVmUGNFSWxsK0RyLzFLZWJ1QVBNcmlpNlVaTgpaNkVjSUpVTEtzZEwzNkF2ZXMzVnR1VVBOcHVib3pnYmZOSXJ0UnlvOTQzRDdoSzVDWCtUMEVheVBoeHVHV3kxCm1tb0VwZHp5cDVwaGhhcGQraUZhRUVkdEZJYlliaUJRdk5leGkvcndTRVVnNk52aUx3M0JCVW1mdHpnaHdSMGEKZEhKbzhpeFpyUHVLZ0VPeGQ0VnlwSHJQaGJxVTZmazk3TE43OHdJREFRQUJBb0lCQVFDZjdRdXQvM2MxYVR3VQp4eFhyUG9ZRmNDRExFTVQ5NlRtcS9xM0piU3VpdG5Camk1YXJvN1ovWThWaGVKOWRkNWNZdy80Mm5TaDRlZFFZCmNWRE93ZlpycVY3YXRhN2ZjZ01UUWJTaDVLQ2loT1h2R3BQdnBZci9BQmRiTlovZW14d2tLVXN2NEtwaktQeDIKc3RVV3B2MGc2VS8vS1NhNk43TnBMbGhFdUpCckd5T0ZuRkdwU2F2ZDVGYTVtMEZ1b2w0M0czazRsdzNyajlwVgpFMFpNQlN4c1ZFK0dxcWJVb3BlcW9IUmFTRDhoN0UxeW4wUGFUNlhrRVVTeEg2M1hvMU45MDhpUkRpeTJtUk5sCk1qRjFkeWRPN3hBOWV5ZVVqSUVDZ0RTNjBzMWxOZkhyTnZ6VkVRd0lPelQ1a3BVMEkvQ2c0Um9jeWpHUGNnUTMKenR2Um9nMFpBb0dCQVBwcnFhNkg4V01XanlxK25iR1pFNzFCaXdYczhzZ3JubHVhaW1JL1JveGtZYVFGYldQaQp5YUNBcWpXeS9lS2ZWcDFFOUFvWTNCS2VjWHpsemExcDdvd1pkSkFWbGpJcU05K1VSdWlhYnV3Vkt3aUFzcWdtCmFPeG1Cd2RyUTNDd0IvZzNuRVp4bzJTZzF6d0NzNUdUR2F2QW1LYUFKSFZHdGhEZzNtSFhBUE0vQW9HQkFQZ2UKMnY4Q1BZSVFKVWZwbGpoUHowdEx3TWtFdGlyNWtza0FOWjdzVWMwbjFVTzdiT1RwbGpoL2xheXU1QWk1NHRDSQp0RGp3WmVralpuTzRwL0xUMHFrZ09Xa3ZBVG81R3lKRG9TM2xzRHRlNkQxbmRIZnJaU0hRZlJsZlhHS2RueUh2CnAxTjAwOXdUTlhhejl2QzVMYXRwRTZJdEt5bS96TG9YS1EzZUN5NU5Bb0dBSStBNnZmdFIxTDFObzNVTmlIMEMKdS9GZzVtZHMzTXFLOUZxdWlxYkFCNnIxNWhhMDlrTnVXV1UxZlYzNFMzaENZMk9XaHIvSy80dmRmR1E3MUNWQgovS1pFOGNOMThoZmp1SnM0a1doV2pkSDJpVkJPeUJKQW8rVjJDbFVPbzExRXR3WFlpS3NOR29TRWNWOTl0RlJiCnNDUjJlaHdQblJHVlVkTzFhRlR5R09jQ2dZRUF5SjFDR2wrNFZib3lPb1BPTnZlb3RzdW9NNkJBbmx5dVp5QnAKT25iKzZPN2xDMSsyZXh1Mm56WGhVZjhTVjAvYzZSa3ZCcjZ3MTZFTXpGSW9VVGtkb2l0dzMrL21nU245RzJZdApJd3dNd3VSSXlLVW1VWE9ka0lxZksyMmtLQVFqejIrVERmSnUvZ2oxK0dVb0s1aStLVkxMVWh4TlF2TldWN3cwCk1JY3c2UjBDZ1lBQkVzazRxNnRrNkwzY2Qwd2ovWG5zbGhnRDhGNm1BdWpFRWlpUDVaMklZL0hXeWI1Z2o1MUYKN0RhVEhvWUVvSlBacTN1UnY3NStaLzdhMWlQOTZ4V3FlNGI3K3BqdFJoejE5Vi9ob0VzZCtyUUpBVC9CUlJvSgpCL205NmFSb1JGVVh4b2ZJcUo3Z01NckJjZmpjYWcwUEdHVFk2VFNjbDQ2SHI2c1dKUXZmdHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUtpOTcyUEpOSUxqeTNleStOMXNiQjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRBeE1EQTJOVFV3TjFvWERUSTJNVEF3T1RBMgpOVFV3TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF2RmgyQ3FEdjNFMHJaUVY4MmRvK1NDNUxVQ2RZYVc3Mlk1Z1hFSERHaFBGZmp2dzUKTnlrRDJkMktiZElTcnZXczZmM3ZBblJUMjB1MlFrS2RQL2NmcnBZdDQ1WmNIbW1mOU1yVVRyRWN4MVUwQ0tRVApudUNRbXgyRFg4VWVjSjlGOWQvSmcycGFZdkRuL2Z4bmtlOVZSSkZ6KzJPTDRiVlF5TGgrdTVvRFFEaTRlVUZaCnlFaWYyVmVrZWRtNEczUld4cytKeDNTeUY5bFNJcUV3dy91OWhHTjhGTlpnQWQrdDFmYXM0THhsNHdOck9HdXcKL2cxRlVoWk85R2ZUVUpNNjJNS1YvU3FsenlwcnRYRCt2WU1qVStjd1pJa1lZdnUyZ1FEdkcxWWFoTWVzYzQwQgppNXl5TDhCbzBPRHJIajV6YVVHeHJSOUhodjcxSU9mWEM1UytKUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTWNER2tKRllDaFVIcExWS1FqdXY0WnBYM1FTTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU9WdC90dTExMTRFSVZDNUJJYm9TL2JkTW9CWUZCay9FS1BXQWNlMURqRXJLNFIrWjhvWWl6CmhzamdxN2hpb3hoWHREb1JSMUh6eFZIZGw4VG11b2FLOCtlRG9JczJMQ0JGYkFGYXlEeUc3Ri9MWWVBdkdwVGsKdDhnY25XNGZ0Yjh2eUM3VFI5YzhZek5qMVNDMlFOM2x0Q2N2dGJabjlTVFZDajNtTmFVMWtjK2FIY1RGU29IYQplVHVFR01UcUFhSUJYWDRXc1dNT21JOE8xbjJFejg5TTRnc25LUG9hb3RYdVZ3ZFh4aXl6dlJkMkFwNzFvTUlPCnFuK2kzeTJoakxwL2ZRdi9yMUtjdWJuMVptZVRVY0w4ZVRnWEh0NVEvK3J6RWVjRHFzRGlPbnR5eEQ3cVF4TGMKSnc1U0FJRFpxS0ZJV01HOHYyOVVWZzlOcTV4ZFJzTW4KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURwekNDQW8rZ0F3SUJBZ0lRTVhKTUJtSSt3TFMyTXVUck9lM01tVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TURFd01EWTFOVEEzV2hjTk1qWXhNREE1TURZMQpOVEEzV2pBcU1TZ3dKZ1lEVlFRREV4OWpiSFZ6ZEdWeWJXVnphQzFoY0dselpYSjJaWEl1WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBc2E2QVNNelFNQXFQMDJqeExPemkKOEN1QU9kc0tpUkhYUDd6cnN5RS9xbE9GcWlEc05pTkFrM29kbk85T1o3dWphdXN6bHJxTk54eEVvK2RWajhrMQpEZnp4eUxTTVpGYnJOcys1cFdBYUt0Q2FuRVB4OFJjcUNMdnhocWx2bGU1M0FnVHc1aEM3NS9meXpEcWR5WlJWCm1udmJ0RE92SHVRQkc2T0x0ZlJzSHNHTy96YUh5MnVtM0tIQWd0SVlCS2V6ZmFXSzhOTVpOcFJFR0did2VHS1oKTDFZK2dGR3h0ZzA0OWtuakoxcExxS0Q5bkRDNUhMUXFCdmMraUZ6Z08yUnVLaGFwWUFteDVHc29BdFlDVVhuRgpjb0pvTkRGL1NFR1VuL1FxQ1BMRnFzT3FKYWhjcElwQzZaVWZ2Y0ZYUU8ycDQyOVUrUUFPcng4ajBIWCtyVG5SCkN3SURBUUFCbzRIZU1JSGJNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUSEF4cENSV0FvVkI2UwoxU2tJN3IrR2FWOTBFakI3QmdOVkhSRUVkREJ5Z2g5amJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXVZMmxzCmFYVnRMbWx2Z2hBcUxtMWxjMmd1WTJsc2FYVnRMbWx2Z2lWamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXUKYTNWaVpTMXplWE4wWlcwdWMzWmpod1IvQUFBQmh4QUFBQUFBQUFBQUFBQUFBQUFBQUFBQk1BMEdDU3FHU0liMwpEUUVCQ3dVQUE0SUJBUUFkYXlDeGF4am14UXhFdFZ4RkxwV3lxbkU2MENOclFuSXZ3ZUFydEMyanhPSGFTNXNjCkRNZzRUVExzYmFPWXFOZkRSckNWYVNoTysxdHpDYnpWR0pyQTF5ZjFmVWhTOG1pa0RpUUtMVUxHdkE0eVhvdXAKalNBb3NSRnJscFNCQ1VBSjN5cFpvZ0I5aHdNeENUZml4K0dJSUdjVkltaUg4UTAydnZzcm1yT2piSEJoSXdscAovd2ZoN243WXVwMERnbmM5OEc5NXhVOXVzazZVRHpQMUVwcllrMEJ0MTMyN0NVTzNmN1NoT1VBZjZQNkdtNnM1CnB1MmZIN1hQMHVZMXhrMmhRamNTdDFJWEc2SlN2c0F3TXVLUS8vVGdUay95VGNXU01mMS9NVW05dWFxbVVyemoKK2l1d2Ewb3IrWUF3UHNZV3FMQ09ZTGU0Q3RqQWgrRmhmUmZHCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc2E2QVNNelFNQXFQMDJqeExPemk4Q3VBT2RzS2lSSFhQN3pyc3lFL3FsT0ZxaURzCk5pTkFrM29kbk85T1o3dWphdXN6bHJxTk54eEVvK2RWajhrMURmenh5TFNNWkZick5zKzVwV0FhS3RDYW5FUHgKOFJjcUNMdnhocWx2bGU1M0FnVHc1aEM3NS9meXpEcWR5WlJWbW52YnRET3ZIdVFCRzZPTHRmUnNIc0dPL3phSAp5MnVtM0tIQWd0SVlCS2V6ZmFXSzhOTVpOcFJFR0did2VHS1pMMVkrZ0ZHeHRnMDQ5a25qSjFwTHFLRDluREM1CkhMUXFCdmMraUZ6Z08yUnVLaGFwWUFteDVHc29BdFlDVVhuRmNvSm9OREYvU0VHVW4vUXFDUExGcXNPcUphaGMKcElwQzZaVWZ2Y0ZYUU8ycDQyOVUrUUFPcng4ajBIWCtyVG5SQ3dJREFRQUJBb0lCQUVkb0c4SW1IWnpSQWRBeQpvb290Z1Y2SC9QWkRZMDZHenZ5Y2poVGxUZExEMGpuM0ZUY0VuOVVsQkhXbmJ0a2RmYVZnZE5Fa2s5QU1Ha0hNCm5JUTJsbzNTazlEWFRueWN1ZGJEVUpaM3NzeDJIVXlqdWIzc1UwWkRVZU9PZ0h1KzVERDVqMTdHWnQzb3Ria0IKN1p1dmMxK3NXelZtZUFCd0hVbmdSaXVQMlV2YVRoMFhjQ3BVSmlSWXZOaVdtVFBOV0lTaVBtdi9zUjNnUXFYUwpuM0xPMkx5dUNjRnNVTDhKalZBdXZpZEFQRFFOQlVaRDFVUWc2cVRLeDE3TkQvS1dZRkR3akw1dDk1UDMrRHBXCjBRNjQ2T2NQUjZIQ0dPZUdVUkt1TUJUTWRxeURqQmNyZDVMMHRKdjJzajBKaXJNdzBQMXlyaGV1Z2ZadFJiTlEKdU9RY1lDRUNnWUVBeGpjR2VpWS9FdWhEZ1h3b2dsa0svQlBVdC81NWwrQSsvM2NHQlZHbEtFc1JMMEp1WldhegpjRkhPUVNDRVhwVjdZMmlMSytyRjRaS0xJbE5JRVZrL0hyamRhRklZdDJEWWFPZ0xkK2U5R2lmc2lWVTRSWHpICndZWHJRbWl3dlpoc1pyNmdHamVGVmZIc2FxeUt3Mm1yWU9GV2JpZnQ1T0Vjdzd1S0VqelF3Y2tDZ1lFQTVYc08KUmtabkx3bndBeG11Qk5kc2R0cktqZUFkTzB6ekpzQThmdS9JQ2p4Y3lvSXlxeFdTeHZrcFNKWFBZVmNZaHF3QgpnV0JLM2NYckwycnh0bCtiRVF3KytQR0lmWjE5bUNVTGpYTTVUTXU0aTBwRFpwdFU0akpTYi9jNXNuTSt2bnlzClBxR0sxRzJiRkFORzhyemlWR0MyaGJaZjR1RklCckZaRGpLVWhqTUNnWUEyZTUxK0tkRWdnMU02M2tQTVFHbHkKaklqbDRqN043a2VpdExhazg2SXdCeUk4R1VoNit0WEx3OUNydWlKb1ZUSkxTc3NtVVN2L0t1YXZrckMyaEErRApoRkRuZ2RsbFhtdGR1cHFjWk1obnpoMklTakpqZHo3NUJMUjcxb2J1TmwxbGlIUTlnSkZYNUYyVm5NT3ZudllLCmRTWHF0WE1BZkpnSmZSMGdrakxYY1FLQmdRQ3FyQmp6djB6aXVUdGVzdXl3QVNCVVRXazBsNmhtQUZjZlRQNHgKVWxpdTlESDNFMXBuejhXNFludUgxcFBFUzZpY0VMV1Y2VzRFL3p4cHFkcFh6MGRmS0lKMVYvNHhucjVZTjhVZAowTUtmRVMwUnU0dmhka2x0YWd2UjVrZHRKelZWS3hoWUJJRmllSnBNQ2h2c1VQcnIwbm90ZkhSWUkwRVVhVFpZCnp0bVQ3UUtCZ1FDdzFlQmdGdjJESEQ3d1V6d2RIQ3NDNTRwT2s5OFpCRnViYktRTGlXS0hSQ0Vha3MrQlovL2UKaWtwMEpPeEJHT3BlQVZ6cklocGlXWGR4SjBTRnNnVWsvMFNkNGUrYlVFdGk1cGtUSFpMa3RFdWc4aElwbVJNNApUaDZyWE10L1NTZXVUUGdhNzRPQ0VIOXlVRGRIQitDbHNLZEpzSHRYSWI5UERzanM3dlRWNGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9964"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    io.cilium/app: proxy
    k8s-app: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
  selector:
    k8s-app: cilium-envoy
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  ports:
  - nodePort: 32379
    port: 2379
  selector:
    k8s-app: clustermesh-apiserver
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    k8s-app: clustermesh-apiserver
  name: clustermesh-apiserver
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: clustermesh-apiserver
        app.kubernetes.io/part-of: cilium
        k8s-app: clustermesh-apiserver
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        command:
        - /usr/local/bin/etcd
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3
        imagePullPolicy: IfNotPresent
        name: etcd
        ports:
        - containerPort: 2379
          name: etcd
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/etcd-secrets
          name: etcd-server-secrets
          readOnly: true
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      - args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        command:
        - /usr/bin/clustermesh-apiserver
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              key: cluster-name
              name: cilium-config
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              key: cluster-id
              name: cilium-config
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              key: identity-allocation-mode
              name: cilium-config
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              key: enable-k8s-endpoint-slice
              name: cilium-config
              optional: true
        image: quay.io/cilium/clustermesh-apiserver:v1.14.1@sha256:a7353669b1f7cb96cd600d98c7dd12e909d876843a7a272a1bc407e114ed225c
        imagePullPolicy: IfNotPresent
        name: apiserver
        ports:
        - containerPort: 9962
          name: apiserv-metrics
          protocol: TCP
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/lib/cilium/etcd-secrets
          name: etcd-admin-client
          readOnly: true
      initContainers:
      - args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-coder-amanibhavam-class --no-password;
          etcdctl user grant-role admin-coder-amanibhavam-class root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        command:
        - /bin/sh
        - -c
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3
        imagePullPolicy: IfNotPresent
        name: etcd-init
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/etcd
          name: etcd-data-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: clustermesh-apiserver
      serviceAccountName: clustermesh-apiserver
      volumes:
      - name: etcd-server-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-server-cert
      - name: etcd-admin-client
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
              name: clustermesh-apiserver-admin-cert
      - emptyDir: {}
        name: etcd-data-dir
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.1@sha256:db30e85a7abc10589ce2a97d61ee18696a03dc5ea04d44b4d836d88bd75b59d8
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: unconfined
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: mount-cgroup
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - command:
        - sh
        - -ec
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: apply-sysctl-overwrites
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYS_CHROOT
            - SYS_PTRACE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /hostproc
          name: hostproc
        - mountPath: /hostbin
          name: cni-path
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_MODULE
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /proc
          type: Directory
        name: hostproc
      - hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/name: cilium-envoy
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium-envoy
    name: cilium-envoy
  name: cilium-envoy
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium-envoy
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-envoy: unconfined
        prometheus.io/port: "9964"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-envoy
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium-envoy
        name: cilium-envoy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium-envoy
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - -c /var/run/cilium/envoy/bootstrap-config.json
        - --base-id 0
        - --log-level info
        - --log-format [%Y-%m-%d %T.%e][%t][%l][%n] [%g:%#] %v
        command:
        - /usr/bin/cilium-envoy
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: quay.io/cilium/cilium-envoy:v1.25.9-f039e2bd380b7eef2f2feea5750676bb36133699@sha256:023d09eeb8a44ae99b489f4af7ffed8b8b54f19a532e0bc6ab4c1e4b31acaab1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: localhost
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-envoy
        ports:
        - containerPort: 9964
          hostPort: 9964
          name: envoy-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: localhost
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: localhost
            path: /healthz
            port: 9878
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/cilium/envoy/sockets
          name: envoy-sockets
          readOnly: false
        - mountPath: /var/run/cilium/envoy/
          name: envoy-config
          readOnly: true
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium-envoy
      serviceAccountName: cilium-envoy
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - hostPath:
          path: /var/run/cilium/envoy/sockets
          type: DirectoryOrCreate
        name: envoy-sockets
      - configMap:
          defaultMode: 256
          items:
          - key: bootstrap-config.json
            path: bootstrap-config.json
          name: cilium-envoy-config
        name: envoy-config
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
spec:
  commonName: '*.hubble-relay.cilium.io'
  dnsNames:
  - '*.hubble-relay.cilium.io'
  duration: 26280h0m0s
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: cilium-ca
  secretName: hubble-relay-client-certs
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: hubble-server-certs
  namespace: kube-system
spec:
  commonName: '*.coder-amanibhavam-class.hubble-grpc.cilium.io'
  dnsNames:
  - '*.coder-amanibhavam-class.hubble-grpc.cilium.io'
  duration: 26280h0m0s
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: cilium-ca
  secretName: hubble-server-certs
