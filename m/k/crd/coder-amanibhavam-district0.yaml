apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: applications.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: applications.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    shortNames:
      - app
      - apps
    singular: application
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.sync.status
          name: Sync Status
          type: string
        - jsonPath: .status.health.status
          name: Health Status
          type: string
        - jsonPath: .status.sync.revision
          name: Revision
          priority: 10
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Application is a definition of Application resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            operation:
              description: Operation contains information about a requested or running operation
              properties:
                info:
                  description: Info is a list of informational items for this operation
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
                initiatedBy:
                  description: InitiatedBy contains information about who initiated the operations
                  properties:
                    automated:
                      description: Automated is set to true if operation was initiated automatically by the application controller.
                      type: boolean
                    username:
                      description: Username contains the name of a user who started operation
                      type: string
                  type: object
                retry:
                  description: Retry controls the strategy to apply if a sync fails
                  properties:
                    backoff:
                      description: Backoff controls how to backoff on subsequent retries of failed syncs
                      properties:
                        duration:
                          description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                          type: string
                        factor:
                          description: Factor is a factor to multiply the base duration after each failed retry
                          format: int64
                          type: integer
                        maxDuration:
                          description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                          type: string
                      type: object
                    limit:
                      description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                      format: int64
                      type: integer
                  type: object
                sync:
                  description: Sync contains parameters for the operation
                  properties:
                    dryRun:
                      description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                      type: boolean
                    manifests:
                      description: Manifests is an optional field that overrides sync source with a local directory for development
                      items:
                        type: string
                      type: array
                    prune:
                      description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                      type: boolean
                    resources:
                      description: Resources describes which resources shall be part of the sync
                      items:
                        description: SyncOperationResource contains resources to sync.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                    revision:
                      description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                      type: string
                    revisions:
                      description: Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
                      items:
                        type: string
                      type: array
                    source:
                      description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External Variables
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                libs:
                                  description: Additional library search dirs
                                  items:
                                    type: string
                                  type: array
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level Arguments
                                  items:
                                    description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                              type: object
                            recurse:
                              description: Recurse specifies whether to scan a directory recursively for manifests
                              type: boolean
                          type: object
                        helm:
                          description: Helm holds helm specific options
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the helm template
                              items:
                                description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing the values for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            ignoreMissingValueFiles:
                              description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                              type: boolean
                            parameters:
                              description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                              items:
                                description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                properties:
                                  forceString:
                                    description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            passCredentials:
                              description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                              type: boolean
                            releaseName:
                              description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                              type: string
                            skipCrds:
                              description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                              type: boolean
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files to use when generating a template
                              items:
                                type: string
                              type: array
                            values:
                              description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                              type: string
                            valuesObject:
                              description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            version:
                              description: Version is the Helm version to use for templating ("3")
                              type: string
                          type: object
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          properties:
                            commonAnnotations:
                              additionalProperties:
                                type: string
                              description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                              type: object
                            commonAnnotationsEnvsubst:
                              description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                              type: boolean
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels is a list of additional labels to add to rendered manifests
                              type: object
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override specifications
                              items:
                                description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                              type: array
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources for Kustomize apps
                              type: string
                            namespace:
                              description: Namespace sets the namespace that Kustomize adds to all resources
                              type: string
                            patches:
                              description: Patches is a list of Kustomize patches
                              items:
                                properties:
                                  options:
                                    additionalProperties:
                                      type: boolean
                                    type: object
                                  patch:
                                    type: string
                                  path:
                                    type: string
                                  target:
                                    properties:
                                      annotationSelector:
                                        type: string
                                      group:
                                        type: string
                                      kind:
                                        type: string
                                      labelSelector:
                                        type: string
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      version:
                                        type: string
                                    type: object
                                type: object
                              type: array
                            replicas:
                              description: Replicas is a list of Kustomize Replicas override specifications
                              items:
                                properties:
                                  count:
                                    anyOf:
                                      - type: integer
                                      - type: string
                                    description: Number of replicas
                                    x-kubernetes-int-or-string: true
                                  name:
                                    description: Name of Deployment or StatefulSet
                                    type: string
                                required:
                                  - count
                                  - name
                                type: object
                              type: array
                            version:
                              description: Version controls which version of Kustomize to use for rendering manifests
                              type: string
                          type: object
                        path:
                          description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: Plugin holds config management plugin specific options
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              items:
                                description: EnvEntry represents an entry in the application's environment
                                properties:
                                  name:
                                    description: Name is the name of the variable, usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            name:
                              type: string
                            parameters:
                              items:
                                properties:
                                  array:
                                    description: Array is the value of an array type parameter.
                                    items:
                                      type: string
                                    type: array
                                  map:
                                    additionalProperties:
                                      type: string
                                    description: Map is the value of a map type parameter.
                                    type: object
                                  name:
                                    description: Name is the name identifying a parameter.
                                    type: string
                                  string:
                                    description: String_ is the value of a string type parameter.
                                    type: string
                                type: object
                              type: array
                          type: object
                        ref:
                          description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                          type: string
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                          type: string
                      required:
                        - repoURL
                      type: object
                    sources:
                      description: Sources overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                      items:
                        description: ApplicationSource contains all required information about the source of an application
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              passCredentials:
                                description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                type: string
                              valuesObject:
                                description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the Helm version to use for templating ("3")
                                type: string
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                              commonAnnotationsEnvsubst:
                                description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                type: boolean
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              namespace:
                                description: Namespace sets the namespace that Kustomize adds to all resources
                                type: string
                              patches:
                                description: Patches is a list of Kustomize patches
                                items:
                                  properties:
                                    options:
                                      additionalProperties:
                                        type: boolean
                                      type: object
                                    patch:
                                      type: string
                                    path:
                                      type: string
                                    target:
                                      properties:
                                        annotationSelector:
                                          type: string
                                        group:
                                          type: string
                                        kind:
                                          type: string
                                        labelSelector:
                                          type: string
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        version:
                                          type: string
                                      type: object
                                  type: object
                                type: array
                              replicas:
                                description: Replicas is a list of Kustomize Replicas override specifications
                                items:
                                  properties:
                                    count:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Number of replicas
                                      x-kubernetes-int-or-string: true
                                    name:
                                      description: Name of Deployment or StatefulSet
                                      type: string
                                  required:
                                    - count
                                    - name
                                  type: object
                                type: array
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: Plugin holds config management plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              name:
                                type: string
                              parameters:
                                items:
                                  properties:
                                    array:
                                      description: Array is the value of an array type parameter.
                                      items:
                                        type: string
                                      type: array
                                    map:
                                      additionalProperties:
                                        type: string
                                      description: Map is the value of a map type parameter.
                                      type: object
                                    name:
                                      description: Name is the name identifying a parameter.
                                      type: string
                                    string:
                                      description: String_ is the value of a string type parameter.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          ref:
                            description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                        required:
                          - repoURL
                        type: object
                      type: array
                    syncOptions:
                      description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                      items:
                        type: string
                      type: array
                    syncStrategy:
                      description: SyncStrategy describes how to perform the sync
                      properties:
                        apply:
                          description: Apply will perform a `kubectl apply` to perform the sync.
                          properties:
                            force:
                              description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                              type: boolean
                          type: object
                        hook:
                          description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                          properties:
                            force:
                              description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                              type: boolean
                          type: object
                      type: object
                  type: object
              type: object
            spec:
              description: ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
              properties:
                destination:
                  description: Destination is a reference to the target Kubernetes server and namespace
                  properties:
                    name:
                      description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                      type: string
                    namespace:
                      description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                      type: string
                    server:
                      description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                      type: string
                  type: object
                ignoreDifferences:
                  description: IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
                  items:
                    description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                    properties:
                      group:
                        type: string
                      jqPathExpressions:
                        items:
                          type: string
                        type: array
                      jsonPointers:
                        items:
                          type: string
                        type: array
                      kind:
                        type: string
                      managedFieldsManagers:
                        description: ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
                        items:
                          type: string
                        type: array
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                      - kind
                    type: object
                  type: array
                info:
                  description: Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
                project:
                  description: Project is a reference to the project this application belongs to. The empty string means that application belongs to the 'default' project.
                  type: string
                revisionHistoryLimit:
                  description: RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions. This should only be changed in exceptional circumstances. Setting to zero will store no history. This will reduce storage used. Increasing will increase the space used to store the history, so we do not recommend increasing it. Default is 10.
                  format: int64
                  type: integer
                source:
                  description: Source is a reference to the location of the application's manifests or chart
                  properties:
                    chart:
                      description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                      type: string
                    directory:
                      description: Directory holds path/directory specific options
                      properties:
                        exclude:
                          description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                          type: string
                        include:
                          description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                          type: string
                        jsonnet:
                          description: Jsonnet holds options specific to Jsonnet
                          properties:
                            extVars:
                              description: ExtVars is a list of Jsonnet External Variables
                              items:
                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            libs:
                              description: Additional library search dirs
                              items:
                                type: string
                              type: array
                            tlas:
                              description: TLAS is a list of Jsonnet Top-level Arguments
                              items:
                                description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                          type: object
                        recurse:
                          description: Recurse specifies whether to scan a directory recursively for manifests
                          type: boolean
                      type: object
                    helm:
                      description: Helm holds helm specific options
                      properties:
                        fileParameters:
                          description: FileParameters are file parameters to the helm template
                          items:
                            description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                            properties:
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              path:
                                description: Path is the path to the file containing the values for the Helm parameter
                                type: string
                            type: object
                          type: array
                        ignoreMissingValueFiles:
                          description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                          type: boolean
                        parameters:
                          description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                          items:
                            description: HelmParameter is a parameter that's passed to helm template during manifest generation
                            properties:
                              forceString:
                                description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                type: boolean
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              value:
                                description: Value is the value for the Helm parameter
                                type: string
                            type: object
                          type: array
                        passCredentials:
                          description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                          type: boolean
                        releaseName:
                          description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                          type: string
                        skipCrds:
                          description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                          type: boolean
                        valueFiles:
                          description: ValuesFiles is a list of Helm value files to use when generating a template
                          items:
                            type: string
                          type: array
                        values:
                          description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                          type: string
                        valuesObject:
                          description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        version:
                          description: Version is the Helm version to use for templating ("3")
                          type: string
                      type: object
                    kustomize:
                      description: Kustomize holds kustomize specific options
                      properties:
                        commonAnnotations:
                          additionalProperties:
                            type: string
                          description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                          type: object
                        commonAnnotationsEnvsubst:
                          description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                          type: boolean
                        commonLabels:
                          additionalProperties:
                            type: string
                          description: CommonLabels is a list of additional labels to add to rendered manifests
                          type: object
                        forceCommonAnnotations:
                          description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                          type: boolean
                        forceCommonLabels:
                          description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                          type: boolean
                        images:
                          description: Images is a list of Kustomize image override specifications
                          items:
                            description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                            type: string
                          type: array
                        namePrefix:
                          description: NamePrefix is a prefix appended to resources for Kustomize apps
                          type: string
                        nameSuffix:
                          description: NameSuffix is a suffix appended to resources for Kustomize apps
                          type: string
                        namespace:
                          description: Namespace sets the namespace that Kustomize adds to all resources
                          type: string
                        patches:
                          description: Patches is a list of Kustomize patches
                          items:
                            properties:
                              options:
                                additionalProperties:
                                  type: boolean
                                type: object
                              patch:
                                type: string
                              path:
                                type: string
                              target:
                                properties:
                                  annotationSelector:
                                    type: string
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  labelSelector:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                  version:
                                    type: string
                                type: object
                            type: object
                          type: array
                        replicas:
                          description: Replicas is a list of Kustomize Replicas override specifications
                          items:
                            properties:
                              count:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Number of replicas
                                x-kubernetes-int-or-string: true
                              name:
                                description: Name of Deployment or StatefulSet
                                type: string
                            required:
                              - count
                              - name
                            type: object
                          type: array
                        version:
                          description: Version controls which version of Kustomize to use for rendering manifests
                          type: string
                      type: object
                    path:
                      description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                      type: string
                    plugin:
                      description: Plugin holds config management plugin specific options
                      properties:
                        env:
                          description: Env is a list of environment variable entries
                          items:
                            description: EnvEntry represents an entry in the application's environment
                            properties:
                              name:
                                description: Name is the name of the variable, usually expressed in uppercase
                                type: string
                              value:
                                description: Value is the value of the variable
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        name:
                          type: string
                        parameters:
                          items:
                            properties:
                              array:
                                description: Array is the value of an array type parameter.
                                items:
                                  type: string
                                type: array
                              map:
                                additionalProperties:
                                  type: string
                                description: Map is the value of a map type parameter.
                                type: object
                              name:
                                description: Name is the name identifying a parameter.
                                type: string
                              string:
                                description: String_ is the value of a string type parameter.
                                type: string
                            type: object
                          type: array
                      type: object
                    ref:
                      description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                      type: string
                    repoURL:
                      description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                      type: string
                    targetRevision:
                      description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                      type: string
                  required:
                    - repoURL
                  type: object
                sources:
                  description: Sources is a reference to the location of the application's manifests or chart
                  items:
                    description: ApplicationSource contains all required information about the source of an application
                    properties:
                      chart:
                        description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                        type: string
                      directory:
                        description: Directory holds path/directory specific options
                        properties:
                          exclude:
                            description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                            type: string
                          include:
                            description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                            type: string
                          jsonnet:
                            description: Jsonnet holds options specific to Jsonnet
                            properties:
                              extVars:
                                description: ExtVars is a list of Jsonnet External Variables
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              libs:
                                description: Additional library search dirs
                                items:
                                  type: string
                                type: array
                              tlas:
                                description: TLAS is a list of Jsonnet Top-level Arguments
                                items:
                                  description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                  properties:
                                    code:
                                      type: boolean
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                            type: object
                          recurse:
                            description: Recurse specifies whether to scan a directory recursively for manifests
                            type: boolean
                        type: object
                      helm:
                        description: Helm holds helm specific options
                        properties:
                          fileParameters:
                            description: FileParameters are file parameters to the helm template
                            items:
                              description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                              properties:
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                path:
                                  description: Path is the path to the file containing the values for the Helm parameter
                                  type: string
                              type: object
                            type: array
                          ignoreMissingValueFiles:
                            description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                            type: boolean
                          parameters:
                            description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                            items:
                              description: HelmParameter is a parameter that's passed to helm template during manifest generation
                              properties:
                                forceString:
                                  description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                  type: boolean
                                name:
                                  description: Name is the name of the Helm parameter
                                  type: string
                                value:
                                  description: Value is the value for the Helm parameter
                                  type: string
                              type: object
                            type: array
                          passCredentials:
                            description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                            type: boolean
                          releaseName:
                            description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                            type: string
                          skipCrds:
                            description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                            type: boolean
                          valueFiles:
                            description: ValuesFiles is a list of Helm value files to use when generating a template
                            items:
                              type: string
                            type: array
                          values:
                            description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                            type: string
                          valuesObject:
                            description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          version:
                            description: Version is the Helm version to use for templating ("3")
                            type: string
                        type: object
                      kustomize:
                        description: Kustomize holds kustomize specific options
                        properties:
                          commonAnnotations:
                            additionalProperties:
                              type: string
                            description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                            type: object
                          commonAnnotationsEnvsubst:
                            description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                            type: boolean
                          commonLabels:
                            additionalProperties:
                              type: string
                            description: CommonLabels is a list of additional labels to add to rendered manifests
                            type: object
                          forceCommonAnnotations:
                            description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                            type: boolean
                          forceCommonLabels:
                            description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                            type: boolean
                          images:
                            description: Images is a list of Kustomize image override specifications
                            items:
                              description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                              type: string
                            type: array
                          namePrefix:
                            description: NamePrefix is a prefix appended to resources for Kustomize apps
                            type: string
                          nameSuffix:
                            description: NameSuffix is a suffix appended to resources for Kustomize apps
                            type: string
                          namespace:
                            description: Namespace sets the namespace that Kustomize adds to all resources
                            type: string
                          patches:
                            description: Patches is a list of Kustomize patches
                            items:
                              properties:
                                options:
                                  additionalProperties:
                                    type: boolean
                                  type: object
                                patch:
                                  type: string
                                path:
                                  type: string
                                target:
                                  properties:
                                    annotationSelector:
                                      type: string
                                    group:
                                      type: string
                                    kind:
                                      type: string
                                    labelSelector:
                                      type: string
                                    name:
                                      type: string
                                    namespace:
                                      type: string
                                    version:
                                      type: string
                                  type: object
                              type: object
                            type: array
                          replicas:
                            description: Replicas is a list of Kustomize Replicas override specifications
                            items:
                              properties:
                                count:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Number of replicas
                                  x-kubernetes-int-or-string: true
                                name:
                                  description: Name of Deployment or StatefulSet
                                  type: string
                              required:
                                - count
                                - name
                              type: object
                            type: array
                          version:
                            description: Version controls which version of Kustomize to use for rendering manifests
                            type: string
                        type: object
                      path:
                        description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                        type: string
                      plugin:
                        description: Plugin holds config management plugin specific options
                        properties:
                          env:
                            description: Env is a list of environment variable entries
                            items:
                              description: EnvEntry represents an entry in the application's environment
                              properties:
                                name:
                                  description: Name is the name of the variable, usually expressed in uppercase
                                  type: string
                                value:
                                  description: Value is the value of the variable
                                  type: string
                              required:
                                - name
                                - value
                              type: object
                            type: array
                          name:
                            type: string
                          parameters:
                            items:
                              properties:
                                array:
                                  description: Array is the value of an array type parameter.
                                  items:
                                    type: string
                                  type: array
                                map:
                                  additionalProperties:
                                    type: string
                                  description: Map is the value of a map type parameter.
                                  type: object
                                name:
                                  description: Name is the name identifying a parameter.
                                  type: string
                                string:
                                  description: String_ is the value of a string type parameter.
                                  type: string
                              type: object
                            type: array
                        type: object
                      ref:
                        description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                        type: string
                      repoURL:
                        description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                        type: string
                      targetRevision:
                        description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                        type: string
                    required:
                      - repoURL
                    type: object
                  type: array
                syncPolicy:
                  description: SyncPolicy controls when and how a sync will be performed
                  properties:
                    automated:
                      description: Automated will keep an application synced to the target revision
                      properties:
                        allowEmpty:
                          description: 'AllowEmpty allows apps have zero live resources (default: false)'
                          type: boolean
                        prune:
                          description: 'Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)'
                          type: boolean
                        selfHeal:
                          description: 'SelfHeal specifies whether to revert resources back to their desired state upon modification in the cluster (default: false)'
                          type: boolean
                      type: object
                    managedNamespaceMetadata:
                      description: ManagedNamespaceMetadata controls metadata in the given namespace (if CreateNamespace=true)
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    retry:
                      description: Retry controls failed sync retry behavior
                      properties:
                        backoff:
                          description: Backoff controls how to backoff on subsequent retries of failed syncs
                          properties:
                            duration:
                              description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                              type: string
                            factor:
                              description: Factor is a factor to multiply the base duration after each failed retry
                              format: int64
                              type: integer
                            maxDuration:
                              description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                              type: string
                          type: object
                        limit:
                          description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                          format: int64
                          type: integer
                      type: object
                    syncOptions:
                      description: Options allow you to specify whole app sync-options
                      items:
                        type: string
                      type: array
                  type: object
              required:
                - destination
                - project
              type: object
            status:
              description: ApplicationStatus contains status information for the application
              properties:
                conditions:
                  description: Conditions is a list of currently observed application conditions
                  items:
                    description: ApplicationCondition contains details about an application condition, which is usually an error or warning
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the time the condition was last observed
                        format: date-time
                        type: string
                      message:
                        description: Message contains human-readable message indicating details about condition
                        type: string
                      type:
                        description: Type is an application condition type
                        type: string
                    required:
                      - message
                      - type
                    type: object
                  type: array
                controllerNamespace:
                  description: ControllerNamespace indicates the namespace in which the application controller is located
                  type: string
                health:
                  description: Health contains information about the application's current health status
                  properties:
                    message:
                      description: Message is a human-readable informational message describing the health status
                      type: string
                    status:
                      description: Status holds the status code of the application or resource
                      type: string
                  type: object
                history:
                  description: History contains information about the application's sync history
                  items:
                    description: RevisionHistory contains history information about a previous sync
                    properties:
                      deployStartedAt:
                        description: DeployStartedAt holds the time the sync operation started
                        format: date-time
                        type: string
                      deployedAt:
                        description: DeployedAt holds the time the sync operation completed
                        format: date-time
                        type: string
                      id:
                        description: ID is an auto incrementing identifier of the RevisionHistory
                        format: int64
                        type: integer
                      revision:
                        description: Revision holds the revision the sync was performed against
                        type: string
                      revisions:
                        description: Revisions holds the revision of each source in sources field the sync was performed against
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is a reference to the application source used for the sync operation
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External Variables
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level Arguments
                                    items:
                                      description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to the helm template
                                items:
                                  description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              ignoreMissingValueFiles:
                                description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                type: boolean
                              parameters:
                                description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                items:
                                  description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              passCredentials:
                                description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                type: string
                              skipCrds:
                                description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                type: boolean
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                type: string
                              valuesObject:
                                description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              version:
                                description: Version is the Helm version to use for templating ("3")
                                type: string
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                type: object
                              commonAnnotationsEnvsubst:
                                description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                type: boolean
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional labels to add to rendered manifests
                                type: object
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override specifications
                                items:
                                  description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources for Kustomize apps
                                type: string
                              namespace:
                                description: Namespace sets the namespace that Kustomize adds to all resources
                                type: string
                              patches:
                                description: Patches is a list of Kustomize patches
                                items:
                                  properties:
                                    options:
                                      additionalProperties:
                                        type: boolean
                                      type: object
                                    patch:
                                      type: string
                                    path:
                                      type: string
                                    target:
                                      properties:
                                        annotationSelector:
                                          type: string
                                        group:
                                          type: string
                                        kind:
                                          type: string
                                        labelSelector:
                                          type: string
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        version:
                                          type: string
                                      type: object
                                  type: object
                                type: array
                              replicas:
                                description: Replicas is a list of Kustomize Replicas override specifications
                                items:
                                  properties:
                                    count:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Number of replicas
                                      x-kubernetes-int-or-string: true
                                    name:
                                      description: Name of Deployment or StatefulSet
                                      type: string
                                  required:
                                    - count
                                    - name
                                  type: object
                                type: array
                              version:
                                description: Version controls which version of Kustomize to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: Plugin holds config management plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable entries
                                items:
                                  description: EnvEntry represents an entry in the application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable, usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              name:
                                type: string
                              parameters:
                                items:
                                  properties:
                                    array:
                                      description: Array is the value of an array type parameter.
                                      items:
                                        type: string
                                      type: array
                                    map:
                                      additionalProperties:
                                        type: string
                                      description: Map is the value of a map type parameter.
                                      type: object
                                    name:
                                      description: Name is the name identifying a parameter.
                                      type: string
                                    string:
                                      description: String_ is the value of a string type parameter.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          ref:
                            description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                            type: string
                        required:
                          - repoURL
                        type: object
                      sources:
                        description: Sources is a reference to the application sources used for the sync operation
                        items:
                          description: ApplicationSource contains all required information about the source of an application
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  items:
                                    properties:
                                      options:
                                        additionalProperties:
                                          type: boolean
                                        type: object
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  items:
                                    properties:
                                      count:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                    required:
                                      - count
                                      - name
                                    type: object
                                  type: array
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                                parameters:
                                  items:
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        items:
                                          type: string
                                        type: array
                                      map:
                                        additionalProperties:
                                          type: string
                                        description: Map is the value of a map type parameter.
                                        type: object
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                          required:
                            - repoURL
                          type: object
                        type: array
                    required:
                      - deployedAt
                      - id
                    type: object
                  type: array
                observedAt:
                  description: 'ObservedAt indicates when the application state was updated without querying latest git state Deprecated: controller no longer updates ObservedAt field'
                  format: date-time
                  type: string
                operationState:
                  description: OperationState contains information about any ongoing operations, such as a sync
                  properties:
                    finishedAt:
                      description: FinishedAt contains time of operation completion
                      format: date-time
                      type: string
                    message:
                      description: Message holds any pertinent messages when attempting to perform operation (typically errors).
                      type: string
                    operation:
                      description: Operation is the original requested operation
                      properties:
                        info:
                          description: Info is a list of informational items for this operation
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        initiatedBy:
                          description: InitiatedBy contains information about who initiated the operations
                          properties:
                            automated:
                              description: Automated is set to true if operation was initiated automatically by the application controller.
                              type: boolean
                            username:
                              description: Username contains the name of a user who started operation
                              type: string
                          type: object
                        retry:
                          description: Retry controls the strategy to apply if a sync fails
                          properties:
                            backoff:
                              description: Backoff controls how to backoff on subsequent retries of failed syncs
                              properties:
                                duration:
                                  description: Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
                                  type: string
                                factor:
                                  description: Factor is a factor to multiply the base duration after each failed retry
                                  format: int64
                                  type: integer
                                maxDuration:
                                  description: MaxDuration is the maximum amount of time allowed for the backoff strategy
                                  type: string
                              type: object
                            limit:
                              description: Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
                              format: int64
                              type: integer
                          type: object
                        sync:
                          description: Sync contains parameters for the operation
                          properties:
                            dryRun:
                              description: DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
                              type: boolean
                            manifests:
                              description: Manifests is an optional field that overrides sync source with a local directory for development
                              items:
                                type: string
                              type: array
                            prune:
                              description: Prune specifies to delete resources from the cluster that are no longer tracked in git
                              type: boolean
                            resources:
                              description: Resources describes which resources shall be part of the sync
                              items:
                                description: SyncOperationResource contains resources to sync.
                                properties:
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              type: array
                            revision:
                              description: Revision is the revision (Git) or chart version (Helm) which to sync the application to If omitted, will use the revision specified in app spec.
                              type: string
                            revisions:
                              description: Revisions is the list of revision (Git) or chart version (Helm) which to sync each source in sources field for the application to If omitted, will use the revision specified in app spec.
                              items:
                                type: string
                              type: array
                            source:
                              description: Source overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                              properties:
                                chart:
                                  description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                  type: string
                                directory:
                                  description: Directory holds path/directory specific options
                                  properties:
                                    exclude:
                                      description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                      type: string
                                    include:
                                      description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                      type: string
                                    jsonnet:
                                      description: Jsonnet holds options specific to Jsonnet
                                      properties:
                                        extVars:
                                          description: ExtVars is a list of Jsonnet External Variables
                                          items:
                                            description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                        libs:
                                          description: Additional library search dirs
                                          items:
                                            type: string
                                          type: array
                                        tlas:
                                          description: TLAS is a list of Jsonnet Top-level Arguments
                                          items:
                                            description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                      type: object
                                    recurse:
                                      description: Recurse specifies whether to scan a directory recursively for manifests
                                      type: boolean
                                  type: object
                                helm:
                                  description: Helm holds helm specific options
                                  properties:
                                    fileParameters:
                                      description: FileParameters are file parameters to the helm template
                                      items:
                                        description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                        properties:
                                          name:
                                            description: Name is the name of the Helm parameter
                                            type: string
                                          path:
                                            description: Path is the path to the file containing the values for the Helm parameter
                                            type: string
                                        type: object
                                      type: array
                                    ignoreMissingValueFiles:
                                      description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                      type: boolean
                                    parameters:
                                      description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                      items:
                                        description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                        properties:
                                          forceString:
                                            description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                            type: boolean
                                          name:
                                            description: Name is the name of the Helm parameter
                                            type: string
                                          value:
                                            description: Value is the value for the Helm parameter
                                            type: string
                                        type: object
                                      type: array
                                    passCredentials:
                                      description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                      type: boolean
                                    releaseName:
                                      description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                      type: string
                                    skipCrds:
                                      description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                      type: boolean
                                    valueFiles:
                                      description: ValuesFiles is a list of Helm value files to use when generating a template
                                      items:
                                        type: string
                                      type: array
                                    values:
                                      description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                      type: string
                                    valuesObject:
                                      description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                    version:
                                      description: Version is the Helm version to use for templating ("3")
                                      type: string
                                  type: object
                                kustomize:
                                  description: Kustomize holds kustomize specific options
                                  properties:
                                    commonAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                      type: object
                                    commonAnnotationsEnvsubst:
                                      description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                      type: boolean
                                    commonLabels:
                                      additionalProperties:
                                        type: string
                                      description: CommonLabels is a list of additional labels to add to rendered manifests
                                      type: object
                                    forceCommonAnnotations:
                                      description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                      type: boolean
                                    forceCommonLabels:
                                      description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                      type: boolean
                                    images:
                                      description: Images is a list of Kustomize image override specifications
                                      items:
                                        description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                        type: string
                                      type: array
                                    namePrefix:
                                      description: NamePrefix is a prefix appended to resources for Kustomize apps
                                      type: string
                                    nameSuffix:
                                      description: NameSuffix is a suffix appended to resources for Kustomize apps
                                      type: string
                                    namespace:
                                      description: Namespace sets the namespace that Kustomize adds to all resources
                                      type: string
                                    patches:
                                      description: Patches is a list of Kustomize patches
                                      items:
                                        properties:
                                          options:
                                            additionalProperties:
                                              type: boolean
                                            type: object
                                          patch:
                                            type: string
                                          path:
                                            type: string
                                          target:
                                            properties:
                                              annotationSelector:
                                                type: string
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              labelSelector:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                        type: object
                                      type: array
                                    replicas:
                                      description: Replicas is a list of Kustomize Replicas override specifications
                                      items:
                                        properties:
                                          count:
                                            anyOf:
                                              - type: integer
                                              - type: string
                                            description: Number of replicas
                                            x-kubernetes-int-or-string: true
                                          name:
                                            description: Name of Deployment or StatefulSet
                                            type: string
                                        required:
                                          - count
                                          - name
                                        type: object
                                      type: array
                                    version:
                                      description: Version controls which version of Kustomize to use for rendering manifests
                                      type: string
                                  type: object
                                path:
                                  description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                  type: string
                                plugin:
                                  description: Plugin holds config management plugin specific options
                                  properties:
                                    env:
                                      description: Env is a list of environment variable entries
                                      items:
                                        description: EnvEntry represents an entry in the application's environment
                                        properties:
                                          name:
                                            description: Name is the name of the variable, usually expressed in uppercase
                                            type: string
                                          value:
                                            description: Value is the value of the variable
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                    parameters:
                                      items:
                                        properties:
                                          array:
                                            description: Array is the value of an array type parameter.
                                            items:
                                              type: string
                                            type: array
                                          map:
                                            additionalProperties:
                                              type: string
                                            description: Map is the value of a map type parameter.
                                            type: object
                                          name:
                                            description: Name is the name identifying a parameter.
                                            type: string
                                          string:
                                            description: String_ is the value of a string type parameter.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                ref:
                                  description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                  type: string
                                repoURL:
                                  description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                  type: string
                                targetRevision:
                                  description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                  type: string
                              required:
                                - repoURL
                              type: object
                            sources:
                              description: Sources overrides the source definition set in the application. This is typically set in a Rollback operation and is nil during a Sync operation
                              items:
                                description: ApplicationSource contains all required information about the source of an application
                                properties:
                                  chart:
                                    description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                    type: string
                                  directory:
                                    description: Directory holds path/directory specific options
                                    properties:
                                      exclude:
                                        description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                        type: string
                                      include:
                                        description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                        type: string
                                      jsonnet:
                                        description: Jsonnet holds options specific to Jsonnet
                                        properties:
                                          extVars:
                                            description: ExtVars is a list of Jsonnet External Variables
                                            items:
                                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                              properties:
                                                code:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          libs:
                                            description: Additional library search dirs
                                            items:
                                              type: string
                                            type: array
                                          tlas:
                                            description: TLAS is a list of Jsonnet Top-level Arguments
                                            items:
                                              description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                              properties:
                                                code:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                        type: object
                                      recurse:
                                        description: Recurse specifies whether to scan a directory recursively for manifests
                                        type: boolean
                                    type: object
                                  helm:
                                    description: Helm holds helm specific options
                                    properties:
                                      fileParameters:
                                        description: FileParameters are file parameters to the helm template
                                        items:
                                          description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                          properties:
                                            name:
                                              description: Name is the name of the Helm parameter
                                              type: string
                                            path:
                                              description: Path is the path to the file containing the values for the Helm parameter
                                              type: string
                                          type: object
                                        type: array
                                      ignoreMissingValueFiles:
                                        description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                        type: boolean
                                      parameters:
                                        description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                        items:
                                          description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                          properties:
                                            forceString:
                                              description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                              type: boolean
                                            name:
                                              description: Name is the name of the Helm parameter
                                              type: string
                                            value:
                                              description: Value is the value for the Helm parameter
                                              type: string
                                          type: object
                                        type: array
                                      passCredentials:
                                        description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                        type: boolean
                                      releaseName:
                                        description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                        type: string
                                      skipCrds:
                                        description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                        type: boolean
                                      valueFiles:
                                        description: ValuesFiles is a list of Helm value files to use when generating a template
                                        items:
                                          type: string
                                        type: array
                                      values:
                                        description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                        type: string
                                      valuesObject:
                                        description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                        type: object
                                        x-kubernetes-preserve-unknown-fields: true
                                      version:
                                        description: Version is the Helm version to use for templating ("3")
                                        type: string
                                    type: object
                                  kustomize:
                                    description: Kustomize holds kustomize specific options
                                    properties:
                                      commonAnnotations:
                                        additionalProperties:
                                          type: string
                                        description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                        type: object
                                      commonAnnotationsEnvsubst:
                                        description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                        type: boolean
                                      commonLabels:
                                        additionalProperties:
                                          type: string
                                        description: CommonLabels is a list of additional labels to add to rendered manifests
                                        type: object
                                      forceCommonAnnotations:
                                        description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                        type: boolean
                                      forceCommonLabels:
                                        description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                        type: boolean
                                      images:
                                        description: Images is a list of Kustomize image override specifications
                                        items:
                                          description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                          type: string
                                        type: array
                                      namePrefix:
                                        description: NamePrefix is a prefix appended to resources for Kustomize apps
                                        type: string
                                      nameSuffix:
                                        description: NameSuffix is a suffix appended to resources for Kustomize apps
                                        type: string
                                      namespace:
                                        description: Namespace sets the namespace that Kustomize adds to all resources
                                        type: string
                                      patches:
                                        description: Patches is a list of Kustomize patches
                                        items:
                                          properties:
                                            options:
                                              additionalProperties:
                                                type: boolean
                                              type: object
                                            patch:
                                              type: string
                                            path:
                                              type: string
                                            target:
                                              properties:
                                                annotationSelector:
                                                  type: string
                                                group:
                                                  type: string
                                                kind:
                                                  type: string
                                                labelSelector:
                                                  type: string
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                version:
                                                  type: string
                                              type: object
                                          type: object
                                        type: array
                                      replicas:
                                        description: Replicas is a list of Kustomize Replicas override specifications
                                        items:
                                          properties:
                                            count:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              description: Number of replicas
                                              x-kubernetes-int-or-string: true
                                            name:
                                              description: Name of Deployment or StatefulSet
                                              type: string
                                          required:
                                            - count
                                            - name
                                          type: object
                                        type: array
                                      version:
                                        description: Version controls which version of Kustomize to use for rendering manifests
                                        type: string
                                    type: object
                                  path:
                                    description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                    type: string
                                  plugin:
                                    description: Plugin holds config management plugin specific options
                                    properties:
                                      env:
                                        description: Env is a list of environment variable entries
                                        items:
                                          description: EnvEntry represents an entry in the application's environment
                                          properties:
                                            name:
                                              description: Name is the name of the variable, usually expressed in uppercase
                                              type: string
                                            value:
                                              description: Value is the value of the variable
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                      parameters:
                                        items:
                                          properties:
                                            array:
                                              description: Array is the value of an array type parameter.
                                              items:
                                                type: string
                                              type: array
                                            map:
                                              additionalProperties:
                                                type: string
                                              description: Map is the value of a map type parameter.
                                              type: object
                                            name:
                                              description: Name is the name identifying a parameter.
                                              type: string
                                            string:
                                              description: String_ is the value of a string type parameter.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  ref:
                                    description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                    type: string
                                  repoURL:
                                    description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                    type: string
                                  targetRevision:
                                    description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                    type: string
                                required:
                                  - repoURL
                                type: object
                              type: array
                            syncOptions:
                              description: SyncOptions provide per-sync sync-options, e.g. Validate=false
                              items:
                                type: string
                              type: array
                            syncStrategy:
                              description: SyncStrategy describes how to perform the sync
                              properties:
                                apply:
                                  description: Apply will perform a `kubectl apply` to perform the sync.
                                  properties:
                                    force:
                                      description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                      type: boolean
                                  type: object
                                hook:
                                  description: Hook will submit any referenced resources to perform the sync. This is the default strategy
                                  properties:
                                    force:
                                      description: Force indicates whether or not to supply the --force flag to `kubectl apply`. The --force flag deletes and re-create the resource, when PATCH encounters conflict and has retried for 5 times.
                                      type: boolean
                                  type: object
                              type: object
                          type: object
                      type: object
                    phase:
                      description: Phase is the current phase of the operation
                      type: string
                    retryCount:
                      description: RetryCount contains time of operation retries
                      format: int64
                      type: integer
                    startedAt:
                      description: StartedAt contains time of operation start
                      format: date-time
                      type: string
                    syncResult:
                      description: SyncResult is the result of a Sync operation
                      properties:
                        managedNamespaceMetadata:
                          description: ManagedNamespaceMetadata contains the current sync state of managed namespace metadata
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        resources:
                          description: Resources contains a list of sync result items for each individual resource in a sync operation
                          items:
                            description: ResourceResult holds the operation result details of a specific resource
                            properties:
                              group:
                                description: Group specifies the API group of the resource
                                type: string
                              hookPhase:
                                description: HookPhase contains the state of any operation associated with this resource OR hook This can also contain values for non-hook resources.
                                type: string
                              hookType:
                                description: HookType specifies the type of the hook. Empty for non-hook resources
                                type: string
                              kind:
                                description: Kind specifies the API kind of the resource
                                type: string
                              message:
                                description: Message contains an informational or error message for the last sync OR operation
                                type: string
                              name:
                                description: Name specifies the name of the resource
                                type: string
                              namespace:
                                description: Namespace specifies the target namespace of the resource
                                type: string
                              status:
                                description: Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
                                type: string
                              syncPhase:
                                description: SyncPhase indicates the particular phase of the sync that this result was acquired in
                                type: string
                              version:
                                description: Version specifies the API version of the resource
                                type: string
                            required:
                              - group
                              - kind
                              - name
                              - namespace
                              - version
                            type: object
                          type: array
                        revision:
                          description: Revision holds the revision this sync operation was performed to
                          type: string
                        revisions:
                          description: Revisions holds the revision this sync operation was performed for respective indexed source in sources field
                          items:
                            type: string
                          type: array
                        source:
                          description: Source records the application source information of the sync, used for comparing auto-sync
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  items:
                                    properties:
                                      options:
                                        additionalProperties:
                                          type: boolean
                                        type: object
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  items:
                                    properties:
                                      count:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                    required:
                                      - count
                                      - name
                                    type: object
                                  type: array
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                                parameters:
                                  items:
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        items:
                                          type: string
                                        type: array
                                      map:
                                        additionalProperties:
                                          type: string
                                        description: Map is the value of a map type parameter.
                                        type: object
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                          required:
                            - repoURL
                          type: object
                        sources:
                          description: Source records the application source information of the sync, used for comparing auto-sync
                          items:
                            description: ApplicationSource contains all required information about the source of an application
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific options
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to Jsonnet
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet External Variables
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      libs:
                                        description: Additional library search dirs
                                        items:
                                          type: string
                                        type: array
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                    type: object
                                  recurse:
                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                    type: boolean
                                type: object
                              helm:
                                description: Helm holds helm specific options
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters to the helm template
                                    items:
                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                      properties:
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file containing the values for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  ignoreMissingValueFiles:
                                    description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                    type: boolean
                                  parameters:
                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                    items:
                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                      properties:
                                        forceString:
                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        value:
                                          description: Value is the value for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  passCredentials:
                                    description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                    type: boolean
                                  releaseName:
                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                    type: string
                                  skipCrds:
                                    description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                    type: boolean
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                    items:
                                      type: string
                                    type: array
                                  values:
                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                    type: string
                                  valuesObject:
                                    description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the Helm version to use for templating ("3")
                                    type: string
                                type: object
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                properties:
                                  commonAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                    type: object
                                  commonAnnotationsEnvsubst:
                                    description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                    type: boolean
                                  commonLabels:
                                    additionalProperties:
                                      type: string
                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                    type: object
                                  forceCommonAnnotations:
                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                    type: boolean
                                  forceCommonLabels:
                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                    type: boolean
                                  images:
                                    description: Images is a list of Kustomize image override specifications
                                    items:
                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                    type: array
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                    type: string
                                  namespace:
                                    description: Namespace sets the namespace that Kustomize adds to all resources
                                    type: string
                                  patches:
                                    description: Patches is a list of Kustomize patches
                                    items:
                                      properties:
                                        options:
                                          additionalProperties:
                                            type: boolean
                                          type: object
                                        patch:
                                          type: string
                                        path:
                                          type: string
                                        target:
                                          properties:
                                            annotationSelector:
                                              type: string
                                            group:
                                              type: string
                                            kind:
                                              type: string
                                            labelSelector:
                                              type: string
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                            version:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  replicas:
                                    description: Replicas is a list of Kustomize Replicas override specifications
                                    items:
                                      properties:
                                        count:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Number of replicas
                                          x-kubernetes-int-or-string: true
                                        name:
                                          description: Name of Deployment or StatefulSet
                                          type: string
                                      required:
                                        - count
                                        - name
                                      type: object
                                    type: array
                                  version:
                                    description: Version controls which version of Kustomize to use for rendering manifests
                                    type: string
                                type: object
                              path:
                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                type: string
                              plugin:
                                description: Plugin holds config management plugin specific options
                                properties:
                                  env:
                                    description: Env is a list of environment variable entries
                                    items:
                                      description: EnvEntry represents an entry in the application's environment
                                      properties:
                                        name:
                                          description: Name is the name of the variable, usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  parameters:
                                    items:
                                      properties:
                                        array:
                                          description: Array is the value of an array type parameter.
                                          items:
                                            type: string
                                          type: array
                                        map:
                                          additionalProperties:
                                            type: string
                                          description: Map is the value of a map type parameter.
                                          type: object
                                        name:
                                          description: Name is the name identifying a parameter.
                                          type: string
                                        string:
                                          description: String_ is the value of a string type parameter.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              ref:
                                description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                type: string
                              repoURL:
                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                type: string
                            required:
                              - repoURL
                            type: object
                          type: array
                      required:
                        - revision
                      type: object
                  required:
                    - operation
                    - phase
                    - startedAt
                  type: object
                reconciledAt:
                  description: ReconciledAt indicates when the application state was reconciled using the latest git version
                  format: date-time
                  type: string
                resourceHealthSource:
                  description: 'ResourceHealthSource indicates where the resource health status is stored: inline if not set or appTree'
                  type: string
                resources:
                  description: Resources is a list of Kubernetes resources managed by this application
                  items:
                    description: 'ResourceStatus holds the current sync and health status of a resource TODO: describe members of this type'
                    properties:
                      group:
                        type: string
                      health:
                        description: HealthStatus contains information about the currently observed health state of an application or resource
                        properties:
                          message:
                            description: Message is a human-readable informational message describing the health status
                            type: string
                          status:
                            description: Status holds the status code of the application or resource
                            type: string
                        type: object
                      hook:
                        type: boolean
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      requiresPruning:
                        type: boolean
                      status:
                        description: SyncStatusCode is a type which represents possible comparison results
                        type: string
                      syncWave:
                        format: int64
                        type: integer
                      version:
                        type: string
                    type: object
                  type: array
                sourceType:
                  description: SourceType specifies the type of this application
                  type: string
                sourceTypes:
                  description: SourceTypes specifies the type of the sources included in the application
                  items:
                    description: ApplicationSourceType specifies the type of the application's source
                    type: string
                  type: array
                summary:
                  description: Summary contains a list of URLs and container images used by this application
                  properties:
                    externalURLs:
                      description: ExternalURLs holds all external URLs of application child resources.
                      items:
                        type: string
                      type: array
                    images:
                      description: Images holds all images of application child resources.
                      items:
                        type: string
                      type: array
                  type: object
                sync:
                  description: Sync contains information about the application's current sync status
                  properties:
                    comparedTo:
                      description: ComparedTo contains information about what has been compared
                      properties:
                        destination:
                          description: Destination is a reference to the application's destination used for comparison
                          properties:
                            name:
                              description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                              type: string
                            namespace:
                              description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                              type: string
                            server:
                              description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                              type: string
                          type: object
                        ignoreDifferences:
                          description: IgnoreDifferences is a reference to the application's ignored differences used for comparison
                          items:
                            description: ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
                            properties:
                              group:
                                type: string
                              jqPathExpressions:
                                items:
                                  type: string
                                type: array
                              jsonPointers:
                                items:
                                  type: string
                                type: array
                              kind:
                                type: string
                              managedFieldsManagers:
                                description: ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the desired state defined in the SCM and won't be displayed in diffs
                                items:
                                  type: string
                                type: array
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                              - kind
                            type: object
                          type: array
                        source:
                          description: Source is a reference to the application's source used for comparison
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External Variables
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level Arguments
                                      items:
                                        description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                ignoreMissingValueFiles:
                                  description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                  type: boolean
                                parameters:
                                  description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                passCredentials:
                                  description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                  type: string
                                skipCrds:
                                  description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                  type: boolean
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                  type: string
                                valuesObject:
                                  description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  description: Version is the Helm version to use for templating ("3")
                                  type: string
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                  type: object
                                commonAnnotationsEnvsubst:
                                  description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                  type: boolean
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to resources for Kustomize apps
                                  type: string
                                namespace:
                                  description: Namespace sets the namespace that Kustomize adds to all resources
                                  type: string
                                patches:
                                  description: Patches is a list of Kustomize patches
                                  items:
                                    properties:
                                      options:
                                        additionalProperties:
                                          type: boolean
                                        type: object
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                replicas:
                                  description: Replicas is a list of Kustomize Replicas override specifications
                                  items:
                                    properties:
                                      count:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Number of replicas
                                        x-kubernetes-int-or-string: true
                                      name:
                                        description: Name of Deployment or StatefulSet
                                        type: string
                                    required:
                                      - count
                                      - name
                                    type: object
                                  type: array
                                version:
                                  description: Version controls which version of Kustomize to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                              type: string
                            plugin:
                              description: Plugin holds config management plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable entries
                                  items:
                                    description: EnvEntry represents an entry in the application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable, usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                                parameters:
                                  items:
                                    properties:
                                      array:
                                        description: Array is the value of an array type parameter.
                                        items:
                                          type: string
                                        type: array
                                      map:
                                        additionalProperties:
                                          type: string
                                        description: Map is the value of a map type parameter.
                                        type: object
                                      name:
                                        description: Name is the name identifying a parameter.
                                        type: string
                                      string:
                                        description: String_ is the value of a string type parameter.
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            ref:
                              description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                              type: string
                          required:
                            - repoURL
                          type: object
                        sources:
                          description: Sources is a reference to the application's multiple sources used for comparison
                          items:
                            description: ApplicationSource contains all required information about the source of an application
                            properties:
                              chart:
                                description: Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
                                type: string
                              directory:
                                description: Directory holds path/directory specific options
                                properties:
                                  exclude:
                                    description: Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
                                    type: string
                                  include:
                                    description: Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
                                    type: string
                                  jsonnet:
                                    description: Jsonnet holds options specific to Jsonnet
                                    properties:
                                      extVars:
                                        description: ExtVars is a list of Jsonnet External Variables
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      libs:
                                        description: Additional library search dirs
                                        items:
                                          type: string
                                        type: array
                                      tlas:
                                        description: TLAS is a list of Jsonnet Top-level Arguments
                                        items:
                                          description: JsonnetVar represents a variable to be passed to jsonnet during manifest generation
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                    type: object
                                  recurse:
                                    description: Recurse specifies whether to scan a directory recursively for manifests
                                    type: boolean
                                type: object
                              helm:
                                description: Helm holds helm specific options
                                properties:
                                  fileParameters:
                                    description: FileParameters are file parameters to the helm template
                                    items:
                                      description: HelmFileParameter is a file parameter that's passed to helm template during manifest generation
                                      properties:
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        path:
                                          description: Path is the path to the file containing the values for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  ignoreMissingValueFiles:
                                    description: IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
                                    type: boolean
                                  parameters:
                                    description: Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
                                    items:
                                      description: HelmParameter is a parameter that's passed to helm template during manifest generation
                                      properties:
                                        forceString:
                                          description: ForceString determines whether to tell Helm to interpret booleans and numbers as strings
                                          type: boolean
                                        name:
                                          description: Name is the name of the Helm parameter
                                          type: string
                                        value:
                                          description: Value is the value for the Helm parameter
                                          type: string
                                      type: object
                                    type: array
                                  passCredentials:
                                    description: PassCredentials pass credentials to all domains (Helm's --pass-credentials)
                                    type: boolean
                                  releaseName:
                                    description: ReleaseName is the Helm release name to use. If omitted it will use the application name
                                    type: string
                                  skipCrds:
                                    description: SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
                                    type: boolean
                                  valueFiles:
                                    description: ValuesFiles is a list of Helm value files to use when generating a template
                                    items:
                                      type: string
                                    type: array
                                  values:
                                    description: Values specifies Helm values to be passed to helm template, typically defined as a block. ValuesObject takes precedence over Values, so use one or the other.
                                    type: string
                                  valuesObject:
                                    description: ValuesObject specifies Helm values to be passed to helm template, defined as a map. This takes precedence over Values.
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    description: Version is the Helm version to use for templating ("3")
                                    type: string
                                type: object
                              kustomize:
                                description: Kustomize holds kustomize specific options
                                properties:
                                  commonAnnotations:
                                    additionalProperties:
                                      type: string
                                    description: CommonAnnotations is a list of additional annotations to add to rendered manifests
                                    type: object
                                  commonAnnotationsEnvsubst:
                                    description: CommonAnnotationsEnvsubst specifies whether to apply env variables substitution for annotation values
                                    type: boolean
                                  commonLabels:
                                    additionalProperties:
                                      type: string
                                    description: CommonLabels is a list of additional labels to add to rendered manifests
                                    type: object
                                  forceCommonAnnotations:
                                    description: ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
                                    type: boolean
                                  forceCommonLabels:
                                    description: ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
                                    type: boolean
                                  images:
                                    description: Images is a list of Kustomize image override specifications
                                    items:
                                      description: KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>
                                      type: string
                                    type: array
                                  namePrefix:
                                    description: NamePrefix is a prefix appended to resources for Kustomize apps
                                    type: string
                                  nameSuffix:
                                    description: NameSuffix is a suffix appended to resources for Kustomize apps
                                    type: string
                                  namespace:
                                    description: Namespace sets the namespace that Kustomize adds to all resources
                                    type: string
                                  patches:
                                    description: Patches is a list of Kustomize patches
                                    items:
                                      properties:
                                        options:
                                          additionalProperties:
                                            type: boolean
                                          type: object
                                        patch:
                                          type: string
                                        path:
                                          type: string
                                        target:
                                          properties:
                                            annotationSelector:
                                              type: string
                                            group:
                                              type: string
                                            kind:
                                              type: string
                                            labelSelector:
                                              type: string
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                            version:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  replicas:
                                    description: Replicas is a list of Kustomize Replicas override specifications
                                    items:
                                      properties:
                                        count:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Number of replicas
                                          x-kubernetes-int-or-string: true
                                        name:
                                          description: Name of Deployment or StatefulSet
                                          type: string
                                      required:
                                        - count
                                        - name
                                      type: object
                                    type: array
                                  version:
                                    description: Version controls which version of Kustomize to use for rendering manifests
                                    type: string
                                type: object
                              path:
                                description: Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
                                type: string
                              plugin:
                                description: Plugin holds config management plugin specific options
                                properties:
                                  env:
                                    description: Env is a list of environment variable entries
                                    items:
                                      description: EnvEntry represents an entry in the application's environment
                                      properties:
                                        name:
                                          description: Name is the name of the variable, usually expressed in uppercase
                                          type: string
                                        value:
                                          description: Value is the value of the variable
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  parameters:
                                    items:
                                      properties:
                                        array:
                                          description: Array is the value of an array type parameter.
                                          items:
                                            type: string
                                          type: array
                                        map:
                                          additionalProperties:
                                            type: string
                                          description: Map is the value of a map type parameter.
                                          type: object
                                        name:
                                          description: Name is the name identifying a parameter.
                                          type: string
                                        string:
                                          description: String_ is the value of a string type parameter.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              ref:
                                description: Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.
                                type: string
                              repoURL:
                                description: RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.
                                type: string
                            required:
                              - repoURL
                            type: object
                          type: array
                      required:
                        - destination
                      type: object
                    revision:
                      description: Revision contains information about the revision the comparison has been performed to
                      type: string
                    revisions:
                      description: Revisions contains information about the revisions of multiple sources the comparison has been performed to
                      items:
                        type: string
                      type: array
                    status:
                      description: Status is the sync state of the comparison
                      type: string
                  required:
                    - status
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: applicationsets.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: applicationsets.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ApplicationSet
    listKind: ApplicationSetList
    plural: applicationsets
    shortNames:
      - appset
      - appsets
    singular: applicationset
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              type: string
            kind:
              type: string
            metadata:
              type: object
            spec:
              properties:
                applyNestedSelectors:
                  type: boolean
                generators:
                  items:
                    properties:
                      clusterDecisionResource:
                        properties:
                          configMapRef:
                            type: string
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          name:
                            type: string
                          requeueAfterSeconds:
                            format: int64
                            type: integer
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                          values:
                            additionalProperties:
                              type: string
                            type: object
                        required:
                          - configMapRef
                        type: object
                      clusters:
                        properties:
                          selector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                          values:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      git:
                        properties:
                          directories:
                            items:
                              properties:
                                exclude:
                                  type: boolean
                                path:
                                  type: string
                              required:
                                - path
                              type: object
                            type: array
                          files:
                            items:
                              properties:
                                path:
                                  type: string
                              required:
                                - path
                              type: object
                            type: array
                          pathParamPrefix:
                            type: string
                          repoURL:
                            type: string
                          requeueAfterSeconds:
                            format: int64
                            type: integer
                          revision:
                            type: string
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                          values:
                            additionalProperties:
                              type: string
                            type: object
                        required:
                          - repoURL
                          - revision
                        type: object
                      list:
                        properties:
                          elements:
                            items:
                              x-kubernetes-preserve-unknown-fields: true
                            type: array
                          elementsYaml:
                            type: string
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                        required:
                          - elements
                        type: object
                      matrix:
                        properties:
                          generators:
                            items:
                              properties:
                                clusterDecisionResource:
                                  properties:
                                    configMapRef:
                                      type: string
                                    labelSelector:
                                      properties:
                                        matchExpressions:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                      type: object
                                    name:
                                      type: string
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - configMapRef
                                  type: object
                                clusters:
                                  properties:
                                    selector:
                                      properties:
                                        matchExpressions:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                      type: object
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                git:
                                  properties:
                                    directories:
                                      items:
                                        properties:
                                          exclude:
                                            type: boolean
                                          path:
                                            type: string
                                        required:
                                          - path
                                        type: object
                                      type: array
                                    files:
                                      items:
                                        properties:
                                          path:
                                            type: string
                                        required:
                                          - path
                                        type: object
                                      type: array
                                    pathParamPrefix:
                                      type: string
                                    repoURL:
                                      type: string
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    revision:
                                      type: string
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - repoURL
                                    - revision
                                  type: object
                                list:
                                  properties:
                                    elements:
                                      items:
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    elementsYaml:
                                      type: string
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                  required:
                                    - elements
                                  type: object
                                matrix:
                                  x-kubernetes-preserve-unknown-fields: true
                                merge:
                                  x-kubernetes-preserve-unknown-fields: true
                                plugin:
                                  properties:
                                    configMapRef:
                                      properties:
                                        name:
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    input:
                                      properties:
                                        parameters:
                                          additionalProperties:
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: object
                                      type: object
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - configMapRef
                                  type: object
                                pullRequest:
                                  properties:
                                    azuredevops:
                                      properties:
                                        api:
                                          type: string
                                        labels:
                                          items:
                                            type: string
                                          type: array
                                        organization:
                                          type: string
                                        project:
                                          type: string
                                        repo:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - organization
                                        - project
                                        - repo
                                      type: object
                                    bitbucket:
                                      properties:
                                        api:
                                          type: string
                                        basicAuth:
                                          properties:
                                            passwordRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                            username:
                                              type: string
                                          required:
                                            - passwordRef
                                            - username
                                          type: object
                                        bearerToken:
                                          properties:
                                            tokenRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                          required:
                                            - tokenRef
                                          type: object
                                        owner:
                                          type: string
                                        repo:
                                          type: string
                                      required:
                                        - owner
                                        - repo
                                      type: object
                                    bitbucketServer:
                                      properties:
                                        api:
                                          type: string
                                        basicAuth:
                                          properties:
                                            passwordRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                            username:
                                              type: string
                                          required:
                                            - passwordRef
                                            - username
                                          type: object
                                        project:
                                          type: string
                                        repo:
                                          type: string
                                      required:
                                        - api
                                        - project
                                        - repo
                                      type: object
                                    filters:
                                      items:
                                        properties:
                                          branchMatch:
                                            type: string
                                          targetBranchMatch:
                                            type: string
                                        type: object
                                      type: array
                                    gitea:
                                      properties:
                                        api:
                                          type: string
                                        insecure:
                                          type: boolean
                                        owner:
                                          type: string
                                        repo:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - api
                                        - owner
                                        - repo
                                      type: object
                                    github:
                                      properties:
                                        api:
                                          type: string
                                        appSecretName:
                                          type: string
                                        labels:
                                          items:
                                            type: string
                                          type: array
                                        owner:
                                          type: string
                                        repo:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - owner
                                        - repo
                                      type: object
                                    gitlab:
                                      properties:
                                        api:
                                          type: string
                                        insecure:
                                          type: boolean
                                        labels:
                                          items:
                                            type: string
                                          type: array
                                        project:
                                          type: string
                                        pullRequestState:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - project
                                      type: object
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                  type: object
                                scmProvider:
                                  properties:
                                    awsCodeCommit:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        region:
                                          type: string
                                        role:
                                          type: string
                                        tagFilters:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                              - key
                                            type: object
                                          type: array
                                      type: object
                                    azureDevOps:
                                      properties:
                                        accessTokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        organization:
                                          type: string
                                        teamProject:
                                          type: string
                                      required:
                                        - accessTokenRef
                                        - organization
                                        - teamProject
                                      type: object
                                    bitbucket:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        appPasswordRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                        owner:
                                          type: string
                                        user:
                                          type: string
                                      required:
                                        - appPasswordRef
                                        - owner
                                        - user
                                      type: object
                                    bitbucketServer:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        basicAuth:
                                          properties:
                                            passwordRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                            username:
                                              type: string
                                          required:
                                            - passwordRef
                                            - username
                                          type: object
                                        project:
                                          type: string
                                      required:
                                        - api
                                        - project
                                      type: object
                                    cloneProtocol:
                                      type: string
                                    filters:
                                      items:
                                        properties:
                                          branchMatch:
                                            type: string
                                          labelMatch:
                                            type: string
                                          pathsDoNotExist:
                                            items:
                                              type: string
                                            type: array
                                          pathsExist:
                                            items:
                                              type: string
                                            type: array
                                          repositoryMatch:
                                            type: string
                                        type: object
                                      type: array
                                    gitea:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        insecure:
                                          type: boolean
                                        owner:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - api
                                        - owner
                                      type: object
                                    github:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        appSecretName:
                                          type: string
                                        organization:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - organization
                                      type: object
                                    gitlab:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        group:
                                          type: string
                                        includeSharedProjects:
                                          type: boolean
                                        includeSubgroups:
                                          type: boolean
                                        insecure:
                                          type: boolean
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                        topic:
                                          type: string
                                      required:
                                        - group
                                      type: object
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                selector:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                          - key
                                          - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                              type: object
                            type: array
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                        required:
                          - generators
                        type: object
                      merge:
                        properties:
                          generators:
                            items:
                              properties:
                                clusterDecisionResource:
                                  properties:
                                    configMapRef:
                                      type: string
                                    labelSelector:
                                      properties:
                                        matchExpressions:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                      type: object
                                    name:
                                      type: string
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - configMapRef
                                  type: object
                                clusters:
                                  properties:
                                    selector:
                                      properties:
                                        matchExpressions:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          type: object
                                      type: object
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                git:
                                  properties:
                                    directories:
                                      items:
                                        properties:
                                          exclude:
                                            type: boolean
                                          path:
                                            type: string
                                        required:
                                          - path
                                        type: object
                                      type: array
                                    files:
                                      items:
                                        properties:
                                          path:
                                            type: string
                                        required:
                                          - path
                                        type: object
                                      type: array
                                    pathParamPrefix:
                                      type: string
                                    repoURL:
                                      type: string
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    revision:
                                      type: string
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - repoURL
                                    - revision
                                  type: object
                                list:
                                  properties:
                                    elements:
                                      items:
                                        x-kubernetes-preserve-unknown-fields: true
                                      type: array
                                    elementsYaml:
                                      type: string
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                  required:
                                    - elements
                                  type: object
                                matrix:
                                  x-kubernetes-preserve-unknown-fields: true
                                merge:
                                  x-kubernetes-preserve-unknown-fields: true
                                plugin:
                                  properties:
                                    configMapRef:
                                      properties:
                                        name:
                                          type: string
                                      required:
                                        - name
                                      type: object
                                    input:
                                      properties:
                                        parameters:
                                          additionalProperties:
                                            x-kubernetes-preserve-unknown-fields: true
                                          type: object
                                      type: object
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  required:
                                    - configMapRef
                                  type: object
                                pullRequest:
                                  properties:
                                    azuredevops:
                                      properties:
                                        api:
                                          type: string
                                        labels:
                                          items:
                                            type: string
                                          type: array
                                        organization:
                                          type: string
                                        project:
                                          type: string
                                        repo:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - organization
                                        - project
                                        - repo
                                      type: object
                                    bitbucket:
                                      properties:
                                        api:
                                          type: string
                                        basicAuth:
                                          properties:
                                            passwordRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                            username:
                                              type: string
                                          required:
                                            - passwordRef
                                            - username
                                          type: object
                                        bearerToken:
                                          properties:
                                            tokenRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                          required:
                                            - tokenRef
                                          type: object
                                        owner:
                                          type: string
                                        repo:
                                          type: string
                                      required:
                                        - owner
                                        - repo
                                      type: object
                                    bitbucketServer:
                                      properties:
                                        api:
                                          type: string
                                        basicAuth:
                                          properties:
                                            passwordRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                            username:
                                              type: string
                                          required:
                                            - passwordRef
                                            - username
                                          type: object
                                        project:
                                          type: string
                                        repo:
                                          type: string
                                      required:
                                        - api
                                        - project
                                        - repo
                                      type: object
                                    filters:
                                      items:
                                        properties:
                                          branchMatch:
                                            type: string
                                          targetBranchMatch:
                                            type: string
                                        type: object
                                      type: array
                                    gitea:
                                      properties:
                                        api:
                                          type: string
                                        insecure:
                                          type: boolean
                                        owner:
                                          type: string
                                        repo:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - api
                                        - owner
                                        - repo
                                      type: object
                                    github:
                                      properties:
                                        api:
                                          type: string
                                        appSecretName:
                                          type: string
                                        labels:
                                          items:
                                            type: string
                                          type: array
                                        owner:
                                          type: string
                                        repo:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - owner
                                        - repo
                                      type: object
                                    gitlab:
                                      properties:
                                        api:
                                          type: string
                                        insecure:
                                          type: boolean
                                        labels:
                                          items:
                                            type: string
                                          type: array
                                        project:
                                          type: string
                                        pullRequestState:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - project
                                      type: object
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                  type: object
                                scmProvider:
                                  properties:
                                    awsCodeCommit:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        region:
                                          type: string
                                        role:
                                          type: string
                                        tagFilters:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                              - key
                                            type: object
                                          type: array
                                      type: object
                                    azureDevOps:
                                      properties:
                                        accessTokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        organization:
                                          type: string
                                        teamProject:
                                          type: string
                                      required:
                                        - accessTokenRef
                                        - organization
                                        - teamProject
                                      type: object
                                    bitbucket:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        appPasswordRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                        owner:
                                          type: string
                                        user:
                                          type: string
                                      required:
                                        - appPasswordRef
                                        - owner
                                        - user
                                      type: object
                                    bitbucketServer:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        basicAuth:
                                          properties:
                                            passwordRef:
                                              properties:
                                                key:
                                                  type: string
                                                secretName:
                                                  type: string
                                              required:
                                                - key
                                                - secretName
                                              type: object
                                            username:
                                              type: string
                                          required:
                                            - passwordRef
                                            - username
                                          type: object
                                        project:
                                          type: string
                                      required:
                                        - api
                                        - project
                                      type: object
                                    cloneProtocol:
                                      type: string
                                    filters:
                                      items:
                                        properties:
                                          branchMatch:
                                            type: string
                                          labelMatch:
                                            type: string
                                          pathsDoNotExist:
                                            items:
                                              type: string
                                            type: array
                                          pathsExist:
                                            items:
                                              type: string
                                            type: array
                                          repositoryMatch:
                                            type: string
                                        type: object
                                      type: array
                                    gitea:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        insecure:
                                          type: boolean
                                        owner:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - api
                                        - owner
                                      type: object
                                    github:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        appSecretName:
                                          type: string
                                        organization:
                                          type: string
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                      required:
                                        - organization
                                      type: object
                                    gitlab:
                                      properties:
                                        allBranches:
                                          type: boolean
                                        api:
                                          type: string
                                        group:
                                          type: string
                                        includeSharedProjects:
                                          type: boolean
                                        includeSubgroups:
                                          type: boolean
                                        insecure:
                                          type: boolean
                                        tokenRef:
                                          properties:
                                            key:
                                              type: string
                                            secretName:
                                              type: string
                                          required:
                                            - key
                                            - secretName
                                          type: object
                                        topic:
                                          type: string
                                      required:
                                        - group
                                      type: object
                                    requeueAfterSeconds:
                                      format: int64
                                      type: integer
                                    template:
                                      properties:
                                        metadata:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            finalizers:
                                              items:
                                                type: string
                                              type: array
                                            labels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                          type: object
                                        spec:
                                          properties:
                                            destination:
                                              properties:
                                                name:
                                                  type: string
                                                namespace:
                                                  type: string
                                                server:
                                                  type: string
                                              type: object
                                            ignoreDifferences:
                                              items:
                                                properties:
                                                  group:
                                                    type: string
                                                  jqPathExpressions:
                                                    items:
                                                      type: string
                                                    type: array
                                                  jsonPointers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  kind:
                                                    type: string
                                                  managedFieldsManagers:
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    type: string
                                                  namespace:
                                                    type: string
                                                required:
                                                  - kind
                                                type: object
                                              type: array
                                            info:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            project:
                                              type: string
                                            revisionHistoryLimit:
                                              format: int64
                                              type: integer
                                            source:
                                              properties:
                                                chart:
                                                  type: string
                                                directory:
                                                  properties:
                                                    exclude:
                                                      type: string
                                                    include:
                                                      type: string
                                                    jsonnet:
                                                      properties:
                                                        extVars:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                        libs:
                                                          items:
                                                            type: string
                                                          type: array
                                                        tlas:
                                                          items:
                                                            properties:
                                                              code:
                                                                type: boolean
                                                              name:
                                                                type: string
                                                              value:
                                                                type: string
                                                            required:
                                                              - name
                                                              - value
                                                            type: object
                                                          type: array
                                                      type: object
                                                    recurse:
                                                      type: boolean
                                                  type: object
                                                helm:
                                                  properties:
                                                    fileParameters:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          path:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    ignoreMissingValueFiles:
                                                      type: boolean
                                                    parameters:
                                                      items:
                                                        properties:
                                                          forceString:
                                                            type: boolean
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        type: object
                                                      type: array
                                                    passCredentials:
                                                      type: boolean
                                                    releaseName:
                                                      type: string
                                                    skipCrds:
                                                      type: boolean
                                                    valueFiles:
                                                      items:
                                                        type: string
                                                      type: array
                                                    values:
                                                      type: string
                                                    valuesObject:
                                                      type: object
                                                      x-kubernetes-preserve-unknown-fields: true
                                                    version:
                                                      type: string
                                                  type: object
                                                kustomize:
                                                  properties:
                                                    commonAnnotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    commonAnnotationsEnvsubst:
                                                      type: boolean
                                                    commonLabels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    forceCommonAnnotations:
                                                      type: boolean
                                                    forceCommonLabels:
                                                      type: boolean
                                                    images:
                                                      items:
                                                        type: string
                                                      type: array
                                                    namePrefix:
                                                      type: string
                                                    nameSuffix:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    patches:
                                                      items:
                                                        properties:
                                                          options:
                                                            additionalProperties:
                                                              type: boolean
                                                            type: object
                                                          patch:
                                                            type: string
                                                          path:
                                                            type: string
                                                          target:
                                                            properties:
                                                              annotationSelector:
                                                                type: string
                                                              group:
                                                                type: string
                                                              kind:
                                                                type: string
                                                              labelSelector:
                                                                type: string
                                                              name:
                                                                type: string
                                                              namespace:
                                                                type: string
                                                              version:
                                                                type: string
                                                            type: object
                                                        type: object
                                                      type: array
                                                    replicas:
                                                      items:
                                                        properties:
                                                          count:
                                                            anyOf:
                                                              - type: integer
                                                              - type: string
                                                            x-kubernetes-int-or-string: true
                                                          name:
                                                            type: string
                                                        required:
                                                          - count
                                                          - name
                                                        type: object
                                                      type: array
                                                    version:
                                                      type: string
                                                  type: object
                                                path:
                                                  type: string
                                                plugin:
                                                  properties:
                                                    env:
                                                      items:
                                                        properties:
                                                          name:
                                                            type: string
                                                          value:
                                                            type: string
                                                        required:
                                                          - name
                                                          - value
                                                        type: object
                                                      type: array
                                                    name:
                                                      type: string
                                                    parameters:
                                                      items:
                                                        properties:
                                                          array:
                                                            items:
                                                              type: string
                                                            type: array
                                                          map:
                                                            additionalProperties:
                                                              type: string
                                                            type: object
                                                          name:
                                                            type: string
                                                          string:
                                                            type: string
                                                        type: object
                                                      type: array
                                                  type: object
                                                ref:
                                                  type: string
                                                repoURL:
                                                  type: string
                                                targetRevision:
                                                  type: string
                                              required:
                                                - repoURL
                                              type: object
                                            sources:
                                              items:
                                                properties:
                                                  chart:
                                                    type: string
                                                  directory:
                                                    properties:
                                                      exclude:
                                                        type: string
                                                      include:
                                                        type: string
                                                      jsonnet:
                                                        properties:
                                                          extVars:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                          libs:
                                                            items:
                                                              type: string
                                                            type: array
                                                          tlas:
                                                            items:
                                                              properties:
                                                                code:
                                                                  type: boolean
                                                                name:
                                                                  type: string
                                                                value:
                                                                  type: string
                                                              required:
                                                                - name
                                                                - value
                                                              type: object
                                                            type: array
                                                        type: object
                                                      recurse:
                                                        type: boolean
                                                    type: object
                                                  helm:
                                                    properties:
                                                      fileParameters:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            path:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      ignoreMissingValueFiles:
                                                        type: boolean
                                                      parameters:
                                                        items:
                                                          properties:
                                                            forceString:
                                                              type: boolean
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          type: object
                                                        type: array
                                                      passCredentials:
                                                        type: boolean
                                                      releaseName:
                                                        type: string
                                                      skipCrds:
                                                        type: boolean
                                                      valueFiles:
                                                        items:
                                                          type: string
                                                        type: array
                                                      values:
                                                        type: string
                                                      valuesObject:
                                                        type: object
                                                        x-kubernetes-preserve-unknown-fields: true
                                                      version:
                                                        type: string
                                                    type: object
                                                  kustomize:
                                                    properties:
                                                      commonAnnotations:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      commonAnnotationsEnvsubst:
                                                        type: boolean
                                                      commonLabels:
                                                        additionalProperties:
                                                          type: string
                                                        type: object
                                                      forceCommonAnnotations:
                                                        type: boolean
                                                      forceCommonLabels:
                                                        type: boolean
                                                      images:
                                                        items:
                                                          type: string
                                                        type: array
                                                      namePrefix:
                                                        type: string
                                                      nameSuffix:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      patches:
                                                        items:
                                                          properties:
                                                            options:
                                                              additionalProperties:
                                                                type: boolean
                                                              type: object
                                                            patch:
                                                              type: string
                                                            path:
                                                              type: string
                                                            target:
                                                              properties:
                                                                annotationSelector:
                                                                  type: string
                                                                group:
                                                                  type: string
                                                                kind:
                                                                  type: string
                                                                labelSelector:
                                                                  type: string
                                                                name:
                                                                  type: string
                                                                namespace:
                                                                  type: string
                                                                version:
                                                                  type: string
                                                              type: object
                                                          type: object
                                                        type: array
                                                      replicas:
                                                        items:
                                                          properties:
                                                            count:
                                                              anyOf:
                                                                - type: integer
                                                                - type: string
                                                              x-kubernetes-int-or-string: true
                                                            name:
                                                              type: string
                                                          required:
                                                            - count
                                                            - name
                                                          type: object
                                                        type: array
                                                      version:
                                                        type: string
                                                    type: object
                                                  path:
                                                    type: string
                                                  plugin:
                                                    properties:
                                                      env:
                                                        items:
                                                          properties:
                                                            name:
                                                              type: string
                                                            value:
                                                              type: string
                                                          required:
                                                            - name
                                                            - value
                                                          type: object
                                                        type: array
                                                      name:
                                                        type: string
                                                      parameters:
                                                        items:
                                                          properties:
                                                            array:
                                                              items:
                                                                type: string
                                                              type: array
                                                            map:
                                                              additionalProperties:
                                                                type: string
                                                              type: object
                                                            name:
                                                              type: string
                                                            string:
                                                              type: string
                                                          type: object
                                                        type: array
                                                    type: object
                                                  ref:
                                                    type: string
                                                  repoURL:
                                                    type: string
                                                  targetRevision:
                                                    type: string
                                                required:
                                                  - repoURL
                                                type: object
                                              type: array
                                            syncPolicy:
                                              properties:
                                                automated:
                                                  properties:
                                                    allowEmpty:
                                                      type: boolean
                                                    prune:
                                                      type: boolean
                                                    selfHeal:
                                                      type: boolean
                                                  type: object
                                                managedNamespaceMetadata:
                                                  properties:
                                                    annotations:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                    labels:
                                                      additionalProperties:
                                                        type: string
                                                      type: object
                                                  type: object
                                                retry:
                                                  properties:
                                                    backoff:
                                                      properties:
                                                        duration:
                                                          type: string
                                                        factor:
                                                          format: int64
                                                          type: integer
                                                        maxDuration:
                                                          type: string
                                                      type: object
                                                    limit:
                                                      format: int64
                                                      type: integer
                                                  type: object
                                                syncOptions:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                          required:
                                            - destination
                                            - project
                                          type: object
                                      required:
                                        - metadata
                                        - spec
                                      type: object
                                    values:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                                selector:
                                  properties:
                                    matchExpressions:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            items:
                                              type: string
                                            type: array
                                        required:
                                          - key
                                          - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      type: object
                                  type: object
                              type: object
                            type: array
                          mergeKeys:
                            items:
                              type: string
                            type: array
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                        required:
                          - generators
                          - mergeKeys
                        type: object
                      plugin:
                        properties:
                          configMapRef:
                            properties:
                              name:
                                type: string
                            required:
                              - name
                            type: object
                          input:
                            properties:
                              parameters:
                                additionalProperties:
                                  x-kubernetes-preserve-unknown-fields: true
                                type: object
                            type: object
                          requeueAfterSeconds:
                            format: int64
                            type: integer
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                          values:
                            additionalProperties:
                              type: string
                            type: object
                        required:
                          - configMapRef
                        type: object
                      pullRequest:
                        properties:
                          azuredevops:
                            properties:
                              api:
                                type: string
                              labels:
                                items:
                                  type: string
                                type: array
                              organization:
                                type: string
                              project:
                                type: string
                              repo:
                                type: string
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                            required:
                              - organization
                              - project
                              - repo
                            type: object
                          bitbucket:
                            properties:
                              api:
                                type: string
                              basicAuth:
                                properties:
                                  passwordRef:
                                    properties:
                                      key:
                                        type: string
                                      secretName:
                                        type: string
                                    required:
                                      - key
                                      - secretName
                                    type: object
                                  username:
                                    type: string
                                required:
                                  - passwordRef
                                  - username
                                type: object
                              bearerToken:
                                properties:
                                  tokenRef:
                                    properties:
                                      key:
                                        type: string
                                      secretName:
                                        type: string
                                    required:
                                      - key
                                      - secretName
                                    type: object
                                required:
                                  - tokenRef
                                type: object
                              owner:
                                type: string
                              repo:
                                type: string
                            required:
                              - owner
                              - repo
                            type: object
                          bitbucketServer:
                            properties:
                              api:
                                type: string
                              basicAuth:
                                properties:
                                  passwordRef:
                                    properties:
                                      key:
                                        type: string
                                      secretName:
                                        type: string
                                    required:
                                      - key
                                      - secretName
                                    type: object
                                  username:
                                    type: string
                                required:
                                  - passwordRef
                                  - username
                                type: object
                              project:
                                type: string
                              repo:
                                type: string
                            required:
                              - api
                              - project
                              - repo
                            type: object
                          filters:
                            items:
                              properties:
                                branchMatch:
                                  type: string
                                targetBranchMatch:
                                  type: string
                              type: object
                            type: array
                          gitea:
                            properties:
                              api:
                                type: string
                              insecure:
                                type: boolean
                              owner:
                                type: string
                              repo:
                                type: string
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                            required:
                              - api
                              - owner
                              - repo
                            type: object
                          github:
                            properties:
                              api:
                                type: string
                              appSecretName:
                                type: string
                              labels:
                                items:
                                  type: string
                                type: array
                              owner:
                                type: string
                              repo:
                                type: string
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                            required:
                              - owner
                              - repo
                            type: object
                          gitlab:
                            properties:
                              api:
                                type: string
                              insecure:
                                type: boolean
                              labels:
                                items:
                                  type: string
                                type: array
                              project:
                                type: string
                              pullRequestState:
                                type: string
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                            required:
                              - project
                            type: object
                          requeueAfterSeconds:
                            format: int64
                            type: integer
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                        type: object
                      scmProvider:
                        properties:
                          awsCodeCommit:
                            properties:
                              allBranches:
                                type: boolean
                              region:
                                type: string
                              role:
                                type: string
                              tagFilters:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                    - key
                                  type: object
                                type: array
                            type: object
                          azureDevOps:
                            properties:
                              accessTokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                              allBranches:
                                type: boolean
                              api:
                                type: string
                              organization:
                                type: string
                              teamProject:
                                type: string
                            required:
                              - accessTokenRef
                              - organization
                              - teamProject
                            type: object
                          bitbucket:
                            properties:
                              allBranches:
                                type: boolean
                              appPasswordRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                              owner:
                                type: string
                              user:
                                type: string
                            required:
                              - appPasswordRef
                              - owner
                              - user
                            type: object
                          bitbucketServer:
                            properties:
                              allBranches:
                                type: boolean
                              api:
                                type: string
                              basicAuth:
                                properties:
                                  passwordRef:
                                    properties:
                                      key:
                                        type: string
                                      secretName:
                                        type: string
                                    required:
                                      - key
                                      - secretName
                                    type: object
                                  username:
                                    type: string
                                required:
                                  - passwordRef
                                  - username
                                type: object
                              project:
                                type: string
                            required:
                              - api
                              - project
                            type: object
                          cloneProtocol:
                            type: string
                          filters:
                            items:
                              properties:
                                branchMatch:
                                  type: string
                                labelMatch:
                                  type: string
                                pathsDoNotExist:
                                  items:
                                    type: string
                                  type: array
                                pathsExist:
                                  items:
                                    type: string
                                  type: array
                                repositoryMatch:
                                  type: string
                              type: object
                            type: array
                          gitea:
                            properties:
                              allBranches:
                                type: boolean
                              api:
                                type: string
                              insecure:
                                type: boolean
                              owner:
                                type: string
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                            required:
                              - api
                              - owner
                            type: object
                          github:
                            properties:
                              allBranches:
                                type: boolean
                              api:
                                type: string
                              appSecretName:
                                type: string
                              organization:
                                type: string
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                            required:
                              - organization
                            type: object
                          gitlab:
                            properties:
                              allBranches:
                                type: boolean
                              api:
                                type: string
                              group:
                                type: string
                              includeSharedProjects:
                                type: boolean
                              includeSubgroups:
                                type: boolean
                              insecure:
                                type: boolean
                              tokenRef:
                                properties:
                                  key:
                                    type: string
                                  secretName:
                                    type: string
                                required:
                                  - key
                                  - secretName
                                type: object
                              topic:
                                type: string
                            required:
                              - group
                            type: object
                          requeueAfterSeconds:
                            format: int64
                            type: integer
                          template:
                            properties:
                              metadata:
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  finalizers:
                                    items:
                                      type: string
                                    type: array
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                type: object
                              spec:
                                properties:
                                  destination:
                                    properties:
                                      name:
                                        type: string
                                      namespace:
                                        type: string
                                      server:
                                        type: string
                                    type: object
                                  ignoreDifferences:
                                    items:
                                      properties:
                                        group:
                                          type: string
                                        jqPathExpressions:
                                          items:
                                            type: string
                                          type: array
                                        jsonPointers:
                                          items:
                                            type: string
                                          type: array
                                        kind:
                                          type: string
                                        managedFieldsManagers:
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                      required:
                                        - kind
                                      type: object
                                    type: array
                                  info:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  project:
                                    type: string
                                  revisionHistoryLimit:
                                    format: int64
                                    type: integer
                                  source:
                                    properties:
                                      chart:
                                        type: string
                                      directory:
                                        properties:
                                          exclude:
                                            type: string
                                          include:
                                            type: string
                                          jsonnet:
                                            properties:
                                              extVars:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                              libs:
                                                items:
                                                  type: string
                                                type: array
                                              tlas:
                                                items:
                                                  properties:
                                                    code:
                                                      type: boolean
                                                    name:
                                                      type: string
                                                    value:
                                                      type: string
                                                  required:
                                                    - name
                                                    - value
                                                  type: object
                                                type: array
                                            type: object
                                          recurse:
                                            type: boolean
                                        type: object
                                      helm:
                                        properties:
                                          fileParameters:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                path:
                                                  type: string
                                              type: object
                                            type: array
                                          ignoreMissingValueFiles:
                                            type: boolean
                                          parameters:
                                            items:
                                              properties:
                                                forceString:
                                                  type: boolean
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              type: object
                                            type: array
                                          passCredentials:
                                            type: boolean
                                          releaseName:
                                            type: string
                                          skipCrds:
                                            type: boolean
                                          valueFiles:
                                            items:
                                              type: string
                                            type: array
                                          values:
                                            type: string
                                          valuesObject:
                                            type: object
                                            x-kubernetes-preserve-unknown-fields: true
                                          version:
                                            type: string
                                        type: object
                                      kustomize:
                                        properties:
                                          commonAnnotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          commonAnnotationsEnvsubst:
                                            type: boolean
                                          commonLabels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          forceCommonAnnotations:
                                            type: boolean
                                          forceCommonLabels:
                                            type: boolean
                                          images:
                                            items:
                                              type: string
                                            type: array
                                          namePrefix:
                                            type: string
                                          nameSuffix:
                                            type: string
                                          namespace:
                                            type: string
                                          patches:
                                            items:
                                              properties:
                                                options:
                                                  additionalProperties:
                                                    type: boolean
                                                  type: object
                                                patch:
                                                  type: string
                                                path:
                                                  type: string
                                                target:
                                                  properties:
                                                    annotationSelector:
                                                      type: string
                                                    group:
                                                      type: string
                                                    kind:
                                                      type: string
                                                    labelSelector:
                                                      type: string
                                                    name:
                                                      type: string
                                                    namespace:
                                                      type: string
                                                    version:
                                                      type: string
                                                  type: object
                                              type: object
                                            type: array
                                          replicas:
                                            items:
                                              properties:
                                                count:
                                                  anyOf:
                                                    - type: integer
                                                    - type: string
                                                  x-kubernetes-int-or-string: true
                                                name:
                                                  type: string
                                              required:
                                                - count
                                                - name
                                              type: object
                                            type: array
                                          version:
                                            type: string
                                        type: object
                                      path:
                                        type: string
                                      plugin:
                                        properties:
                                          env:
                                            items:
                                              properties:
                                                name:
                                                  type: string
                                                value:
                                                  type: string
                                              required:
                                                - name
                                                - value
                                              type: object
                                            type: array
                                          name:
                                            type: string
                                          parameters:
                                            items:
                                              properties:
                                                array:
                                                  items:
                                                    type: string
                                                  type: array
                                                map:
                                                  additionalProperties:
                                                    type: string
                                                  type: object
                                                name:
                                                  type: string
                                                string:
                                                  type: string
                                              type: object
                                            type: array
                                        type: object
                                      ref:
                                        type: string
                                      repoURL:
                                        type: string
                                      targetRevision:
                                        type: string
                                    required:
                                      - repoURL
                                    type: object
                                  sources:
                                    items:
                                      properties:
                                        chart:
                                          type: string
                                        directory:
                                          properties:
                                            exclude:
                                              type: string
                                            include:
                                              type: string
                                            jsonnet:
                                              properties:
                                                extVars:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                                libs:
                                                  items:
                                                    type: string
                                                  type: array
                                                tlas:
                                                  items:
                                                    properties:
                                                      code:
                                                        type: boolean
                                                      name:
                                                        type: string
                                                      value:
                                                        type: string
                                                    required:
                                                      - name
                                                      - value
                                                    type: object
                                                  type: array
                                              type: object
                                            recurse:
                                              type: boolean
                                          type: object
                                        helm:
                                          properties:
                                            fileParameters:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  path:
                                                    type: string
                                                type: object
                                              type: array
                                            ignoreMissingValueFiles:
                                              type: boolean
                                            parameters:
                                              items:
                                                properties:
                                                  forceString:
                                                    type: boolean
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                type: object
                                              type: array
                                            passCredentials:
                                              type: boolean
                                            releaseName:
                                              type: string
                                            skipCrds:
                                              type: boolean
                                            valueFiles:
                                              items:
                                                type: string
                                              type: array
                                            values:
                                              type: string
                                            valuesObject:
                                              type: object
                                              x-kubernetes-preserve-unknown-fields: true
                                            version:
                                              type: string
                                          type: object
                                        kustomize:
                                          properties:
                                            commonAnnotations:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            commonAnnotationsEnvsubst:
                                              type: boolean
                                            commonLabels:
                                              additionalProperties:
                                                type: string
                                              type: object
                                            forceCommonAnnotations:
                                              type: boolean
                                            forceCommonLabels:
                                              type: boolean
                                            images:
                                              items:
                                                type: string
                                              type: array
                                            namePrefix:
                                              type: string
                                            nameSuffix:
                                              type: string
                                            namespace:
                                              type: string
                                            patches:
                                              items:
                                                properties:
                                                  options:
                                                    additionalProperties:
                                                      type: boolean
                                                    type: object
                                                  patch:
                                                    type: string
                                                  path:
                                                    type: string
                                                  target:
                                                    properties:
                                                      annotationSelector:
                                                        type: string
                                                      group:
                                                        type: string
                                                      kind:
                                                        type: string
                                                      labelSelector:
                                                        type: string
                                                      name:
                                                        type: string
                                                      namespace:
                                                        type: string
                                                      version:
                                                        type: string
                                                    type: object
                                                type: object
                                              type: array
                                            replicas:
                                              items:
                                                properties:
                                                  count:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    x-kubernetes-int-or-string: true
                                                  name:
                                                    type: string
                                                required:
                                                  - count
                                                  - name
                                                type: object
                                              type: array
                                            version:
                                              type: string
                                          type: object
                                        path:
                                          type: string
                                        plugin:
                                          properties:
                                            env:
                                              items:
                                                properties:
                                                  name:
                                                    type: string
                                                  value:
                                                    type: string
                                                required:
                                                  - name
                                                  - value
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                            parameters:
                                              items:
                                                properties:
                                                  array:
                                                    items:
                                                      type: string
                                                    type: array
                                                  map:
                                                    additionalProperties:
                                                      type: string
                                                    type: object
                                                  name:
                                                    type: string
                                                  string:
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        ref:
                                          type: string
                                        repoURL:
                                          type: string
                                        targetRevision:
                                          type: string
                                      required:
                                        - repoURL
                                      type: object
                                    type: array
                                  syncPolicy:
                                    properties:
                                      automated:
                                        properties:
                                          allowEmpty:
                                            type: boolean
                                          prune:
                                            type: boolean
                                          selfHeal:
                                            type: boolean
                                        type: object
                                      managedNamespaceMetadata:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            type: object
                                          labels:
                                            additionalProperties:
                                              type: string
                                            type: object
                                        type: object
                                      retry:
                                        properties:
                                          backoff:
                                            properties:
                                              duration:
                                                type: string
                                              factor:
                                                format: int64
                                                type: integer
                                              maxDuration:
                                                type: string
                                            type: object
                                          limit:
                                            format: int64
                                            type: integer
                                        type: object
                                      syncOptions:
                                        items:
                                          type: string
                                        type: array
                                    type: object
                                required:
                                  - destination
                                  - project
                                type: object
                            required:
                              - metadata
                              - spec
                            type: object
                          values:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      selector:
                        properties:
                          matchExpressions:
                            items:
                              properties:
                                key:
                                  type: string
                                operator:
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                    type: object
                  type: array
                goTemplate:
                  type: boolean
                goTemplateOptions:
                  items:
                    type: string
                  type: array
                ignoreApplicationDifferences:
                  items:
                    properties:
                      jqPathExpressions:
                        items:
                          type: string
                        type: array
                      jsonPointers:
                        items:
                          type: string
                        type: array
                      name:
                        type: string
                    type: object
                  type: array
                preservedFields:
                  properties:
                    annotations:
                      items:
                        type: string
                      type: array
                    labels:
                      items:
                        type: string
                      type: array
                  type: object
                strategy:
                  properties:
                    rollingSync:
                      properties:
                        steps:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              maxUpdate:
                                anyOf:
                                  - type: integer
                                  - type: string
                                x-kubernetes-int-or-string: true
                            type: object
                          type: array
                      type: object
                    type:
                      type: string
                  type: object
                syncPolicy:
                  properties:
                    applicationsSync:
                      enum:
                        - create-only
                        - create-update
                        - create-delete
                        - sync
                      type: string
                    preserveResourcesOnDeletion:
                      type: boolean
                  type: object
                template:
                  properties:
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        finalizers:
                          items:
                            type: string
                          type: array
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                        name:
                          type: string
                        namespace:
                          type: string
                      type: object
                    spec:
                      properties:
                        destination:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                            server:
                              type: string
                          type: object
                        ignoreDifferences:
                          items:
                            properties:
                              group:
                                type: string
                              jqPathExpressions:
                                items:
                                  type: string
                                type: array
                              jsonPointers:
                                items:
                                  type: string
                                type: array
                              kind:
                                type: string
                              managedFieldsManagers:
                                items:
                                  type: string
                                type: array
                              name:
                                type: string
                              namespace:
                                type: string
                            required:
                              - kind
                            type: object
                          type: array
                        info:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        project:
                          type: string
                        revisionHistoryLimit:
                          format: int64
                          type: integer
                        source:
                          properties:
                            chart:
                              type: string
                            directory:
                              properties:
                                exclude:
                                  type: string
                                include:
                                  type: string
                                jsonnet:
                                  properties:
                                    extVars:
                                      items:
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    libs:
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      items:
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  type: boolean
                              type: object
                            helm:
                              properties:
                                fileParameters:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      path:
                                        type: string
                                    type: object
                                  type: array
                                ignoreMissingValueFiles:
                                  type: boolean
                                parameters:
                                  items:
                                    properties:
                                      forceString:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                passCredentials:
                                  type: boolean
                                releaseName:
                                  type: string
                                skipCrds:
                                  type: boolean
                                valueFiles:
                                  items:
                                    type: string
                                  type: array
                                values:
                                  type: string
                                valuesObject:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                version:
                                  type: string
                              type: object
                            kustomize:
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                commonAnnotationsEnvsubst:
                                  type: boolean
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  type: object
                                forceCommonAnnotations:
                                  type: boolean
                                forceCommonLabels:
                                  type: boolean
                                images:
                                  items:
                                    type: string
                                  type: array
                                namePrefix:
                                  type: string
                                nameSuffix:
                                  type: string
                                namespace:
                                  type: string
                                patches:
                                  items:
                                    properties:
                                      options:
                                        additionalProperties:
                                          type: boolean
                                        type: object
                                      patch:
                                        type: string
                                      path:
                                        type: string
                                      target:
                                        properties:
                                          annotationSelector:
                                            type: string
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          labelSelector:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                    type: object
                                  type: array
                                replicas:
                                  items:
                                    properties:
                                      count:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        x-kubernetes-int-or-string: true
                                      name:
                                        type: string
                                    required:
                                      - count
                                      - name
                                    type: object
                                  type: array
                                version:
                                  type: string
                              type: object
                            path:
                              type: string
                            plugin:
                              properties:
                                env:
                                  items:
                                    properties:
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                                parameters:
                                  items:
                                    properties:
                                      array:
                                        items:
                                          type: string
                                        type: array
                                      map:
                                        additionalProperties:
                                          type: string
                                        type: object
                                      name:
                                        type: string
                                      string:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            ref:
                              type: string
                            repoURL:
                              type: string
                            targetRevision:
                              type: string
                          required:
                            - repoURL
                          type: object
                        sources:
                          items:
                            properties:
                              chart:
                                type: string
                              directory:
                                properties:
                                  exclude:
                                    type: string
                                  include:
                                    type: string
                                  jsonnet:
                                    properties:
                                      extVars:
                                        items:
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                      libs:
                                        items:
                                          type: string
                                        type: array
                                      tlas:
                                        items:
                                          properties:
                                            code:
                                              type: boolean
                                            name:
                                              type: string
                                            value:
                                              type: string
                                          required:
                                            - name
                                            - value
                                          type: object
                                        type: array
                                    type: object
                                  recurse:
                                    type: boolean
                                type: object
                              helm:
                                properties:
                                  fileParameters:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        path:
                                          type: string
                                      type: object
                                    type: array
                                  ignoreMissingValueFiles:
                                    type: boolean
                                  parameters:
                                    items:
                                      properties:
                                        forceString:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      type: object
                                    type: array
                                  passCredentials:
                                    type: boolean
                                  releaseName:
                                    type: string
                                  skipCrds:
                                    type: boolean
                                  valueFiles:
                                    items:
                                      type: string
                                    type: array
                                  values:
                                    type: string
                                  valuesObject:
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  version:
                                    type: string
                                type: object
                              kustomize:
                                properties:
                                  commonAnnotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  commonAnnotationsEnvsubst:
                                    type: boolean
                                  commonLabels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  forceCommonAnnotations:
                                    type: boolean
                                  forceCommonLabels:
                                    type: boolean
                                  images:
                                    items:
                                      type: string
                                    type: array
                                  namePrefix:
                                    type: string
                                  nameSuffix:
                                    type: string
                                  namespace:
                                    type: string
                                  patches:
                                    items:
                                      properties:
                                        options:
                                          additionalProperties:
                                            type: boolean
                                          type: object
                                        patch:
                                          type: string
                                        path:
                                          type: string
                                        target:
                                          properties:
                                            annotationSelector:
                                              type: string
                                            group:
                                              type: string
                                            kind:
                                              type: string
                                            labelSelector:
                                              type: string
                                            name:
                                              type: string
                                            namespace:
                                              type: string
                                            version:
                                              type: string
                                          type: object
                                      type: object
                                    type: array
                                  replicas:
                                    items:
                                      properties:
                                        count:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          x-kubernetes-int-or-string: true
                                        name:
                                          type: string
                                      required:
                                        - count
                                        - name
                                      type: object
                                    type: array
                                  version:
                                    type: string
                                type: object
                              path:
                                type: string
                              plugin:
                                properties:
                                  env:
                                    items:
                                      properties:
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                  parameters:
                                    items:
                                      properties:
                                        array:
                                          items:
                                            type: string
                                          type: array
                                        map:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        name:
                                          type: string
                                        string:
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              ref:
                                type: string
                              repoURL:
                                type: string
                              targetRevision:
                                type: string
                            required:
                              - repoURL
                            type: object
                          type: array
                        syncPolicy:
                          properties:
                            automated:
                              properties:
                                allowEmpty:
                                  type: boolean
                                prune:
                                  type: boolean
                                selfHeal:
                                  type: boolean
                              type: object
                            managedNamespaceMetadata:
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                              type: object
                            retry:
                              properties:
                                backoff:
                                  properties:
                                    duration:
                                      type: string
                                    factor:
                                      format: int64
                                      type: integer
                                    maxDuration:
                                      type: string
                                  type: object
                                limit:
                                  format: int64
                                  type: integer
                              type: object
                            syncOptions:
                              items:
                                type: string
                              type: array
                          type: object
                      required:
                        - destination
                        - project
                      type: object
                  required:
                    - metadata
                    - spec
                  type: object
              required:
                - generators
                - template
              type: object
            status:
              properties:
                applicationStatus:
                  items:
                    properties:
                      application:
                        type: string
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      status:
                        type: string
                      step:
                        type: string
                    required:
                      - application
                      - message
                      - status
                      - step
                    type: object
                  type: array
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: appprojects.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: appprojects.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: AppProject
    listKind: AppProjectList
    plural: appprojects
    shortNames:
      - appproj
      - appprojs
    singular: appproject
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: 'AppProject provides a logical grouping of applications, providing controls for: * where the apps may deploy to (cluster whitelist) * what may be deployed (repository whitelist, resource whitelist/blacklist) * who can access these applications (roles, OIDC group claims bindings) * and what they can do (RBAC policies) * automation access to these roles (JWT tokens)'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AppProjectSpec is the specification of an AppProject
              properties:
                clusterResourceBlacklist:
                  description: ClusterResourceBlacklist contains list of blacklisted cluster level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                clusterResourceWhitelist:
                  description: ClusterResourceWhitelist contains list of whitelisted cluster level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                description:
                  description: Description contains optional project description
                  type: string
                destinations:
                  description: Destinations contains list of destinations available for deployment
                  items:
                    description: ApplicationDestination holds information about the application's destination
                    properties:
                      name:
                        description: Name is an alternate way of specifying the target cluster by its symbolic name. This must be set if Server is not set.
                        type: string
                      namespace:
                        description: Namespace specifies the target namespace for the application's resources. The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
                        type: string
                      server:
                        description: Server specifies the URL of the target cluster's Kubernetes control plane API. This must be set if Name is not set.
                        type: string
                    type: object
                  type: array
                namespaceResourceBlacklist:
                  description: NamespaceResourceBlacklist contains list of blacklisted namespace level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                namespaceResourceWhitelist:
                  description: NamespaceResourceWhitelist contains list of whitelisted namespace level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                orphanedResources:
                  description: OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
                  properties:
                    ignore:
                      description: Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
                      items:
                        description: OrphanedResourceKey is a reference to a resource to be ignored from
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                    warn:
                      description: Warn indicates if warning condition should be created for apps which have orphaned resources
                      type: boolean
                  type: object
                permitOnlyProjectScopedClusters:
                  description: PermitOnlyProjectScopedClusters determines whether destinations can only reference clusters which are project-scoped
                  type: boolean
                roles:
                  description: Roles are user defined RBAC roles associated with this project
                  items:
                    description: ProjectRole represents a role that has access to a project
                    properties:
                      description:
                        description: Description is a description of the role
                        type: string
                      groups:
                        description: Groups are a list of OIDC group claims bound to this role
                        items:
                          type: string
                        type: array
                      jwtTokens:
                        description: JWTTokens are a list of generated JWT tokens bound to this role
                        items:
                          description: JWTToken holds the issuedAt and expiresAt values of a token
                          properties:
                            exp:
                              format: int64
                              type: integer
                            iat:
                              format: int64
                              type: integer
                            id:
                              type: string
                          required:
                            - iat
                          type: object
                        type: array
                      name:
                        description: Name is a name for this role
                        type: string
                      policies:
                        description: Policies Stores a list of casbin formatted strings that define access policies for the role in the project
                        items:
                          type: string
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                signatureKeys:
                  description: SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
                  items:
                    description: SignatureKey is the specification of a key required to verify commit signatures with
                    properties:
                      keyID:
                        description: The ID of the key in hexadecimal notation
                        type: string
                    required:
                      - keyID
                    type: object
                  type: array
                sourceNamespaces:
                  description: SourceNamespaces defines the namespaces application resources are allowed to be created in
                  items:
                    type: string
                  type: array
                sourceRepos:
                  description: SourceRepos contains list of repository URLs which can be used for deployment
                  items:
                    type: string
                  type: array
                syncWindows:
                  description: SyncWindows controls when syncs can be run for apps in this project
                  items:
                    description: SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
                    properties:
                      applications:
                        description: Applications contains a list of applications that the window will apply to
                        items:
                          type: string
                        type: array
                      clusters:
                        description: Clusters contains a list of clusters that the window will apply to
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration is the amount of time the sync window will be open
                        type: string
                      kind:
                        description: Kind defines if the window allows or blocks syncs
                        type: string
                      manualSync:
                        description: ManualSync enables manual syncs when they would otherwise be blocked
                        type: boolean
                      namespaces:
                        description: Namespaces contains a list of namespaces that the window will apply to
                        items:
                          type: string
                        type: array
                      schedule:
                        description: Schedule is the time the window will begin, specified in cron format
                        type: string
                      timeZone:
                        description: TimeZone of the sync that will be applied to the schedule
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: AppProjectStatus contains status information for AppProject CRs
              properties:
                jwtTokensByRole:
                  additionalProperties:
                    description: JWTTokens represents a list of JWT tokens
                    properties:
                      items:
                        items:
                          description: JWTToken holds the issuedAt and expiresAt values of a token
                          properties:
                            exp:
                              format: int64
                              type: integer
                            iat:
                              format: int64
                              type: integer
                            id:
                              type: string
                          required:
                            - iat
                          type: object
                        type: array
                    type: object
                  description: JWTTokensByRole contains a list of JWT tokens issued for a given role
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: acraccesstokens.generators.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: generators.external-secrets.io
  names:
    categories:
      - acraccesstoken
    kind: ACRAccessToken
    listKind: ACRAccessTokenList
    plural: acraccesstokens
    shortNames:
      - acraccesstoken
    singular: acraccesstoken
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: "ACRAccessToken returns a Azure Container Registry token that can be used for pushing/pulling images. Note: by default it will return an ACR Refresh Token with full access (depending on the identity). This can be scoped down to the repository level using .spec.scope. In case scope is defined it will return an ACR Access Token. \n See docs: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md"
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'ACRAccessTokenSpec defines how to generate the access token e.g. how to authenticate and which registry to use. see: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#overview'
              properties:
                auth:
                  properties:
                    managedIdentity:
                      description: ManagedIdentity uses Azure Managed Identity to authenticate with Azure.
                      properties:
                        identityId:
                          description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                          type: string
                      type: object
                    servicePrincipal:
                      description: ServicePrincipal uses Azure Service Principal credentials to authenticate with Azure.
                      properties:
                        secretRef:
                          description: Configuration used to authenticate with Azure using static credentials stored in a Kind=Secret.
                          properties:
                            clientId:
                              description: The Azure clientId of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            clientSecret:
                              description: The Azure ClientSecret of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - secretRef
                      type: object
                    workloadIdentity:
                      description: WorkloadIdentity uses Azure Workload Identity to authenticate with Azure.
                      properties:
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                  type: object
                environmentType:
                  default: PublicCloud
                  description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                  enum:
                    - PublicCloud
                    - USGovernmentCloud
                    - ChinaCloud
                    - GermanCloud
                  type: string
                registry:
                  description: the domain name of the ACR registry e.g. foobarexample.azurecr.io
                  type: string
                scope:
                  description: "Define the scope for the access token, e.g. pull/push access for a repository. if not provided it will return a refresh token that has full scope. Note: you need to pin it down to the repository level, there is no wildcard available. \n examples: repository:my-repository:pull,push repository:my-repository:pull \n see docs for details: https://docs.docker.com/registry/spec/auth/scope/"
                  type: string
                tenantId:
                  description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                  type: string
              required:
                - auth
                - registry
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clusterexternalsecrets.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: external-secrets.io
  names:
    categories:
      - externalsecrets
    kind: ClusterExternalSecret
    listKind: ClusterExternalSecretList
    plural: clusterexternalsecrets
    shortNames:
      - ces
    singular: clusterexternalsecret
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.externalSecretSpec.secretStoreRef.name
          name: Store
          type: string
        - jsonPath: .spec.refreshTime
          name: Refresh Interval
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterExternalSecret is the Schema for the clusterexternalsecrets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterExternalSecretSpec defines the desired state of ClusterExternalSecret.
              properties:
                externalSecretMetadata:
                  description: The metadata of the external secrets to be created
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      type: object
                  type: object
                externalSecretName:
                  description: The name of the external secrets to be created defaults to the name of the ClusterExternalSecret
                  type: string
                externalSecretSpec:
                  description: The spec for the ExternalSecrets to be created
                  properties:
                    data:
                      description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                      items:
                        description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                        properties:
                          remoteRef:
                            description: RemoteRef points to the remote secret and defines which secret (version/property/..) to fetch.
                            properties:
                              conversionStrategy:
                                default: Default
                                description: Used to define a conversion Strategy
                                enum:
                                  - Default
                                  - Unicode
                                type: string
                              decodingStrategy:
                                default: None
                                description: Used to define a decoding Strategy
                                enum:
                                  - Auto
                                  - Base64
                                  - Base64URL
                                  - None
                                type: string
                              key:
                                description: Key is the key used in the Provider, mandatory
                                type: string
                              metadataPolicy:
                                default: None
                                description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                enum:
                                  - None
                                  - Fetch
                                type: string
                              property:
                                description: Used to select a specific property of the Provider value (if a map), if supported
                                type: string
                              version:
                                description: Used to select a specific version of the Provider value, if supported
                                type: string
                            required:
                              - key
                            type: object
                          secretKey:
                            description: SecretKey defines the key in which the controller stores the value. This is the key in the Kind=Secret
                            type: string
                          sourceRef:
                            description: SourceRef allows you to override the source from which the value will pulled from.
                            maxProperties: 1
                            properties:
                              generatorRef:
                                description: "GeneratorRef points to a generator custom resource. \n Deprecated: The generatorRef is not implemented in .data[]. this will be removed with v1."
                                properties:
                                  apiVersion:
                                    default: generators.external-secrets.io/v1alpha1
                                    description: Specify the apiVersion of the generator resource
                                    type: string
                                  kind:
                                    description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                    type: string
                                  name:
                                    description: Specify the name of the generator resource
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              storeRef:
                                description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                properties:
                                  kind:
                                    description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                    type: string
                                  name:
                                    description: Name of the SecretStore resource
                                    type: string
                                required:
                                  - name
                                type: object
                            type: object
                        required:
                          - remoteRef
                          - secretKey
                        type: object
                      type: array
                    dataFrom:
                      description: DataFrom is used to fetch all properties from a specific Provider data If multiple entries are specified, the Secret keys are merged in the specified order
                      items:
                        properties:
                          extract:
                            description: 'Used to extract multiple key/value pairs from one secret Note: Extract does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                            properties:
                              conversionStrategy:
                                default: Default
                                description: Used to define a conversion Strategy
                                enum:
                                  - Default
                                  - Unicode
                                type: string
                              decodingStrategy:
                                default: None
                                description: Used to define a decoding Strategy
                                enum:
                                  - Auto
                                  - Base64
                                  - Base64URL
                                  - None
                                type: string
                              key:
                                description: Key is the key used in the Provider, mandatory
                                type: string
                              metadataPolicy:
                                default: None
                                description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                enum:
                                  - None
                                  - Fetch
                                type: string
                              property:
                                description: Used to select a specific property of the Provider value (if a map), if supported
                                type: string
                              version:
                                description: Used to select a specific version of the Provider value, if supported
                                type: string
                            required:
                              - key
                            type: object
                          find:
                            description: 'Used to find secrets based on tags or regular expressions Note: Find does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                            properties:
                              conversionStrategy:
                                default: Default
                                description: Used to define a conversion Strategy
                                enum:
                                  - Default
                                  - Unicode
                                type: string
                              decodingStrategy:
                                default: None
                                description: Used to define a decoding Strategy
                                enum:
                                  - Auto
                                  - Base64
                                  - Base64URL
                                  - None
                                type: string
                              name:
                                description: Finds secrets based on the name.
                                properties:
                                  regexp:
                                    description: Finds secrets base
                                    type: string
                                type: object
                              path:
                                description: A root path to start the find operations.
                                type: string
                              tags:
                                additionalProperties:
                                  type: string
                                description: Find secrets based on tags.
                                type: object
                            type: object
                          rewrite:
                            description: Used to rewrite secret Keys after getting them from the secret Provider Multiple Rewrite operations can be provided. They are applied in a layered order (first to last)
                            items:
                              properties:
                                regexp:
                                  description: Used to rewrite with regular expressions. The resulting key will be the output of a regexp.ReplaceAll operation.
                                  properties:
                                    source:
                                      description: Used to define the regular expression of a re.Compiler.
                                      type: string
                                    target:
                                      description: Used to define the target pattern of a ReplaceAll operation.
                                      type: string
                                  required:
                                    - source
                                    - target
                                  type: object
                                transform:
                                  description: Used to apply string transformation on the secrets. The resulting key will be the output of the template applied by the operation.
                                  properties:
                                    template:
                                      description: Used to define the template to apply on the secret name. `.value ` will specify the secret name in the template.
                                      type: string
                                  required:
                                    - template
                                  type: object
                              type: object
                            type: array
                          sourceRef:
                            description: SourceRef points to a store or generator which contains secret values ready to use. Use this in combination with Extract or Find pull values out of a specific SecretStore. When sourceRef points to a generator Extract or Find is not supported. The generator returns a static map of values
                            maxProperties: 1
                            properties:
                              generatorRef:
                                description: GeneratorRef points to a generator custom resource.
                                properties:
                                  apiVersion:
                                    default: generators.external-secrets.io/v1alpha1
                                    description: Specify the apiVersion of the generator resource
                                    type: string
                                  kind:
                                    description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                    type: string
                                  name:
                                    description: Specify the name of the generator resource
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              storeRef:
                                description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                properties:
                                  kind:
                                    description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                    type: string
                                  name:
                                    description: Name of the SecretStore resource
                                    type: string
                                required:
                                  - name
                                type: object
                            type: object
                        type: object
                      type: array
                    refreshInterval:
                      default: 1h
                      description: RefreshInterval is the amount of time before the values are read again from the SecretStore provider Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to fetch and create it once. Defaults to 1h.
                      type: string
                    secretStoreRef:
                      description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                      properties:
                        kind:
                          description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                          type: string
                        name:
                          description: Name of the SecretStore resource
                          type: string
                      required:
                        - name
                      type: object
                    target:
                      default:
                        creationPolicy: Owner
                        deletionPolicy: Retain
                      description: ExternalSecretTarget defines the Kubernetes Secret to be created There can be only one target per ExternalSecret.
                      properties:
                        creationPolicy:
                          default: Owner
                          description: CreationPolicy defines rules on how to create the resulting Secret Defaults to 'Owner'
                          enum:
                            - Owner
                            - Orphan
                            - Merge
                            - None
                          type: string
                        deletionPolicy:
                          default: Retain
                          description: DeletionPolicy defines rules on how to delete the resulting Secret Defaults to 'Retain'
                          enum:
                            - Delete
                            - Merge
                            - Retain
                          type: string
                        immutable:
                          description: Immutable defines if the final secret will be immutable
                          type: boolean
                        name:
                          description: Name defines the name of the Secret resource to be managed This field is immutable Defaults to the .metadata.name of the ExternalSecret resource
                          type: string
                        template:
                          description: Template defines a blueprint for the created Secret resource.
                          properties:
                            data:
                              additionalProperties:
                                type: string
                              type: object
                            engineVersion:
                              default: v2
                              description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                              enum:
                                - v1
                                - v2
                              type: string
                            mergePolicy:
                              default: Replace
                              enum:
                                - Replace
                                - Merge
                              type: string
                            metadata:
                              description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  type: object
                              type: object
                            templateFrom:
                              items:
                                properties:
                                  configMap:
                                    properties:
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            templateAs:
                                              default: Values
                                              enum:
                                                - Values
                                                - KeysAndValues
                                              type: string
                                          required:
                                            - key
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                    required:
                                      - items
                                      - name
                                    type: object
                                  literal:
                                    type: string
                                  secret:
                                    properties:
                                      items:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            templateAs:
                                              default: Values
                                              enum:
                                                - Values
                                                - KeysAndValues
                                              type: string
                                          required:
                                            - key
                                          type: object
                                        type: array
                                      name:
                                        type: string
                                    required:
                                      - items
                                      - name
                                    type: object
                                  target:
                                    default: Data
                                    enum:
                                      - Data
                                      - Annotations
                                      - Labels
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                      type: object
                  type: object
                namespaceSelector:
                  description: The labels to select by to find the Namespaces to create the ExternalSecrets in.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                namespaces:
                  description: Choose namespaces by name. This field is ORed with anything that NamespaceSelector ends up choosing.
                  items:
                    type: string
                  type: array
                refreshTime:
                  description: The time in which the controller should reconcile its objects and recheck namespaces for labels.
                  type: string
              required:
                - externalSecretSpec
              type: object
            status:
              description: ClusterExternalSecretStatus defines the observed state of ClusterExternalSecret.
              properties:
                conditions:
                  items:
                    properties:
                      message:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                externalSecretName:
                  description: ExternalSecretName is the name of the ExternalSecrets created by the ClusterExternalSecret
                  type: string
                failedNamespaces:
                  description: Failed namespaces are the namespaces that failed to apply an ExternalSecret
                  items:
                    description: ClusterExternalSecretNamespaceFailure represents a failed namespace deployment and it's reason.
                    properties:
                      namespace:
                        description: Namespace is the namespace that failed when trying to apply an ExternalSecret
                        type: string
                      reason:
                        description: Reason is why the ExternalSecret failed to apply to the namespace
                        type: string
                    required:
                      - namespace
                    type: object
                  type: array
                provisionedNamespaces:
                  description: ProvisionedNamespaces are the namespaces where the ClusterExternalSecret has secrets
                  items:
                    type: string
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: clustersecretstores.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: external-secrets.io
  names:
    categories:
      - externalsecrets
    kind: ClusterSecretStore
    listKind: ClusterSecretStoreList
    plural: clustersecretstores
    shortNames:
      - css
    singular: clustersecretstore
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
      deprecated: true
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SecretStoreSpec defines the desired state of SecretStore.
              properties:
                controller:
                  description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                  type: string
                provider:
                  description: Used to configure the provider. Only one provider may be set
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    akeyless:
                      description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                      properties:
                        akeylessGWApiURL:
                          description: Akeyless GW API Url from which the secrets to be fetched from.
                          type: string
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Akeyless.
                          properties:
                            kubernetesAuth:
                              description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                              properties:
                                accessID:
                                  description: the Akeyless Kubernetes auth-method access-id
                                  type: string
                                k8sConfName:
                                  description: Kubernetes-auth configuration name in Akeyless-Gateway
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - accessID
                                - k8sConfName
                              type: object
                            secretRef:
                              description: Reference to a Secret that contains the details to authenticate with Akeyless.
                              properties:
                                accessID:
                                  description: The SecretAccessID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessType:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessTypeParam:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        caBundle:
                          description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                      required:
                        - akeylessGWApiURL
                        - authSecretRef
                      type: object
                    alibaba:
                      description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                      properties:
                        auth:
                          description: AlibabaAuth contains a secretRef for credentials.
                          properties:
                            rrsa:
                              description: Authenticate against Alibaba using RRSA.
                              properties:
                                oidcProviderArn:
                                  type: string
                                oidcTokenFilePath:
                                  type: string
                                roleArn:
                                  type: string
                                sessionName:
                                  type: string
                              required:
                                - oidcProviderArn
                                - oidcTokenFilePath
                                - roleArn
                                - sessionName
                              type: object
                            secretRef:
                              description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessKeySecretSecretRef:
                                  description: The AccessKeySecret is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - accessKeyIDSecretRef
                                - accessKeySecretSecretRef
                              type: object
                          type: object
                        regionID:
                          description: Alibaba Region to be used for the provider
                          type: string
                      required:
                        - auth
                        - regionID
                      type: object
                    aws:
                      description: AWS configures this store to sync secrets using AWS Secret Manager provider
                      properties:
                        auth:
                          description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                          properties:
                            jwt:
                              description: Authenticate against AWS using service account tokens.
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            secretRef:
                              description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        region:
                          description: AWS Region to be used for the provider
                          type: string
                        role:
                          description: Role is a Role ARN which the SecretManager provider will assume
                          type: string
                        service:
                          description: Service defines which service should be used to fetch the secrets
                          enum:
                            - SecretsManager
                            - ParameterStore
                          type: string
                      required:
                        - region
                        - service
                      type: object
                    azurekv:
                      description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                      properties:
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                          properties:
                            clientId:
                              description: The Azure clientId of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            clientSecret:
                              description: The Azure ClientSecret of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        authType:
                          default: ServicePrincipal
                          description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                          enum:
                            - ServicePrincipal
                            - ManagedIdentity
                            - WorkloadIdentity
                          type: string
                        identityId:
                          description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        tenantId:
                          description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                          type: string
                        vaultUrl:
                          description: Vault Url from which the secrets to be fetched from.
                          type: string
                      required:
                        - vaultUrl
                      type: object
                    fake:
                      description: Fake configures a store with static key/value pairs
                      properties:
                        data:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                              valueMap:
                                additionalProperties:
                                  type: string
                                type: object
                              version:
                                type: string
                            required:
                              - key
                            type: object
                          type: array
                      required:
                        - data
                      type: object
                    gcpsm:
                      description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                      properties:
                        auth:
                          description: Auth defines the information necessary to authenticate against GCP
                          properties:
                            secretRef:
                              properties:
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            workloadIdentity:
                              properties:
                                clusterLocation:
                                  type: string
                                clusterName:
                                  type: string
                                clusterProjectID:
                                  type: string
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - clusterLocation
                                - clusterName
                                - serviceAccountRef
                              type: object
                          type: object
                        projectID:
                          description: ProjectID project where secret is located
                          type: string
                      type: object
                    gitlab:
                      description: GitLab configures this store to sync secrets using GitLab Variables provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a GitLab instance.
                          properties:
                            SecretRef:
                              properties:
                                accessToken:
                                  description: AccessToken is used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          required:
                            - SecretRef
                          type: object
                        projectID:
                          description: ProjectID specifies a project where secrets are located.
                          type: string
                        url:
                          description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                          type: string
                      required:
                        - auth
                      type: object
                    ibm:
                      description: IBM configures this store to sync secrets using IBM Cloud provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                          properties:
                            secretRef:
                              properties:
                                secretApiKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          required:
                            - secretRef
                          type: object
                        serviceUrl:
                          description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                          type: string
                      required:
                        - auth
                      type: object
                    kubernetes:
                      description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            cert:
                              description: has both clientCert and clientKey as secretKeySelector
                              properties:
                                clientCert:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                clientKey:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            serviceAccount:
                              description: points to a service account that should be used for authentication
                              properties:
                                serviceAccount:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            token:
                              description: use static token to authenticate with
                              properties:
                                bearerToken:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        remoteNamespace:
                          default: default
                          description: Remote namespace to fetch the secrets from
                          type: string
                        server:
                          description: configures the Kubernetes server Address.
                          properties:
                            caBundle:
                              description: CABundle is a base64-encoded CA certificate
                              format: byte
                              type: string
                            caProvider:
                              description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                              properties:
                                key:
                                  description: The key the value inside of the provider type to use, only used with "Secret" type
                                  type: string
                                name:
                                  description: The name of the object located at the provider type.
                                  type: string
                                namespace:
                                  description: The namespace the Provider type is in.
                                  type: string
                                type:
                                  description: The type of provider to use such as "Secret", or "ConfigMap".
                                  enum:
                                    - Secret
                                    - ConfigMap
                                  type: string
                              required:
                                - name
                                - type
                              type: object
                            url:
                              default: kubernetes.default
                              description: configures the Kubernetes server Address.
                              type: string
                          type: object
                      required:
                        - auth
                      type: object
                    oracle:
                      description: Oracle configures this store to sync secrets using Oracle Vault provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, instance principal is used. Optionally, the authenticating principal type and/or user data may be supplied for the use of workload identity and user principal.
                          properties:
                            secretRef:
                              description: SecretRef to pass through sensitive information.
                              properties:
                                fingerprint:
                                  description: Fingerprint is the fingerprint of the API private key.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                privatekey:
                                  description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - fingerprint
                                - privatekey
                              type: object
                            tenancy:
                              description: Tenancy is the tenancy OCID where user is located.
                              type: string
                            user:
                              description: User is an access OCID specific to the account.
                              type: string
                          required:
                            - secretRef
                            - tenancy
                            - user
                          type: object
                        compartment:
                          description: Compartment is the vault compartment OCID. Required for PushSecret
                          type: string
                        encryptionKey:
                          description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                          type: string
                        principalType:
                          description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                          enum:
                            - ""
                            - UserPrincipal
                            - InstancePrincipal
                            - Workload
                          type: string
                        region:
                          description: Region is the region where vault is located.
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        vault:
                          description: Vault is the vault's OCID of the specific vault where secret is located.
                          type: string
                      required:
                        - region
                        - vault
                      type: object
                    vault:
                      description: Vault configures this store to sync secrets using Hashi provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Vault server.
                          properties:
                            appRole:
                              description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                              properties:
                                path:
                                  default: approle
                                  description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                  type: string
                                roleId:
                                  description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                  type: string
                                secretRef:
                                  description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                                - roleId
                                - secretRef
                              type: object
                            cert:
                              description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                              properties:
                                clientCert:
                                  description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            jwt:
                              description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                              properties:
                                kubernetesServiceAccountToken:
                                  description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                  properties:
                                    audiences:
                                      description: Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified.
                                      items:
                                        type: string
                                      type: array
                                    expirationSeconds:
                                      description: Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to 10 minutes.
                                      format: int64
                                      type: integer
                                    serviceAccountRef:
                                      description: Service account field containing the name of a kubernetes ServiceAccount.
                                      properties:
                                        audiences:
                                          description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountRef
                                  type: object
                                path:
                                  default: jwt
                                  description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                  type: string
                                role:
                                  description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                  type: string
                                secretRef:
                                  description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                              type: object
                            kubernetes:
                              description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                              properties:
                                mountPath:
                                  default: kubernetes
                                  description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                  type: string
                                role:
                                  description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - mountPath
                                - role
                              type: object
                            ldap:
                              description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                              properties:
                                path:
                                  default: ldap
                                  description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                  type: string
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                username:
                                  description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                            tokenSecretRef:
                              description: TokenSecretRef authenticates with Vault by presenting a token.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caBundle:
                          description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Vault server certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        forwardInconsistent:
                          description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                          type: boolean
                        namespace:
                          description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                          type: string
                        path:
                          description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                          type: string
                        readYourWrites:
                          description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                          type: boolean
                        server:
                          description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                          type: string
                        version:
                          default: v2
                          description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                          enum:
                            - v1
                            - v2
                          type: string
                      required:
                        - auth
                        - server
                      type: object
                    webhook:
                      description: Webhook configures this store to sync secrets using a generic templated webhook
                      properties:
                        body:
                          description: Body
                          type: string
                        caBundle:
                          description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate webhook server certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers
                          type: object
                        method:
                          description: Webhook Method
                          type: string
                        result:
                          description: Result formatting
                          properties:
                            jsonPath:
                              description: Json path of return value
                              type: string
                          type: object
                        secrets:
                          description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                          items:
                            properties:
                              name:
                                description: Name of this secret in templates
                                type: string
                              secretRef:
                                description: Secret ref to fill in credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                            required:
                              - name
                              - secretRef
                            type: object
                          type: array
                        timeout:
                          description: Timeout
                          type: string
                        url:
                          description: Webhook url to call
                          type: string
                      required:
                        - result
                        - url
                      type: object
                    yandexlockbox:
                      description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex Lockbox
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                  type: object
                retrySettings:
                  description: Used to configure http retries if failed
                  properties:
                    maxRetries:
                      format: int32
                      type: integer
                    retryInterval:
                      type: string
                  type: object
              required:
                - provider
              type: object
            status:
              description: SecretStoreStatus defines the observed state of the SecretStore.
              properties:
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
        - jsonPath: .status.capabilities
          name: Capabilities
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SecretStoreSpec defines the desired state of SecretStore.
              properties:
                conditions:
                  description: Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
                  items:
                    description: ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in for a ClusterSecretStore instance.
                    properties:
                      namespaceSelector:
                        description: Choose namespace using a labelSelector
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        description: Choose namespaces by name
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                controller:
                  description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                  type: string
                provider:
                  description: Used to configure the provider. Only one provider may be set
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    akeyless:
                      description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                      properties:
                        akeylessGWApiURL:
                          description: Akeyless GW API Url from which the secrets to be fetched from.
                          type: string
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Akeyless.
                          properties:
                            kubernetesAuth:
                              description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                              properties:
                                accessID:
                                  description: the Akeyless Kubernetes auth-method access-id
                                  type: string
                                k8sConfName:
                                  description: Kubernetes-auth configuration name in Akeyless-Gateway
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - accessID
                                - k8sConfName
                              type: object
                            secretRef:
                              description: Reference to a Secret that contains the details to authenticate with Akeyless.
                              properties:
                                accessID:
                                  description: The SecretAccessID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessType:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessTypeParam:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        caBundle:
                          description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                      required:
                        - akeylessGWApiURL
                        - authSecretRef
                      type: object
                    alibaba:
                      description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                      properties:
                        auth:
                          description: AlibabaAuth contains a secretRef for credentials.
                          properties:
                            rrsa:
                              description: Authenticate against Alibaba using RRSA.
                              properties:
                                oidcProviderArn:
                                  type: string
                                oidcTokenFilePath:
                                  type: string
                                roleArn:
                                  type: string
                                sessionName:
                                  type: string
                              required:
                                - oidcProviderArn
                                - oidcTokenFilePath
                                - roleArn
                                - sessionName
                              type: object
                            secretRef:
                              description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessKeySecretSecretRef:
                                  description: The AccessKeySecret is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - accessKeyIDSecretRef
                                - accessKeySecretSecretRef
                              type: object
                          type: object
                        regionID:
                          description: Alibaba Region to be used for the provider
                          type: string
                      required:
                        - auth
                        - regionID
                      type: object
                    aws:
                      description: AWS configures this store to sync secrets using AWS Secret Manager provider
                      properties:
                        additionalRoles:
                          description: AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
                          items:
                            type: string
                          type: array
                        auth:
                          description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                          properties:
                            jwt:
                              description: Authenticate against AWS using service account tokens.
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            secretRef:
                              description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                sessionTokenSecretRef:
                                  description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        externalID:
                          description: AWS External ID set on assumed IAM roles
                          type: string
                        region:
                          description: AWS Region to be used for the provider
                          type: string
                        role:
                          description: Role is a Role ARN which the provider will assume
                          type: string
                        secretsManager:
                          description: SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
                          properties:
                            forceDeleteWithoutRecovery:
                              description: 'Specifies whether to delete the secret without any recovery window. You can''t use both this parameter and RecoveryWindowInDays in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery'
                              type: boolean
                            recoveryWindowInDays:
                              description: 'The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can''t use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays'
                              format: int64
                              type: integer
                          type: object
                        service:
                          description: Service defines which service should be used to fetch the secrets
                          enum:
                            - SecretsManager
                            - ParameterStore
                          type: string
                        sessionTags:
                          description: AWS STS assume role session tags
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          type: array
                        transitiveTagKeys:
                          description: AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
                          items:
                            type: string
                          type: array
                      required:
                        - region
                        - service
                      type: object
                    azurekv:
                      description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                      properties:
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                          properties:
                            clientId:
                              description: The Azure clientId of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            clientSecret:
                              description: The Azure ClientSecret of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        authType:
                          default: ServicePrincipal
                          description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                          enum:
                            - ServicePrincipal
                            - ManagedIdentity
                            - WorkloadIdentity
                          type: string
                        environmentType:
                          default: PublicCloud
                          description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                          enum:
                            - PublicCloud
                            - USGovernmentCloud
                            - ChinaCloud
                            - GermanCloud
                          type: string
                        identityId:
                          description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        tenantId:
                          description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                          type: string
                        vaultUrl:
                          description: Vault Url from which the secrets to be fetched from.
                          type: string
                      required:
                        - vaultUrl
                      type: object
                    conjur:
                      description: Conjur configures this store to sync secrets using conjur provider
                      properties:
                        auth:
                          properties:
                            apikey:
                              properties:
                                account:
                                  type: string
                                apiKeyRef:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                userRef:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - account
                                - apiKeyRef
                                - userRef
                              type: object
                            jwt:
                              properties:
                                account:
                                  type: string
                                secretRef:
                                  description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Conjur using the JWT authentication method.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional ServiceAccountRef specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                serviceID:
                                  description: The conjur authn jwt webservice id
                                  type: string
                              required:
                                - account
                                - serviceID
                              type: object
                          type: object
                        caBundle:
                          type: string
                        caProvider:
                          description: Used to provide custom certificate authority (CA) certificates for a secret store. The CAProvider points to a Secret or ConfigMap resource that contains a PEM-encoded certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        url:
                          type: string
                      required:
                        - auth
                        - url
                      type: object
                    delinea:
                      description: Delinea DevOps Secrets Vault https://docs.delinea.com/online-help/products/devops-secrets-vault/current
                      properties:
                        clientId:
                          description: ClientID is the non-secret part of the credential.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                        clientSecret:
                          description: ClientSecret is the secret part of the credential.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                        tenant:
                          description: Tenant is the chosen hostname / site name.
                          type: string
                        tld:
                          description: TLD is based on the server location that was chosen during provisioning. If unset, defaults to "com".
                          type: string
                        urlTemplate:
                          description: URLTemplate If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
                          type: string
                      required:
                        - clientId
                        - clientSecret
                        - tenant
                      type: object
                    doppler:
                      description: Doppler configures this store to sync secrets using the Doppler provider
                      properties:
                        auth:
                          description: Auth configures how the Operator authenticates with the Doppler API
                          properties:
                            secretRef:
                              properties:
                                dopplerToken:
                                  description: The DopplerToken is used for authentication. See https://docs.doppler.com/reference/api#authentication for auth token types. The Key attribute defaults to dopplerToken if not specified.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - dopplerToken
                              type: object
                          required:
                            - secretRef
                          type: object
                        config:
                          description: Doppler config (required if not using a Service Token)
                          type: string
                        format:
                          description: Format enables the downloading of secrets as a file (string)
                          enum:
                            - json
                            - dotnet-json
                            - env
                            - yaml
                            - docker
                          type: string
                        nameTransformer:
                          description: Environment variable compatible name transforms that change secret names to a different format
                          enum:
                            - upper-camel
                            - camel
                            - lower-snake
                            - tf-var
                            - dotnet-env
                            - lower-kebab
                          type: string
                        project:
                          description: Doppler project (required if not using a Service Token)
                          type: string
                      required:
                        - auth
                      type: object
                    fake:
                      description: Fake configures a store with static key/value pairs
                      properties:
                        data:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                              valueMap:
                                additionalProperties:
                                  type: string
                                description: 'Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.'
                                type: object
                              version:
                                type: string
                            required:
                              - key
                            type: object
                          type: array
                      required:
                        - data
                      type: object
                    gcpsm:
                      description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                      properties:
                        auth:
                          description: Auth defines the information necessary to authenticate against GCP
                          properties:
                            secretRef:
                              properties:
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            workloadIdentity:
                              properties:
                                clusterLocation:
                                  type: string
                                clusterName:
                                  type: string
                                clusterProjectID:
                                  type: string
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - clusterLocation
                                - clusterName
                                - serviceAccountRef
                              type: object
                          type: object
                        projectID:
                          description: ProjectID project where secret is located
                          type: string
                      type: object
                    gitlab:
                      description: GitLab configures this store to sync secrets using GitLab Variables provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a GitLab instance.
                          properties:
                            SecretRef:
                              properties:
                                accessToken:
                                  description: AccessToken is used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          required:
                            - SecretRef
                          type: object
                        environment:
                          description: Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
                          type: string
                        groupIDs:
                          description: GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
                          items:
                            type: string
                          type: array
                        inheritFromGroups:
                          description: InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
                          type: boolean
                        projectID:
                          description: ProjectID specifies a project where secrets are located.
                          type: string
                        url:
                          description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                          type: string
                      required:
                        - auth
                      type: object
                    ibm:
                      description: IBM configures this store to sync secrets using IBM Cloud provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            containerAuth:
                              description: IBM Container-based auth with IAM Trusted Profile.
                              properties:
                                iamEndpoint:
                                  type: string
                                profile:
                                  description: the IBM Trusted Profile
                                  type: string
                                tokenLocation:
                                  description: Location the token is mounted on the pod
                                  type: string
                              required:
                                - profile
                              type: object
                            secretRef:
                              properties:
                                secretApiKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        serviceUrl:
                          description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                          type: string
                      required:
                        - auth
                      type: object
                    keepersecurity:
                      description: KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
                      properties:
                        authRef:
                          description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                        folderID:
                          type: string
                      required:
                        - authRef
                        - folderID
                      type: object
                    kubernetes:
                      description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            cert:
                              description: has both clientCert and clientKey as secretKeySelector
                              properties:
                                clientCert:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                clientKey:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            serviceAccount:
                              description: points to a service account that should be used for authentication
                              properties:
                                audiences:
                                  description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: The name of the ServiceAccount resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                            token:
                              description: use static token to authenticate with
                              properties:
                                bearerToken:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        remoteNamespace:
                          default: default
                          description: Remote namespace to fetch the secrets from
                          type: string
                        server:
                          description: configures the Kubernetes server Address.
                          properties:
                            caBundle:
                              description: CABundle is a base64-encoded CA certificate
                              format: byte
                              type: string
                            caProvider:
                              description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                              properties:
                                key:
                                  description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                  type: string
                                name:
                                  description: The name of the object located at the provider type.
                                  type: string
                                namespace:
                                  description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                  type: string
                                type:
                                  description: The type of provider to use such as "Secret", or "ConfigMap".
                                  enum:
                                    - Secret
                                    - ConfigMap
                                  type: string
                              required:
                                - name
                                - type
                              type: object
                            url:
                              default: kubernetes.default
                              description: configures the Kubernetes server Address.
                              type: string
                          type: object
                      required:
                        - auth
                      type: object
                    onepassword:
                      description: OnePassword configures this store to sync secrets using the 1Password Cloud provider
                      properties:
                        auth:
                          description: Auth defines the information necessary to authenticate against OnePassword Connect Server
                          properties:
                            secretRef:
                              description: OnePasswordAuthSecretRef holds secret references for 1Password credentials.
                              properties:
                                connectTokenSecretRef:
                                  description: The ConnectToken is used for authentication to a 1Password Connect Server.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - connectTokenSecretRef
                              type: object
                          required:
                            - secretRef
                          type: object
                        connectHost:
                          description: ConnectHost defines the OnePassword Connect Server to connect to
                          type: string
                        vaults:
                          additionalProperties:
                            type: integer
                          description: Vaults defines which OnePassword vaults to search in which order
                          type: object
                      required:
                        - auth
                        - connectHost
                        - vaults
                      type: object
                    oracle:
                      description: Oracle configures this store to sync secrets using Oracle Vault provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, use the instance principal, otherwise the user credentials specified in Auth.
                          properties:
                            secretRef:
                              description: SecretRef to pass through sensitive information.
                              properties:
                                fingerprint:
                                  description: Fingerprint is the fingerprint of the API private key.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                privatekey:
                                  description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - fingerprint
                                - privatekey
                              type: object
                            tenancy:
                              description: Tenancy is the tenancy OCID where user is located.
                              type: string
                            user:
                              description: User is an access OCID specific to the account.
                              type: string
                          required:
                            - secretRef
                            - tenancy
                            - user
                          type: object
                        compartment:
                          description: Compartment is the vault compartment OCID. Required for PushSecret
                          type: string
                        encryptionKey:
                          description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                          type: string
                        principalType:
                          description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                          enum:
                            - ""
                            - UserPrincipal
                            - InstancePrincipal
                            - Workload
                          type: string
                        region:
                          description: Region is the region where vault is located.
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        vault:
                          description: Vault is the vault's OCID of the specific vault where secret is located.
                          type: string
                      required:
                        - region
                        - vault
                      type: object
                    scaleway:
                      description: Scaleway
                      properties:
                        accessKey:
                          description: AccessKey is the non-secret part of the api key.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                        apiUrl:
                          description: APIURL is the url of the api to use. Defaults to https://api.scaleway.com
                          type: string
                        projectId:
                          description: 'ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings'
                          type: string
                        region:
                          description: 'Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone'
                          type: string
                        secretKey:
                          description: SecretKey is the non-secret part of the api key.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                      required:
                        - accessKey
                        - projectId
                        - region
                        - secretKey
                      type: object
                    senhasegura:
                      description: Senhasegura configures this store to sync secrets using senhasegura provider
                      properties:
                        auth:
                          description: Auth defines parameters to authenticate in senhasegura
                          properties:
                            clientId:
                              type: string
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          required:
                            - clientId
                            - clientSecretSecretRef
                          type: object
                        ignoreSslCertificate:
                          default: false
                          description: IgnoreSslCertificate defines if SSL certificate must be ignored
                          type: boolean
                        module:
                          description: Module defines which senhasegura module should be used to get secrets
                          type: string
                        url:
                          description: URL of senhasegura
                          type: string
                      required:
                        - auth
                        - module
                        - url
                      type: object
                    vault:
                      description: Vault configures this store to sync secrets using Hashi provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Vault server.
                          properties:
                            appRole:
                              description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                              properties:
                                path:
                                  default: approle
                                  description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                  type: string
                                roleId:
                                  description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                  type: string
                                roleRef:
                                  description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretRef:
                                  description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                                - secretRef
                              type: object
                            cert:
                              description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                              properties:
                                clientCert:
                                  description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            iam:
                              description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                              properties:
                                externalID:
                                  description: AWS External ID set on assumed IAM roles
                                  type: string
                                jwt:
                                  description: Specify a service account with IRSA enabled
                                  properties:
                                    serviceAccountRef:
                                      description: A reference to a ServiceAccount resource.
                                      properties:
                                        audiences:
                                          description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  type: object
                                path:
                                  description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                  type: string
                                region:
                                  description: AWS region
                                  type: string
                                role:
                                  description: This is the AWS role to be assumed before talking to vault
                                  type: string
                                secretRef:
                                  description: Specify credentials in a Secret object
                                  properties:
                                    accessKeyIDSecretRef:
                                      description: The AccessKeyID is used for authentication
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                    secretAccessKeySecretRef:
                                      description: The SecretAccessKey is used for authentication
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                    sessionTokenSecretRef:
                                      description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                  type: object
                                vaultAwsIamServerID:
                                  description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                  type: string
                                vaultRole:
                                  description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                  type: string
                              required:
                                - vaultRole
                              type: object
                            jwt:
                              description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                              properties:
                                kubernetesServiceAccountToken:
                                  description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                  properties:
                                    audiences:
                                      description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                      items:
                                        type: string
                                      type: array
                                    expirationSeconds:
                                      description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                      format: int64
                                      type: integer
                                    serviceAccountRef:
                                      description: Service account field containing the name of a kubernetes ServiceAccount.
                                      properties:
                                        audiences:
                                          description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountRef
                                  type: object
                                path:
                                  default: jwt
                                  description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                  type: string
                                role:
                                  description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                  type: string
                                secretRef:
                                  description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                              type: object
                            kubernetes:
                              description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                              properties:
                                mountPath:
                                  default: kubernetes
                                  description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                  type: string
                                role:
                                  description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - mountPath
                                - role
                              type: object
                            ldap:
                              description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                              properties:
                                path:
                                  default: ldap
                                  description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                  type: string
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                username:
                                  description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                            tokenSecretRef:
                              description: TokenSecretRef authenticates with Vault by presenting a token.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            userPass:
                              description: UserPass authenticates with Vault by passing username/password pair
                              properties:
                                path:
                                  default: user
                                  description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                                  type: string
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                username:
                                  description: Username is a user name used to authenticate using the UserPass Vault authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                          type: object
                        caBundle:
                          description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Vault server certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        forwardInconsistent:
                          description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                          type: boolean
                        namespace:
                          description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                          type: string
                        path:
                          description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                          type: string
                        readYourWrites:
                          description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                          type: boolean
                        server:
                          description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                          type: string
                        version:
                          default: v2
                          description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                          enum:
                            - v1
                            - v2
                          type: string
                      required:
                        - auth
                        - server
                      type: object
                    webhook:
                      description: Webhook configures this store to sync secrets using a generic templated webhook
                      properties:
                        body:
                          description: Body
                          type: string
                        caBundle:
                          description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate webhook server certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers
                          type: object
                        method:
                          description: Webhook Method
                          type: string
                        result:
                          description: Result formatting
                          properties:
                            jsonPath:
                              description: Json path of return value
                              type: string
                          type: object
                        secrets:
                          description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                          items:
                            properties:
                              name:
                                description: Name of this secret in templates
                                type: string
                              secretRef:
                                description: Secret ref to fill in credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                            required:
                              - name
                              - secretRef
                            type: object
                          type: array
                        timeout:
                          description: Timeout
                          type: string
                        url:
                          description: Webhook url to call
                          type: string
                      required:
                        - result
                        - url
                      type: object
                    yandexcertificatemanager:
                      description: YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex Certificate Manager
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                    yandexlockbox:
                      description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex Lockbox
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                  type: object
                refreshInterval:
                  description: Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
                  type: integer
                retrySettings:
                  description: Used to configure http retries if failed
                  properties:
                    maxRetries:
                      format: int32
                      type: integer
                    retryInterval:
                      type: string
                  type: object
              required:
                - provider
              type: object
            status:
              description: SecretStoreStatus defines the observed state of the SecretStore.
              properties:
                capabilities:
                  description: SecretStoreCapabilities defines the possible operations a SecretStore can do.
                  type: string
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: ecrauthorizationtokens.generators.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: generators.external-secrets.io
  names:
    categories:
      - ecrauthorizationtoken
    kind: ECRAuthorizationToken
    listKind: ECRAuthorizationTokenList
    plural: ecrauthorizationtokens
    shortNames:
      - ecrauthorizationtoken
    singular: ecrauthorizationtoken
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ECRAuthorizationTokenSpec uses the GetAuthorizationToken API to retrieve an authorization token. The authorization token is valid for 12 hours. The authorizationToken returned is a base64 encoded string that can be decoded and used in a docker login command to authenticate to a registry. For more information, see Registry authentication (https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth) in the Amazon Elastic Container Registry User Guide.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                auth:
                  description: Auth defines how to authenticate with AWS
                  properties:
                    jwt:
                      description: Authenticate against AWS using service account tokens.
                      properties:
                        serviceAccountRef:
                          description: A reference to a ServiceAccount resource.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                      type: object
                    secretRef:
                      description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                      properties:
                        accessKeyIDSecretRef:
                          description: The AccessKeyID is used for authentication
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                        secretAccessKeySecretRef:
                          description: The SecretAccessKey is used for authentication
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                        sessionTokenSecretRef:
                          description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                      type: object
                  type: object
                region:
                  description: Region specifies the region to operate in.
                  type: string
                role:
                  description: You can assume a role before making calls to the desired AWS service.
                  type: string
              required:
                - region
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: externalsecrets.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: external-secrets.io
  names:
    categories:
      - externalsecrets
    kind: ExternalSecret
    listKind: ExternalSecretList
    plural: externalsecrets
    shortNames:
      - es
    singular: externalsecret
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.secretStoreRef.name
          name: Store
          type: string
        - jsonPath: .spec.refreshInterval
          name: Refresh Interval
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
      deprecated: true
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ExternalSecret is the Schema for the external-secrets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExternalSecretSpec defines the desired state of ExternalSecret.
              properties:
                data:
                  description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                  items:
                    description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                    properties:
                      remoteRef:
                        description: ExternalSecretDataRemoteRef defines Provider data location.
                        properties:
                          conversionStrategy:
                            default: Default
                            description: Used to define a conversion Strategy
                            enum:
                              - Default
                              - Unicode
                            type: string
                          key:
                            description: Key is the key used in the Provider, mandatory
                            type: string
                          property:
                            description: Used to select a specific property of the Provider value (if a map), if supported
                            type: string
                          version:
                            description: Used to select a specific version of the Provider value, if supported
                            type: string
                        required:
                          - key
                        type: object
                      secretKey:
                        type: string
                    required:
                      - remoteRef
                      - secretKey
                    type: object
                  type: array
                dataFrom:
                  description: DataFrom is used to fetch all properties from a specific Provider data If multiple entries are specified, the Secret keys are merged in the specified order
                  items:
                    description: ExternalSecretDataRemoteRef defines Provider data location.
                    properties:
                      conversionStrategy:
                        default: Default
                        description: Used to define a conversion Strategy
                        enum:
                          - Default
                          - Unicode
                        type: string
                      key:
                        description: Key is the key used in the Provider, mandatory
                        type: string
                      property:
                        description: Used to select a specific property of the Provider value (if a map), if supported
                        type: string
                      version:
                        description: Used to select a specific version of the Provider value, if supported
                        type: string
                    required:
                      - key
                    type: object
                  type: array
                refreshInterval:
                  default: 1h
                  description: RefreshInterval is the amount of time before the values are read again from the SecretStore provider Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to fetch and create it once. Defaults to 1h.
                  type: string
                secretStoreRef:
                  description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                  properties:
                    kind:
                      description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                      type: string
                    name:
                      description: Name of the SecretStore resource
                      type: string
                  required:
                    - name
                  type: object
                target:
                  description: ExternalSecretTarget defines the Kubernetes Secret to be created There can be only one target per ExternalSecret.
                  properties:
                    creationPolicy:
                      default: Owner
                      description: CreationPolicy defines rules on how to create the resulting Secret Defaults to 'Owner'
                      enum:
                        - Owner
                        - Merge
                        - None
                      type: string
                    immutable:
                      description: Immutable defines if the final secret will be immutable
                      type: boolean
                    name:
                      description: Name defines the name of the Secret resource to be managed This field is immutable Defaults to the .metadata.name of the ExternalSecret resource
                      type: string
                    template:
                      description: Template defines a blueprint for the created Secret resource.
                      properties:
                        data:
                          additionalProperties:
                            type: string
                          type: object
                        engineVersion:
                          default: v1
                          description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                          enum:
                            - v1
                            - v2
                          type: string
                        metadata:
                          description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        templateFrom:
                          items:
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              configMap:
                                properties:
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                      required:
                                        - key
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - items
                                  - name
                                type: object
                              secret:
                                properties:
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                      required:
                                        - key
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - items
                                  - name
                                type: object
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                  type: object
              required:
                - secretStoreRef
                - target
              type: object
            status:
              properties:
                binding:
                  description: Binding represents a servicebinding.io Provisioned Service reference to the secret
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                refreshTime:
                  description: refreshTime is the time and date the external secret was fetched and the target secret updated
                  format: date-time
                  nullable: true
                  type: string
                syncedResourceVersion:
                  description: SyncedResourceVersion keeps track of the last synced version
                  type: string
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.secretStoreRef.name
          name: Store
          type: string
        - jsonPath: .spec.refreshInterval
          name: Refresh Interval
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: ExternalSecret is the Schema for the external-secrets API.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExternalSecretSpec defines the desired state of ExternalSecret.
              properties:
                data:
                  description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                  items:
                    description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                    properties:
                      remoteRef:
                        description: RemoteRef points to the remote secret and defines which secret (version/property/..) to fetch.
                        properties:
                          conversionStrategy:
                            default: Default
                            description: Used to define a conversion Strategy
                            enum:
                              - Default
                              - Unicode
                            type: string
                          decodingStrategy:
                            default: None
                            description: Used to define a decoding Strategy
                            enum:
                              - Auto
                              - Base64
                              - Base64URL
                              - None
                            type: string
                          key:
                            description: Key is the key used in the Provider, mandatory
                            type: string
                          metadataPolicy:
                            default: None
                            description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                            enum:
                              - None
                              - Fetch
                            type: string
                          property:
                            description: Used to select a specific property of the Provider value (if a map), if supported
                            type: string
                          version:
                            description: Used to select a specific version of the Provider value, if supported
                            type: string
                        required:
                          - key
                        type: object
                      secretKey:
                        description: SecretKey defines the key in which the controller stores the value. This is the key in the Kind=Secret
                        type: string
                      sourceRef:
                        description: SourceRef allows you to override the source from which the value will pulled from.
                        maxProperties: 1
                        properties:
                          generatorRef:
                            description: "GeneratorRef points to a generator custom resource. \n Deprecated: The generatorRef is not implemented in .data[]. this will be removed with v1."
                            properties:
                              apiVersion:
                                default: generators.external-secrets.io/v1alpha1
                                description: Specify the apiVersion of the generator resource
                                type: string
                              kind:
                                description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                type: string
                              name:
                                description: Specify the name of the generator resource
                                type: string
                            required:
                              - kind
                              - name
                            type: object
                          storeRef:
                            description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                            properties:
                              kind:
                                description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                type: string
                              name:
                                description: Name of the SecretStore resource
                                type: string
                            required:
                              - name
                            type: object
                        type: object
                    required:
                      - remoteRef
                      - secretKey
                    type: object
                  type: array
                dataFrom:
                  description: DataFrom is used to fetch all properties from a specific Provider data If multiple entries are specified, the Secret keys are merged in the specified order
                  items:
                    properties:
                      extract:
                        description: 'Used to extract multiple key/value pairs from one secret Note: Extract does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                        properties:
                          conversionStrategy:
                            default: Default
                            description: Used to define a conversion Strategy
                            enum:
                              - Default
                              - Unicode
                            type: string
                          decodingStrategy:
                            default: None
                            description: Used to define a decoding Strategy
                            enum:
                              - Auto
                              - Base64
                              - Base64URL
                              - None
                            type: string
                          key:
                            description: Key is the key used in the Provider, mandatory
                            type: string
                          metadataPolicy:
                            default: None
                            description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                            enum:
                              - None
                              - Fetch
                            type: string
                          property:
                            description: Used to select a specific property of the Provider value (if a map), if supported
                            type: string
                          version:
                            description: Used to select a specific version of the Provider value, if supported
                            type: string
                        required:
                          - key
                        type: object
                      find:
                        description: 'Used to find secrets based on tags or regular expressions Note: Find does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                        properties:
                          conversionStrategy:
                            default: Default
                            description: Used to define a conversion Strategy
                            enum:
                              - Default
                              - Unicode
                            type: string
                          decodingStrategy:
                            default: None
                            description: Used to define a decoding Strategy
                            enum:
                              - Auto
                              - Base64
                              - Base64URL
                              - None
                            type: string
                          name:
                            description: Finds secrets based on the name.
                            properties:
                              regexp:
                                description: Finds secrets base
                                type: string
                            type: object
                          path:
                            description: A root path to start the find operations.
                            type: string
                          tags:
                            additionalProperties:
                              type: string
                            description: Find secrets based on tags.
                            type: object
                        type: object
                      rewrite:
                        description: Used to rewrite secret Keys after getting them from the secret Provider Multiple Rewrite operations can be provided. They are applied in a layered order (first to last)
                        items:
                          properties:
                            regexp:
                              description: Used to rewrite with regular expressions. The resulting key will be the output of a regexp.ReplaceAll operation.
                              properties:
                                source:
                                  description: Used to define the regular expression of a re.Compiler.
                                  type: string
                                target:
                                  description: Used to define the target pattern of a ReplaceAll operation.
                                  type: string
                              required:
                                - source
                                - target
                              type: object
                            transform:
                              description: Used to apply string transformation on the secrets. The resulting key will be the output of the template applied by the operation.
                              properties:
                                template:
                                  description: Used to define the template to apply on the secret name. `.value ` will specify the secret name in the template.
                                  type: string
                              required:
                                - template
                              type: object
                          type: object
                        type: array
                      sourceRef:
                        description: SourceRef points to a store or generator which contains secret values ready to use. Use this in combination with Extract or Find pull values out of a specific SecretStore. When sourceRef points to a generator Extract or Find is not supported. The generator returns a static map of values
                        maxProperties: 1
                        properties:
                          generatorRef:
                            description: GeneratorRef points to a generator custom resource.
                            properties:
                              apiVersion:
                                default: generators.external-secrets.io/v1alpha1
                                description: Specify the apiVersion of the generator resource
                                type: string
                              kind:
                                description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                type: string
                              name:
                                description: Specify the name of the generator resource
                                type: string
                            required:
                              - kind
                              - name
                            type: object
                          storeRef:
                            description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                            properties:
                              kind:
                                description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                type: string
                              name:
                                description: Name of the SecretStore resource
                                type: string
                            required:
                              - name
                            type: object
                        type: object
                    type: object
                  type: array
                refreshInterval:
                  default: 1h
                  description: RefreshInterval is the amount of time before the values are read again from the SecretStore provider Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to fetch and create it once. Defaults to 1h.
                  type: string
                secretStoreRef:
                  description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                  properties:
                    kind:
                      description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                      type: string
                    name:
                      description: Name of the SecretStore resource
                      type: string
                  required:
                    - name
                  type: object
                target:
                  default:
                    creationPolicy: Owner
                    deletionPolicy: Retain
                  description: ExternalSecretTarget defines the Kubernetes Secret to be created There can be only one target per ExternalSecret.
                  properties:
                    creationPolicy:
                      default: Owner
                      description: CreationPolicy defines rules on how to create the resulting Secret Defaults to 'Owner'
                      enum:
                        - Owner
                        - Orphan
                        - Merge
                        - None
                      type: string
                    deletionPolicy:
                      default: Retain
                      description: DeletionPolicy defines rules on how to delete the resulting Secret Defaults to 'Retain'
                      enum:
                        - Delete
                        - Merge
                        - Retain
                      type: string
                    immutable:
                      description: Immutable defines if the final secret will be immutable
                      type: boolean
                    name:
                      description: Name defines the name of the Secret resource to be managed This field is immutable Defaults to the .metadata.name of the ExternalSecret resource
                      type: string
                    template:
                      description: Template defines a blueprint for the created Secret resource.
                      properties:
                        data:
                          additionalProperties:
                            type: string
                          type: object
                        engineVersion:
                          default: v2
                          description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                          enum:
                            - v1
                            - v2
                          type: string
                        mergePolicy:
                          default: Replace
                          enum:
                            - Replace
                            - Merge
                          type: string
                        metadata:
                          description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                          properties:
                            annotations:
                              additionalProperties:
                                type: string
                              type: object
                            labels:
                              additionalProperties:
                                type: string
                              type: object
                          type: object
                        templateFrom:
                          items:
                            properties:
                              configMap:
                                properties:
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        templateAs:
                                          default: Values
                                          enum:
                                            - Values
                                            - KeysAndValues
                                          type: string
                                      required:
                                        - key
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - items
                                  - name
                                type: object
                              literal:
                                type: string
                              secret:
                                properties:
                                  items:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        templateAs:
                                          default: Values
                                          enum:
                                            - Values
                                            - KeysAndValues
                                          type: string
                                      required:
                                        - key
                                      type: object
                                    type: array
                                  name:
                                    type: string
                                required:
                                  - items
                                  - name
                                type: object
                              target:
                                default: Data
                                enum:
                                  - Data
                                  - Annotations
                                  - Labels
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                  type: object
              type: object
            status:
              properties:
                binding:
                  description: Binding represents a servicebinding.io Provisioned Service reference to the secret
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                refreshTime:
                  description: refreshTime is the time and date the external secret was fetched and the target secret updated
                  format: date-time
                  nullable: true
                  type: string
                syncedResourceVersion:
                  description: SyncedResourceVersion keeps track of the last synced version
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: fakes.generators.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: generators.external-secrets.io
  names:
    categories:
      - fake
    kind: Fake
    listKind: FakeList
    plural: fakes
    shortNames:
      - fake
    singular: fake
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Fake generator is used for testing. It lets you define a static set of credentials that is always returned.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: FakeSpec contains the static data.
              properties:
                controller:
                  description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters VDS based on this property'
                  type: string
                data:
                  additionalProperties:
                    type: string
                  description: Data defines the static data returned by this generator.
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: gcraccesstokens.generators.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: generators.external-secrets.io
  names:
    categories:
      - gcraccesstoken
    kind: GCRAccessToken
    listKind: GCRAccessTokenList
    plural: gcraccesstokens
    shortNames:
      - gcraccesstoken
    singular: gcraccesstoken
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: GCRAccessToken generates an GCP access token that can be used to authenticate with GCR.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                auth:
                  description: Auth defines the means for authenticating with GCP
                  properties:
                    secretRef:
                      properties:
                        secretAccessKeySecretRef:
                          description: The SecretAccessKey is used for authentication
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                      type: object
                    workloadIdentity:
                      properties:
                        clusterLocation:
                          type: string
                        clusterName:
                          type: string
                        clusterProjectID:
                          type: string
                        serviceAccountRef:
                          description: A reference to a ServiceAccount resource.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                      required:
                        - clusterLocation
                        - clusterName
                        - serviceAccountRef
                      type: object
                  type: object
                projectID:
                  description: ProjectID defines which project to use to authenticate with
                  type: string
              required:
                - auth
                - projectID
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: passwords.generators.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: generators.external-secrets.io
  names:
    categories:
      - password
    kind: Password
    listKind: PasswordList
    plural: passwords
    shortNames:
      - password
    singular: password
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Password generates a random password based on the configuration parameters in spec. You can specify the length, characterset and other attributes.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PasswordSpec controls the behavior of the password generator.
              properties:
                allowRepeat:
                  default: false
                  description: set AllowRepeat to true to allow repeating characters.
                  type: boolean
                digits:
                  description: Digits specifies the number of digits in the generated password. If omitted it defaults to 25% of the length of the password
                  type: integer
                length:
                  default: 24
                  description: Length of the password to be generated. Defaults to 24
                  type: integer
                noUpper:
                  default: false
                  description: Set NoUpper to disable uppercase characters
                  type: boolean
                symbolCharacters:
                  description: SymbolCharacters specifies the special characters that should be used in the generated password.
                  type: string
                symbols:
                  description: Symbols specifies the number of symbol characters in the generated password. If omitted it defaults to 25% of the length of the password
                  type: integer
              required:
                - allowRepeat
                - length
                - noUpper
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: pushsecrets.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: external-secrets.io
  names:
    categories:
      - pushsecrets
    kind: PushSecret
    listKind: PushSecretList
    plural: pushsecrets
    singular: pushsecret
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PushSecretSpec configures the behavior of the PushSecret.
              properties:
                data:
                  description: Secret Data that should be pushed to providers
                  items:
                    properties:
                      match:
                        description: Match a given Secret Key to be pushed to the provider.
                        properties:
                          remoteRef:
                            description: Remote Refs to push to providers.
                            properties:
                              property:
                                description: Name of the property in the resulting secret
                                type: string
                              remoteKey:
                                description: Name of the resulting provider secret.
                                type: string
                            required:
                              - remoteKey
                            type: object
                          secretKey:
                            description: Secret Key to be pushed
                            type: string
                        required:
                          - remoteRef
                        type: object
                      metadata:
                        description: Metadata is metadata attached to the secret. The structure of metadata is provider specific, please look it up in the provider documentation.
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - match
                    type: object
                  type: array
                deletionPolicy:
                  default: None
                  description: 'Deletion Policy to handle Secrets in the provider. Possible Values: "Delete/None". Defaults to "None".'
                  enum:
                    - Delete
                    - None
                  type: string
                refreshInterval:
                  description: The Interval to which External Secrets will try to push a secret definition
                  type: string
                secretStoreRefs:
                  items:
                    properties:
                      kind:
                        default: SecretStore
                        description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                        type: string
                      labelSelector:
                        description: Optionally, sync to secret stores with label selector
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      name:
                        description: Optionally, sync to the SecretStore of the given name
                        type: string
                    type: object
                  type: array
                selector:
                  description: The Secret Selector (k8s source) for the Push Secret
                  properties:
                    secret:
                      description: Select a Secret to Push.
                      properties:
                        name:
                          description: Name of the Secret. The Secret must exist in the same namespace as the PushSecret manifest.
                          type: string
                      required:
                        - name
                      type: object
                  required:
                    - secret
                  type: object
              required:
                - secretStoreRefs
                - selector
              type: object
            status:
              description: PushSecretStatus indicates the history of the status of PushSecret.
              properties:
                conditions:
                  items:
                    description: PushSecretStatusCondition indicates the status of the PushSecret.
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        description: PushSecretConditionType indicates the condition of the PushSecret.
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
                refreshTime:
                  description: refreshTime is the time and date the external secret was fetched and the target secret updated
                  format: date-time
                  nullable: true
                  type: string
                syncedPushSecrets:
                  additionalProperties:
                    additionalProperties:
                      properties:
                        match:
                          description: Match a given Secret Key to be pushed to the provider.
                          properties:
                            remoteRef:
                              description: Remote Refs to push to providers.
                              properties:
                                property:
                                  description: Name of the property in the resulting secret
                                  type: string
                                remoteKey:
                                  description: Name of the resulting provider secret.
                                  type: string
                              required:
                                - remoteKey
                              type: object
                            secretKey:
                              description: Secret Key to be pushed
                              type: string
                          required:
                            - remoteRef
                          type: object
                        metadata:
                          description: Metadata is metadata attached to the secret. The structure of metadata is provider specific, please look it up in the provider documentation.
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                        - match
                      type: object
                    type: object
                  description: Synced Push Secrets for later deletion. Matches Secret Stores to PushSecretData that was stored to that secretStore.
                  type: object
                syncedResourceVersion:
                  description: SyncedResourceVersion keeps track of the last synced version.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: secretstores.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: external-secrets.io
  names:
    categories:
      - externalsecrets
    kind: SecretStore
    listKind: SecretStoreList
    plural: secretstores
    shortNames:
      - ss
    singular: secretstore
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
      deprecated: true
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SecretStoreSpec defines the desired state of SecretStore.
              properties:
                controller:
                  description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                  type: string
                provider:
                  description: Used to configure the provider. Only one provider may be set
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    akeyless:
                      description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                      properties:
                        akeylessGWApiURL:
                          description: Akeyless GW API Url from which the secrets to be fetched from.
                          type: string
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Akeyless.
                          properties:
                            kubernetesAuth:
                              description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                              properties:
                                accessID:
                                  description: the Akeyless Kubernetes auth-method access-id
                                  type: string
                                k8sConfName:
                                  description: Kubernetes-auth configuration name in Akeyless-Gateway
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - accessID
                                - k8sConfName
                              type: object
                            secretRef:
                              description: Reference to a Secret that contains the details to authenticate with Akeyless.
                              properties:
                                accessID:
                                  description: The SecretAccessID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessType:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessTypeParam:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        caBundle:
                          description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                      required:
                        - akeylessGWApiURL
                        - authSecretRef
                      type: object
                    alibaba:
                      description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                      properties:
                        auth:
                          description: AlibabaAuth contains a secretRef for credentials.
                          properties:
                            rrsa:
                              description: Authenticate against Alibaba using RRSA.
                              properties:
                                oidcProviderArn:
                                  type: string
                                oidcTokenFilePath:
                                  type: string
                                roleArn:
                                  type: string
                                sessionName:
                                  type: string
                              required:
                                - oidcProviderArn
                                - oidcTokenFilePath
                                - roleArn
                                - sessionName
                              type: object
                            secretRef:
                              description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessKeySecretSecretRef:
                                  description: The AccessKeySecret is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - accessKeyIDSecretRef
                                - accessKeySecretSecretRef
                              type: object
                          type: object
                        regionID:
                          description: Alibaba Region to be used for the provider
                          type: string
                      required:
                        - auth
                        - regionID
                      type: object
                    aws:
                      description: AWS configures this store to sync secrets using AWS Secret Manager provider
                      properties:
                        auth:
                          description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                          properties:
                            jwt:
                              description: Authenticate against AWS using service account tokens.
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            secretRef:
                              description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        region:
                          description: AWS Region to be used for the provider
                          type: string
                        role:
                          description: Role is a Role ARN which the SecretManager provider will assume
                          type: string
                        service:
                          description: Service defines which service should be used to fetch the secrets
                          enum:
                            - SecretsManager
                            - ParameterStore
                          type: string
                      required:
                        - region
                        - service
                      type: object
                    azurekv:
                      description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                      properties:
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                          properties:
                            clientId:
                              description: The Azure clientId of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            clientSecret:
                              description: The Azure ClientSecret of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        authType:
                          default: ServicePrincipal
                          description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                          enum:
                            - ServicePrincipal
                            - ManagedIdentity
                            - WorkloadIdentity
                          type: string
                        identityId:
                          description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        tenantId:
                          description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                          type: string
                        vaultUrl:
                          description: Vault Url from which the secrets to be fetched from.
                          type: string
                      required:
                        - vaultUrl
                      type: object
                    fake:
                      description: Fake configures a store with static key/value pairs
                      properties:
                        data:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                              valueMap:
                                additionalProperties:
                                  type: string
                                type: object
                              version:
                                type: string
                            required:
                              - key
                            type: object
                          type: array
                      required:
                        - data
                      type: object
                    gcpsm:
                      description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                      properties:
                        auth:
                          description: Auth defines the information necessary to authenticate against GCP
                          properties:
                            secretRef:
                              properties:
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            workloadIdentity:
                              properties:
                                clusterLocation:
                                  type: string
                                clusterName:
                                  type: string
                                clusterProjectID:
                                  type: string
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - clusterLocation
                                - clusterName
                                - serviceAccountRef
                              type: object
                          type: object
                        projectID:
                          description: ProjectID project where secret is located
                          type: string
                      type: object
                    gitlab:
                      description: GitLab configures this store to sync secrets using GitLab Variables provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a GitLab instance.
                          properties:
                            SecretRef:
                              properties:
                                accessToken:
                                  description: AccessToken is used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          required:
                            - SecretRef
                          type: object
                        projectID:
                          description: ProjectID specifies a project where secrets are located.
                          type: string
                        url:
                          description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                          type: string
                      required:
                        - auth
                      type: object
                    ibm:
                      description: IBM configures this store to sync secrets using IBM Cloud provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                          properties:
                            secretRef:
                              properties:
                                secretApiKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          required:
                            - secretRef
                          type: object
                        serviceUrl:
                          description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                          type: string
                      required:
                        - auth
                      type: object
                    kubernetes:
                      description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            cert:
                              description: has both clientCert and clientKey as secretKeySelector
                              properties:
                                clientCert:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                clientKey:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            serviceAccount:
                              description: points to a service account that should be used for authentication
                              properties:
                                serviceAccount:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            token:
                              description: use static token to authenticate with
                              properties:
                                bearerToken:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        remoteNamespace:
                          default: default
                          description: Remote namespace to fetch the secrets from
                          type: string
                        server:
                          description: configures the Kubernetes server Address.
                          properties:
                            caBundle:
                              description: CABundle is a base64-encoded CA certificate
                              format: byte
                              type: string
                            caProvider:
                              description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                              properties:
                                key:
                                  description: The key the value inside of the provider type to use, only used with "Secret" type
                                  type: string
                                name:
                                  description: The name of the object located at the provider type.
                                  type: string
                                namespace:
                                  description: The namespace the Provider type is in.
                                  type: string
                                type:
                                  description: The type of provider to use such as "Secret", or "ConfigMap".
                                  enum:
                                    - Secret
                                    - ConfigMap
                                  type: string
                              required:
                                - name
                                - type
                              type: object
                            url:
                              default: kubernetes.default
                              description: configures the Kubernetes server Address.
                              type: string
                          type: object
                      required:
                        - auth
                      type: object
                    oracle:
                      description: Oracle configures this store to sync secrets using Oracle Vault provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, instance principal is used. Optionally, the authenticating principal type and/or user data may be supplied for the use of workload identity and user principal.
                          properties:
                            secretRef:
                              description: SecretRef to pass through sensitive information.
                              properties:
                                fingerprint:
                                  description: Fingerprint is the fingerprint of the API private key.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                privatekey:
                                  description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - fingerprint
                                - privatekey
                              type: object
                            tenancy:
                              description: Tenancy is the tenancy OCID where user is located.
                              type: string
                            user:
                              description: User is an access OCID specific to the account.
                              type: string
                          required:
                            - secretRef
                            - tenancy
                            - user
                          type: object
                        compartment:
                          description: Compartment is the vault compartment OCID. Required for PushSecret
                          type: string
                        encryptionKey:
                          description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                          type: string
                        principalType:
                          description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                          enum:
                            - ""
                            - UserPrincipal
                            - InstancePrincipal
                            - Workload
                          type: string
                        region:
                          description: Region is the region where vault is located.
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        vault:
                          description: Vault is the vault's OCID of the specific vault where secret is located.
                          type: string
                      required:
                        - region
                        - vault
                      type: object
                    vault:
                      description: Vault configures this store to sync secrets using Hashi provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Vault server.
                          properties:
                            appRole:
                              description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                              properties:
                                path:
                                  default: approle
                                  description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                  type: string
                                roleId:
                                  description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                  type: string
                                secretRef:
                                  description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                                - roleId
                                - secretRef
                              type: object
                            cert:
                              description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                              properties:
                                clientCert:
                                  description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            jwt:
                              description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                              properties:
                                kubernetesServiceAccountToken:
                                  description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                  properties:
                                    audiences:
                                      description: Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified.
                                      items:
                                        type: string
                                      type: array
                                    expirationSeconds:
                                      description: Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to 10 minutes.
                                      format: int64
                                      type: integer
                                    serviceAccountRef:
                                      description: Service account field containing the name of a kubernetes ServiceAccount.
                                      properties:
                                        audiences:
                                          description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountRef
                                  type: object
                                path:
                                  default: jwt
                                  description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                  type: string
                                role:
                                  description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                  type: string
                                secretRef:
                                  description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                              type: object
                            kubernetes:
                              description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                              properties:
                                mountPath:
                                  default: kubernetes
                                  description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                  type: string
                                role:
                                  description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - mountPath
                                - role
                              type: object
                            ldap:
                              description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                              properties:
                                path:
                                  default: ldap
                                  description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                  type: string
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                username:
                                  description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                            tokenSecretRef:
                              description: TokenSecretRef authenticates with Vault by presenting a token.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caBundle:
                          description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Vault server certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        forwardInconsistent:
                          description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                          type: boolean
                        namespace:
                          description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                          type: string
                        path:
                          description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                          type: string
                        readYourWrites:
                          description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                          type: boolean
                        server:
                          description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                          type: string
                        version:
                          default: v2
                          description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                          enum:
                            - v1
                            - v2
                          type: string
                      required:
                        - auth
                        - server
                      type: object
                    webhook:
                      description: Webhook configures this store to sync secrets using a generic templated webhook
                      properties:
                        body:
                          description: Body
                          type: string
                        caBundle:
                          description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate webhook server certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers
                          type: object
                        method:
                          description: Webhook Method
                          type: string
                        result:
                          description: Result formatting
                          properties:
                            jsonPath:
                              description: Json path of return value
                              type: string
                          type: object
                        secrets:
                          description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                          items:
                            properties:
                              name:
                                description: Name of this secret in templates
                                type: string
                              secretRef:
                                description: Secret ref to fill in credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                            required:
                              - name
                              - secretRef
                            type: object
                          type: array
                        timeout:
                          description: Timeout
                          type: string
                        url:
                          description: Webhook url to call
                          type: string
                      required:
                        - result
                        - url
                      type: object
                    yandexlockbox:
                      description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex Lockbox
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                  type: object
                retrySettings:
                  description: Used to configure http retries if failed
                  properties:
                    maxRetries:
                      format: int32
                      type: integer
                    retryInterval:
                      type: string
                  type: object
              required:
                - provider
              type: object
            status:
              description: SecretStoreStatus defines the observed state of the SecretStore.
              properties:
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .status.conditions[?(@.type=="Ready")].reason
          name: Status
          type: string
        - jsonPath: .status.capabilities
          name: Capabilities
          type: string
        - jsonPath: .status.conditions[?(@.type=="Ready")].status
          name: Ready
          type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SecretStoreSpec defines the desired state of SecretStore.
              properties:
                conditions:
                  description: Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
                  items:
                    description: ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in for a ClusterSecretStore instance.
                    properties:
                      namespaceSelector:
                        description: Choose namespace using a labelSelector
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        description: Choose namespaces by name
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                controller:
                  description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                  type: string
                provider:
                  description: Used to configure the provider. Only one provider may be set
                  maxProperties: 1
                  minProperties: 1
                  properties:
                    akeyless:
                      description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                      properties:
                        akeylessGWApiURL:
                          description: Akeyless GW API Url from which the secrets to be fetched from.
                          type: string
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Akeyless.
                          properties:
                            kubernetesAuth:
                              description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                              properties:
                                accessID:
                                  description: the Akeyless Kubernetes auth-method access-id
                                  type: string
                                k8sConfName:
                                  description: Kubernetes-auth configuration name in Akeyless-Gateway
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - accessID
                                - k8sConfName
                              type: object
                            secretRef:
                              description: Reference to a Secret that contains the details to authenticate with Akeyless.
                              properties:
                                accessID:
                                  description: The SecretAccessID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessType:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessTypeParam:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        caBundle:
                          description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                      required:
                        - akeylessGWApiURL
                        - authSecretRef
                      type: object
                    alibaba:
                      description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                      properties:
                        auth:
                          description: AlibabaAuth contains a secretRef for credentials.
                          properties:
                            rrsa:
                              description: Authenticate against Alibaba using RRSA.
                              properties:
                                oidcProviderArn:
                                  type: string
                                oidcTokenFilePath:
                                  type: string
                                roleArn:
                                  type: string
                                sessionName:
                                  type: string
                              required:
                                - oidcProviderArn
                                - oidcTokenFilePath
                                - roleArn
                                - sessionName
                              type: object
                            secretRef:
                              description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                accessKeySecretSecretRef:
                                  description: The AccessKeySecret is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - accessKeyIDSecretRef
                                - accessKeySecretSecretRef
                              type: object
                          type: object
                        regionID:
                          description: Alibaba Region to be used for the provider
                          type: string
                      required:
                        - auth
                        - regionID
                      type: object
                    aws:
                      description: AWS configures this store to sync secrets using AWS Secret Manager provider
                      properties:
                        additionalRoles:
                          description: AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
                          items:
                            type: string
                          type: array
                        auth:
                          description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                          properties:
                            jwt:
                              description: Authenticate against AWS using service account tokens.
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            secretRef:
                              description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                sessionTokenSecretRef:
                                  description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        externalID:
                          description: AWS External ID set on assumed IAM roles
                          type: string
                        region:
                          description: AWS Region to be used for the provider
                          type: string
                        role:
                          description: Role is a Role ARN which the provider will assume
                          type: string
                        secretsManager:
                          description: SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
                          properties:
                            forceDeleteWithoutRecovery:
                              description: 'Specifies whether to delete the secret without any recovery window. You can''t use both this parameter and RecoveryWindowInDays in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery'
                              type: boolean
                            recoveryWindowInDays:
                              description: 'The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can''t use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays'
                              format: int64
                              type: integer
                          type: object
                        service:
                          description: Service defines which service should be used to fetch the secrets
                          enum:
                            - SecretsManager
                            - ParameterStore
                          type: string
                        sessionTags:
                          description: AWS STS assume role session tags
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            required:
                              - key
                              - value
                            type: object
                          type: array
                        transitiveTagKeys:
                          description: AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
                          items:
                            type: string
                          type: array
                      required:
                        - region
                        - service
                      type: object
                    azurekv:
                      description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                      properties:
                        authSecretRef:
                          description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                          properties:
                            clientId:
                              description: The Azure clientId of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            clientSecret:
                              description: The Azure ClientSecret of the service principle used for authentication.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        authType:
                          default: ServicePrincipal
                          description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                          enum:
                            - ServicePrincipal
                            - ManagedIdentity
                            - WorkloadIdentity
                          type: string
                        environmentType:
                          default: PublicCloud
                          description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                          enum:
                            - PublicCloud
                            - USGovernmentCloud
                            - ChinaCloud
                            - GermanCloud
                          type: string
                        identityId:
                          description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        tenantId:
                          description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                          type: string
                        vaultUrl:
                          description: Vault Url from which the secrets to be fetched from.
                          type: string
                      required:
                        - vaultUrl
                      type: object
                    conjur:
                      description: Conjur configures this store to sync secrets using conjur provider
                      properties:
                        auth:
                          properties:
                            apikey:
                              properties:
                                account:
                                  type: string
                                apiKeyRef:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                userRef:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - account
                                - apiKeyRef
                                - userRef
                              type: object
                            jwt:
                              properties:
                                account:
                                  type: string
                                secretRef:
                                  description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Conjur using the JWT authentication method.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional ServiceAccountRef specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                serviceID:
                                  description: The conjur authn jwt webservice id
                                  type: string
                              required:
                                - account
                                - serviceID
                              type: object
                          type: object
                        caBundle:
                          type: string
                        caProvider:
                          description: Used to provide custom certificate authority (CA) certificates for a secret store. The CAProvider points to a Secret or ConfigMap resource that contains a PEM-encoded certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        url:
                          type: string
                      required:
                        - auth
                        - url
                      type: object
                    delinea:
                      description: Delinea DevOps Secrets Vault https://docs.delinea.com/online-help/products/devops-secrets-vault/current
                      properties:
                        clientId:
                          description: ClientID is the non-secret part of the credential.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                        clientSecret:
                          description: ClientSecret is the secret part of the credential.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                        tenant:
                          description: Tenant is the chosen hostname / site name.
                          type: string
                        tld:
                          description: TLD is based on the server location that was chosen during provisioning. If unset, defaults to "com".
                          type: string
                        urlTemplate:
                          description: URLTemplate If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
                          type: string
                      required:
                        - clientId
                        - clientSecret
                        - tenant
                      type: object
                    doppler:
                      description: Doppler configures this store to sync secrets using the Doppler provider
                      properties:
                        auth:
                          description: Auth configures how the Operator authenticates with the Doppler API
                          properties:
                            secretRef:
                              properties:
                                dopplerToken:
                                  description: The DopplerToken is used for authentication. See https://docs.doppler.com/reference/api#authentication for auth token types. The Key attribute defaults to dopplerToken if not specified.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - dopplerToken
                              type: object
                          required:
                            - secretRef
                          type: object
                        config:
                          description: Doppler config (required if not using a Service Token)
                          type: string
                        format:
                          description: Format enables the downloading of secrets as a file (string)
                          enum:
                            - json
                            - dotnet-json
                            - env
                            - yaml
                            - docker
                          type: string
                        nameTransformer:
                          description: Environment variable compatible name transforms that change secret names to a different format
                          enum:
                            - upper-camel
                            - camel
                            - lower-snake
                            - tf-var
                            - dotnet-env
                            - lower-kebab
                          type: string
                        project:
                          description: Doppler project (required if not using a Service Token)
                          type: string
                      required:
                        - auth
                      type: object
                    fake:
                      description: Fake configures a store with static key/value pairs
                      properties:
                        data:
                          items:
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                              valueMap:
                                additionalProperties:
                                  type: string
                                description: 'Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.'
                                type: object
                              version:
                                type: string
                            required:
                              - key
                            type: object
                          type: array
                      required:
                        - data
                      type: object
                    gcpsm:
                      description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                      properties:
                        auth:
                          description: Auth defines the information necessary to authenticate against GCP
                          properties:
                            secretRef:
                              properties:
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            workloadIdentity:
                              properties:
                                clusterLocation:
                                  type: string
                                clusterName:
                                  type: string
                                clusterProjectID:
                                  type: string
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - clusterLocation
                                - clusterName
                                - serviceAccountRef
                              type: object
                          type: object
                        projectID:
                          description: ProjectID project where secret is located
                          type: string
                      type: object
                    gitlab:
                      description: GitLab configures this store to sync secrets using GitLab Variables provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a GitLab instance.
                          properties:
                            SecretRef:
                              properties:
                                accessToken:
                                  description: AccessToken is used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          required:
                            - SecretRef
                          type: object
                        environment:
                          description: Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
                          type: string
                        groupIDs:
                          description: GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
                          items:
                            type: string
                          type: array
                        inheritFromGroups:
                          description: InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
                          type: boolean
                        projectID:
                          description: ProjectID specifies a project where secrets are located.
                          type: string
                        url:
                          description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                          type: string
                      required:
                        - auth
                      type: object
                    ibm:
                      description: IBM configures this store to sync secrets using IBM Cloud provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            containerAuth:
                              description: IBM Container-based auth with IAM Trusted Profile.
                              properties:
                                iamEndpoint:
                                  type: string
                                profile:
                                  description: the IBM Trusted Profile
                                  type: string
                                tokenLocation:
                                  description: Location the token is mounted on the pod
                                  type: string
                              required:
                                - profile
                              type: object
                            secretRef:
                              properties:
                                secretApiKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        serviceUrl:
                          description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                          type: string
                      required:
                        - auth
                      type: object
                    keepersecurity:
                      description: KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
                      properties:
                        authRef:
                          description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                        folderID:
                          type: string
                      required:
                        - authRef
                        - folderID
                      type: object
                    kubernetes:
                      description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                          maxProperties: 1
                          minProperties: 1
                          properties:
                            cert:
                              description: has both clientCert and clientKey as secretKeySelector
                              properties:
                                clientCert:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                clientKey:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            serviceAccount:
                              description: points to a service account that should be used for authentication
                              properties:
                                audiences:
                                  description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: The name of the ServiceAccount resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                            token:
                              description: use static token to authenticate with
                              properties:
                                bearerToken:
                                  description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                          type: object
                        remoteNamespace:
                          default: default
                          description: Remote namespace to fetch the secrets from
                          type: string
                        server:
                          description: configures the Kubernetes server Address.
                          properties:
                            caBundle:
                              description: CABundle is a base64-encoded CA certificate
                              format: byte
                              type: string
                            caProvider:
                              description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                              properties:
                                key:
                                  description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                  type: string
                                name:
                                  description: The name of the object located at the provider type.
                                  type: string
                                namespace:
                                  description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                  type: string
                                type:
                                  description: The type of provider to use such as "Secret", or "ConfigMap".
                                  enum:
                                    - Secret
                                    - ConfigMap
                                  type: string
                              required:
                                - name
                                - type
                              type: object
                            url:
                              default: kubernetes.default
                              description: configures the Kubernetes server Address.
                              type: string
                          type: object
                      required:
                        - auth
                      type: object
                    onepassword:
                      description: OnePassword configures this store to sync secrets using the 1Password Cloud provider
                      properties:
                        auth:
                          description: Auth defines the information necessary to authenticate against OnePassword Connect Server
                          properties:
                            secretRef:
                              description: OnePasswordAuthSecretRef holds secret references for 1Password credentials.
                              properties:
                                connectTokenSecretRef:
                                  description: The ConnectToken is used for authentication to a 1Password Connect Server.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - connectTokenSecretRef
                              type: object
                          required:
                            - secretRef
                          type: object
                        connectHost:
                          description: ConnectHost defines the OnePassword Connect Server to connect to
                          type: string
                        vaults:
                          additionalProperties:
                            type: integer
                          description: Vaults defines which OnePassword vaults to search in which order
                          type: object
                      required:
                        - auth
                        - connectHost
                        - vaults
                      type: object
                    oracle:
                      description: Oracle configures this store to sync secrets using Oracle Vault provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, use the instance principal, otherwise the user credentials specified in Auth.
                          properties:
                            secretRef:
                              description: SecretRef to pass through sensitive information.
                              properties:
                                fingerprint:
                                  description: Fingerprint is the fingerprint of the API private key.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                privatekey:
                                  description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - fingerprint
                                - privatekey
                              type: object
                            tenancy:
                              description: Tenancy is the tenancy OCID where user is located.
                              type: string
                            user:
                              description: User is an access OCID specific to the account.
                              type: string
                          required:
                            - secretRef
                            - tenancy
                            - user
                          type: object
                        compartment:
                          description: Compartment is the vault compartment OCID. Required for PushSecret
                          type: string
                        encryptionKey:
                          description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                          type: string
                        principalType:
                          description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                          enum:
                            - ""
                            - UserPrincipal
                            - InstancePrincipal
                            - Workload
                          type: string
                        region:
                          description: Region is the region where vault is located.
                          type: string
                        serviceAccountRef:
                          description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                          properties:
                            audiences:
                              description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                              items:
                                type: string
                              type: array
                            name:
                              description: The name of the ServiceAccount resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          required:
                            - name
                          type: object
                        vault:
                          description: Vault is the vault's OCID of the specific vault where secret is located.
                          type: string
                      required:
                        - region
                        - vault
                      type: object
                    scaleway:
                      description: Scaleway
                      properties:
                        accessKey:
                          description: AccessKey is the non-secret part of the api key.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                        apiUrl:
                          description: APIURL is the url of the api to use. Defaults to https://api.scaleway.com
                          type: string
                        projectId:
                          description: 'ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings'
                          type: string
                        region:
                          description: 'Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone'
                          type: string
                        secretKey:
                          description: SecretKey is the non-secret part of the api key.
                          properties:
                            secretRef:
                              description: SecretRef references a key in a secret that will be used as value.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            value:
                              description: Value can be specified directly to set a value without using a secret.
                              type: string
                          type: object
                      required:
                        - accessKey
                        - projectId
                        - region
                        - secretKey
                      type: object
                    senhasegura:
                      description: Senhasegura configures this store to sync secrets using senhasegura provider
                      properties:
                        auth:
                          description: Auth defines parameters to authenticate in senhasegura
                          properties:
                            clientId:
                              type: string
                            clientSecretSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          required:
                            - clientId
                            - clientSecretSecretRef
                          type: object
                        ignoreSslCertificate:
                          default: false
                          description: IgnoreSslCertificate defines if SSL certificate must be ignored
                          type: boolean
                        module:
                          description: Module defines which senhasegura module should be used to get secrets
                          type: string
                        url:
                          description: URL of senhasegura
                          type: string
                      required:
                        - auth
                        - module
                        - url
                      type: object
                    vault:
                      description: Vault configures this store to sync secrets using Hashi provider
                      properties:
                        auth:
                          description: Auth configures how secret-manager authenticates with the Vault server.
                          properties:
                            appRole:
                              description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                              properties:
                                path:
                                  default: approle
                                  description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                  type: string
                                roleId:
                                  description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                  type: string
                                roleRef:
                                  description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretRef:
                                  description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                                - secretRef
                              type: object
                            cert:
                              description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                              properties:
                                clientCert:
                                  description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            iam:
                              description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                              properties:
                                externalID:
                                  description: AWS External ID set on assumed IAM roles
                                  type: string
                                jwt:
                                  description: Specify a service account with IRSA enabled
                                  properties:
                                    serviceAccountRef:
                                      description: A reference to a ServiceAccount resource.
                                      properties:
                                        audiences:
                                          description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  type: object
                                path:
                                  description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                  type: string
                                region:
                                  description: AWS region
                                  type: string
                                role:
                                  description: This is the AWS role to be assumed before talking to vault
                                  type: string
                                secretRef:
                                  description: Specify credentials in a Secret object
                                  properties:
                                    accessKeyIDSecretRef:
                                      description: The AccessKeyID is used for authentication
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                    secretAccessKeySecretRef:
                                      description: The SecretAccessKey is used for authentication
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                    sessionTokenSecretRef:
                                      description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                  type: object
                                vaultAwsIamServerID:
                                  description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                  type: string
                                vaultRole:
                                  description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                  type: string
                              required:
                                - vaultRole
                              type: object
                            jwt:
                              description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                              properties:
                                kubernetesServiceAccountToken:
                                  description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                  properties:
                                    audiences:
                                      description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                      items:
                                        type: string
                                      type: array
                                    expirationSeconds:
                                      description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                      format: int64
                                      type: integer
                                    serviceAccountRef:
                                      description: Service account field containing the name of a kubernetes ServiceAccount.
                                      properties:
                                        audiences:
                                          description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: The name of the ServiceAccount resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountRef
                                  type: object
                                path:
                                  default: jwt
                                  description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                  type: string
                                role:
                                  description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                  type: string
                                secretRef:
                                  description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              required:
                                - path
                              type: object
                            kubernetes:
                              description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                              properties:
                                mountPath:
                                  default: kubernetes
                                  description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                  type: string
                                role:
                                  description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                  type: string
                                secretRef:
                                  description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                serviceAccountRef:
                                  description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - mountPath
                                - role
                              type: object
                            ldap:
                              description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                              properties:
                                path:
                                  default: ldap
                                  description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                  type: string
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                username:
                                  description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                            tokenSecretRef:
                              description: TokenSecretRef authenticates with Vault by presenting a token.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            userPass:
                              description: UserPass authenticates with Vault by passing username/password pair
                              properties:
                                path:
                                  default: user
                                  description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                                  type: string
                                secretRef:
                                  description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                username:
                                  description: Username is a user name used to authenticate using the UserPass Vault authentication method
                                  type: string
                              required:
                                - path
                                - username
                              type: object
                          type: object
                        caBundle:
                          description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate Vault server certificate.
                          properties:
                            key:
                              description: The key where the CA certificate can be found in the Secret or ConfigMap.
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        forwardInconsistent:
                          description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                          type: boolean
                        namespace:
                          description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                          type: string
                        path:
                          description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                          type: string
                        readYourWrites:
                          description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                          type: boolean
                        server:
                          description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                          type: string
                        version:
                          default: v2
                          description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                          enum:
                            - v1
                            - v2
                          type: string
                      required:
                        - auth
                        - server
                      type: object
                    webhook:
                      description: Webhook configures this store to sync secrets using a generic templated webhook
                      properties:
                        body:
                          description: Body
                          type: string
                        caBundle:
                          description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                          format: byte
                          type: string
                        caProvider:
                          description: The provider for the CA bundle to use to validate webhook server certificate.
                          properties:
                            key:
                              description: The key the value inside of the provider type to use, only used with "Secret" type
                              type: string
                            name:
                              description: The name of the object located at the provider type.
                              type: string
                            namespace:
                              description: The namespace the Provider type is in.
                              type: string
                            type:
                              description: The type of provider to use such as "Secret", or "ConfigMap".
                              enum:
                                - Secret
                                - ConfigMap
                              type: string
                          required:
                            - name
                            - type
                          type: object
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers
                          type: object
                        method:
                          description: Webhook Method
                          type: string
                        result:
                          description: Result formatting
                          properties:
                            jsonPath:
                              description: Json path of return value
                              type: string
                          type: object
                        secrets:
                          description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                          items:
                            properties:
                              name:
                                description: Name of this secret in templates
                                type: string
                              secretRef:
                                description: Secret ref to fill in credentials
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                            required:
                              - name
                              - secretRef
                            type: object
                          type: array
                        timeout:
                          description: Timeout
                          type: string
                        url:
                          description: Webhook url to call
                          type: string
                      required:
                        - result
                        - url
                      type: object
                    yandexcertificatemanager:
                      description: YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex Certificate Manager
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                    yandexlockbox:
                      description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                      properties:
                        apiEndpoint:
                          description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                          type: string
                        auth:
                          description: Auth defines the information necessary to authenticate against Yandex Lockbox
                          properties:
                            authorizedKeySecretRef:
                              description: The authorized key used for authentication
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        caProvider:
                          description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                          properties:
                            certSecretRef:
                              description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                      required:
                        - auth
                      type: object
                  type: object
                refreshInterval:
                  description: Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
                  type: integer
                retrySettings:
                  description: Used to configure http retries if failed
                  properties:
                    maxRetries:
                      format: int32
                      type: integer
                    retryInterval:
                      type: string
                  type: object
              required:
                - provider
              type: object
            status:
              description: SecretStoreStatus defines the observed state of the SecretStore.
              properties:
                capabilities:
                  description: SecretStoreCapabilities defines the possible operations a SecretStore can do.
                  type: string
                conditions:
                  items:
                    properties:
                      lastTransitionTime:
                        format: date-time
                        type: string
                      message:
                        type: string
                      reason:
                        type: string
                      status:
                        type: string
                      type:
                        type: string
                    required:
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: vaultdynamicsecrets.generators.external-secrets.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: external-secrets-webhook
          namespace: external-secrets
          path: /convert
      conversionReviewVersions:
        - v1
  group: generators.external-secrets.io
  names:
    categories:
      - vaultdynamicsecret
    kind: VaultDynamicSecret
    listKind: VaultDynamicSecretList
    plural: vaultdynamicsecrets
    shortNames:
      - vaultdynamicsecret
    singular: vaultdynamicsecret
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                controller:
                  description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters VDS based on this property'
                  type: string
                method:
                  description: Vault API method to use (GET/POST/other)
                  type: string
                parameters:
                  description: Parameters to pass to Vault write (for non-GET methods)
                  x-kubernetes-preserve-unknown-fields: true
                path:
                  description: Vault path to obtain the dynamic secret from
                  type: string
                provider:
                  description: Vault provider common spec
                  properties:
                    auth:
                      description: Auth configures how secret-manager authenticates with the Vault server.
                      properties:
                        appRole:
                          description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                          properties:
                            path:
                              default: approle
                              description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                              type: string
                            roleId:
                              description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                              type: string
                            roleRef:
                              description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            secretRef:
                              description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          required:
                            - path
                            - secretRef
                          type: object
                        cert:
                          description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                          properties:
                            clientCert:
                              description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            secretRef:
                              description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          type: object
                        iam:
                          description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                          properties:
                            externalID:
                              description: AWS External ID set on assumed IAM roles
                              type: string
                            jwt:
                              description: Specify a service account with IRSA enabled
                              properties:
                                serviceAccountRef:
                                  description: A reference to a ServiceAccount resource.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                            path:
                              description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                              type: string
                            region:
                              description: AWS region
                              type: string
                            role:
                              description: This is the AWS role to be assumed before talking to vault
                              type: string
                            secretRef:
                              description: Specify credentials in a Secret object
                              properties:
                                accessKeyIDSecretRef:
                                  description: The AccessKeyID is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                                sessionTokenSecretRef:
                                  description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                  properties:
                                    key:
                                      description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                      type: string
                                    name:
                                      description: The name of the Secret resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  type: object
                              type: object
                            vaultAwsIamServerID:
                              description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                              type: string
                            vaultRole:
                              description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                              type: string
                          required:
                            - vaultRole
                          type: object
                        jwt:
                          description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                          properties:
                            kubernetesServiceAccountToken:
                              description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                              properties:
                                audiences:
                                  description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                  items:
                                    type: string
                                  type: array
                                expirationSeconds:
                                  description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                  format: int64
                                  type: integer
                                serviceAccountRef:
                                  description: Service account field containing the name of a kubernetes ServiceAccount.
                                  properties:
                                    audiences:
                                      description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: The name of the ServiceAccount resource being referred to.
                                      type: string
                                    namespace:
                                      description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                      type: string
                                  required:
                                    - name
                                  type: object
                              required:
                                - serviceAccountRef
                              type: object
                            path:
                              default: jwt
                              description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                              type: string
                            role:
                              description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                              type: string
                            secretRef:
                              description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                          required:
                            - path
                          type: object
                        kubernetes:
                          description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                          properties:
                            mountPath:
                              default: kubernetes
                              description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                              type: string
                            role:
                              description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                              type: string
                            secretRef:
                              description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            serviceAccountRef:
                              description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                              properties:
                                audiences:
                                  description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: The name of the ServiceAccount resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              required:
                                - name
                              type: object
                          required:
                            - mountPath
                            - role
                          type: object
                        ldap:
                          description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                          properties:
                            path:
                              default: ldap
                              description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                              type: string
                            secretRef:
                              description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            username:
                              description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                              type: string
                          required:
                            - path
                            - username
                          type: object
                        tokenSecretRef:
                          description: TokenSecretRef authenticates with Vault by presenting a token.
                          properties:
                            key:
                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                              type: string
                            name:
                              description: The name of the Secret resource being referred to.
                              type: string
                            namespace:
                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                              type: string
                          type: object
                        userPass:
                          description: UserPass authenticates with Vault by passing username/password pair
                          properties:
                            path:
                              default: user
                              description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                              type: string
                            secretRef:
                              description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                              properties:
                                key:
                                  description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                  type: string
                                name:
                                  description: The name of the Secret resource being referred to.
                                  type: string
                                namespace:
                                  description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                  type: string
                              type: object
                            username:
                              description: Username is a user name used to authenticate using the UserPass Vault authentication method
                              type: string
                          required:
                            - path
                            - username
                          type: object
                      type: object
                    caBundle:
                      description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                      format: byte
                      type: string
                    caProvider:
                      description: The provider for the CA bundle to use to validate Vault server certificate.
                      properties:
                        key:
                          description: The key where the CA certificate can be found in the Secret or ConfigMap.
                          type: string
                        name:
                          description: The name of the object located at the provider type.
                          type: string
                        namespace:
                          description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                          type: string
                        type:
                          description: The type of provider to use such as "Secret", or "ConfigMap".
                          enum:
                            - Secret
                            - ConfigMap
                          type: string
                      required:
                        - name
                        - type
                      type: object
                    forwardInconsistent:
                      description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                      type: boolean
                    namespace:
                      description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                      type: string
                    path:
                      description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                      type: string
                    readYourWrites:
                      description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                      type: boolean
                    server:
                      description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                      type: string
                    version:
                      default: v2
                      description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                      enum:
                        - v1
                        - v2
                      type: string
                  required:
                    - auth
                    - server
                  type: object
                resultType:
                  default: Data
                  description: Result type defines which data is returned from the generator. By default it is the "data" section of the Vault API response. When using e.g. /auth/token/create the "data" section is empty but the "auth" section contains the generated token. Please refer to the vault docs regarding the result data structure.
                  enum:
                    - Data
                    - Auth
                  type: string
              required:
                - path
                - provider
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: admissionreports.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: AdmissionReport
    listKind: AdmissionReportList
    plural: admissionreports
    shortNames:
      - admr
    singular: admissionreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.summary.pass
          name: PASS
          type: integer
        - jsonPath: .spec.summary.fail
          name: FAIL
          type: integer
        - jsonPath: .spec.summary.warn
          name: WARN
          type: integer
        - jsonPath: .spec.summary.error
          name: ERROR
          type: integer
        - jsonPath: .spec.summary.skip
          name: SKIP
          type: integer
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.gvr']
          name: GVR
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.name']
          name: REF
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/report\.aggregate']
          name: AGGREGATE
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AdmissionReport is the Schema for the AdmissionReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                owner:
                  description: Owner is a reference to the report owner (e.g. a Deployment, Namespace, or Node)
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    blockOwnerDeletion:
                      description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                      type: boolean
                    controller:
                      description: If true, this reference points to the managing controller.
                      type: boolean
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                    - uid
                  type: object
                  x-kubernetes-map-type: atomic
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              required:
                - owner
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: backgroundscanreports.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: BackgroundScanReport
    listKind: BackgroundScanReportList
    plural: backgroundscanreports
    shortNames:
      - bgscanr
    singular: backgroundscanreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.ownerReferences[0].apiVersion
          name: ApiVersion
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].name
          name: Subject
          priority: 1
          type: string
        - jsonPath: .spec.summary.pass
          name: Pass
          type: integer
        - jsonPath: .spec.summary.fail
          name: Fail
          type: integer
        - jsonPath: .spec.summary.warn
          name: Warn
          type: integer
        - jsonPath: .spec.summary.error
          name: Error
          type: integer
        - jsonPath: .spec.summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.hash']
          name: Hash
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: BackgroundScanReport is the Schema for the BackgroundScanReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: cleanuppolicies.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: CleanupPolicy
    listKind: CleanupPolicyList
    plural: cleanuppolicies
    shortNames:
      - cleanpol
    singular: cleanuppolicy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v2alpha1
      schema:
        openAPIV3Schema:
          description: CleanupPolicy defines a rule for resource cleanup.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                conditions:
                  description: Conditions defines the conditions used to select the resources which will be cleaned up.
                  properties:
                    all:
                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    any:
                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                  type: object
                exclude:
                  description: ExcludeResources defines when cleanuppolicy should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                match:
                  description: MatchResources defines when cleanuppolicy should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                schedule:
                  description: The schedule in Cron format
                  type: string
              required:
                - schedule
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: clusteradmissionreports.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterAdmissionReport
    listKind: ClusterAdmissionReportList
    plural: clusteradmissionreports
    shortNames:
      - cadmr
    singular: clusteradmissionreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.summary.pass
          name: PASS
          type: integer
        - jsonPath: .spec.summary.fail
          name: FAIL
          type: integer
        - jsonPath: .spec.summary.warn
          name: WARN
          type: integer
        - jsonPath: .spec.summary.error
          name: ERROR
          type: integer
        - jsonPath: .spec.summary.skip
          name: SKIP
          type: integer
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.gvr']
          name: GVR
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.name']
          name: REF
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/report\.aggregate']
          name: AGGREGATE
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterAdmissionReport is the Schema for the ClusterAdmissionReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                owner:
                  description: Owner is a reference to the report owner (e.g. a Deployment, Namespace, or Node)
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    blockOwnerDeletion:
                      description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                      type: boolean
                    controller:
                      description: If true, this reference points to the managing controller.
                      type: boolean
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                    - uid
                  type: object
                  x-kubernetes-map-type: atomic
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              required:
                - owner
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: clusterbackgroundscanreports.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterBackgroundScanReport
    listKind: ClusterBackgroundScanReportList
    plural: clusterbackgroundscanreports
    shortNames:
      - cbgscanr
    singular: clusterbackgroundscanreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.ownerReferences[0].apiVersion
          name: ApiVersion
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].name
          name: Subject
          priority: 1
          type: string
        - jsonPath: .spec.summary.pass
          name: Pass
          type: integer
        - jsonPath: .spec.summary.fail
          name: Fail
          type: integer
        - jsonPath: .spec.summary.warn
          name: Warn
          type: integer
        - jsonPath: .spec.summary.error
          name: Error
          type: integer
        - jsonPath: .spec.summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.hash']
          name: Hash
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterBackgroundScanReport is the Schema for the ClusterBackgroundScanReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: clustercleanuppolicies.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterCleanupPolicy
    listKind: ClusterCleanupPolicyList
    plural: clustercleanuppolicies
    shortNames:
      - ccleanpol
    singular: clustercleanuppolicy
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v2alpha1
      schema:
        openAPIV3Schema:
          description: ClusterCleanupPolicy defines rule for resource cleanup.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                conditions:
                  description: Conditions defines the conditions used to select the resources which will be cleaned up.
                  properties:
                    all:
                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    any:
                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                  type: object
                exclude:
                  description: ExcludeResources defines when cleanuppolicy should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                match:
                  description: MatchResources defines when cleanuppolicy should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                schedule:
                  description: The schedule in Cron format
                  type: string
              required:
                - schedule
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: clusterpolicies.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterPolicy
    listKind: ClusterPolicyList
    plural: clusterpolicies
    shortNames:
      - cpol
    singular: clusterpolicy
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.background
          name: Background
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: Validate Action
          type: string
        - jsonPath: .spec.failurePolicy
          name: Failure Policy
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.rulecount.validate
          name: Validate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: Mutate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: Generate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: Verifyimages
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ClusterPolicy declares validation, mutation, and generation behaviors for matching resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. This field should not be accessed directly, instead `GetFailurePolicy()` should be used. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                        x-kubernetes-preserve-unknown-fields: true
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates
                                            properties:
                                              cert:
                                                description: Certificate is an optional PEM encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys
                                            properties:
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            additionalExtensions:
                              additionalProperties:
                                type: string
                              description: AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
                              type: object
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: PredicateType defines the type of Predicate contained within the Statement.
                                    type: string
                                required:
                                  - predicateType
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates
                                          properties:
                                            cert:
                                              description: Certificate is an optional PEM encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys
                                          properties:
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            image:
                              description: 'Image is the image name consisting of the registry address, repository, image, and tag. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.'
                              type: string
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            issuer:
                              description: Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
                              type: string
                            key:
                              description: Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
                              type: string
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            roots:
                              description: Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
                              type: string
                            subject:
                              description: Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
                              type: string
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                autogen:
                  description: Autogen contains autogen status information
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities)
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates
                                                    properties:
                                                      cert:
                                                        description: Certificate is an optional PEM encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys
                                                    properties:
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: PredicateType defines the type of Predicate contained within the Statement.
                                        type: string
                                    required:
                                      - predicateType
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates
                                              properties:
                                                cert:
                                                  description: Certificate is an optional PEM encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys
                                              properties:
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: 'Image is the image name consisting of the registry address, repository, image, and tag. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.'
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                issuer:
                                  description: Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  description: Conditions is a list of conditions that apply to the policy
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Ready indicates if the policy is ready to serve the admission request. Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCount describes total number of rules in a policy
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.background
          name: Background
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: Validate Action
          type: string
        - jsonPath: .spec.failurePolicy
          name: Failure Policy
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.rulecount.validate
          name: Validate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: Mutate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: Generate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: Verifyimages
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: ClusterPolicy declares validation, mutation, and generation behaviors for matching resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but See: https://kyverno.io/docs/writing-policies/preconditions/'
                        properties:
                          all:
                            description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          any:
                            description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                properties:
                                  all:
                                    description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                  any:
                                    description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                type: object
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates
                                            properties:
                                              cert:
                                                description: Certificate is an optional PEM encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys
                                            properties:
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: PredicateType defines the type of Predicate contained within the Statement.
                                    type: string
                                required:
                                  - predicateType
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates
                                          properties:
                                            cert:
                                              description: Certificate is an optional PEM encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys
                                          properties:
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                autogen:
                  description: Autogen contains autogen status information
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities)
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates
                                                    properties:
                                                      cert:
                                                        description: Certificate is an optional PEM encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys
                                                    properties:
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: PredicateType defines the type of Predicate contained within the Statement.
                                        type: string
                                    required:
                                      - predicateType
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates
                                              properties:
                                                cert:
                                                  description: Certificate is an optional PEM encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys
                                              properties:
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: 'Image is the image name consisting of the registry address, repository, image, and tag. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.'
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                issuer:
                                  description: Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  description: Conditions is a list of conditions that apply to the policy
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Ready indicates if the policy is ready to serve the admission request. Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCount describes total number of rules in a policy
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: clusterpolicyreports.wgpolicyk8s.io
spec:
  group: wgpolicyk8s.io
  names:
    kind: ClusterPolicyReport
    listKind: ClusterPolicyReportList
    plural: clusterpolicyreports
    shortNames:
      - cpolr
    singular: clusterpolicyreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .scope.kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .scope.name
          name: Name
          priority: 1
          type: string
        - jsonPath: .summary.pass
          name: Pass
          type: integer
        - jsonPath: .summary.fail
          name: Fail
          type: integer
        - jsonPath: .summary.warn
          name: Warn
          type: integer
        - jsonPath: .summary.error
          name: Error
          type: integer
        - jsonPath: .summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterPolicyReport is the Schema for the clusterpolicyreports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            results:
              description: PolicyReportResult provides result details
              items:
                description: PolicyReportResult provides the result for an individual policy
                properties:
                  category:
                    description: Category indicates policy category
                    type: string
                  message:
                    description: Description is a short user friendly message for the policy rule
                    type: string
                  policy:
                    description: Policy is the name or identifier of the policy
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: Properties provides additional information for the policy rule
                    type: object
                  resourceSelector:
                    description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  resources:
                    description: Subjects is an optional reference to the checked Kubernetes resources
                    items:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  result:
                    description: Result indicates the outcome of the policy rule execution
                    enum:
                      - pass
                      - fail
                      - warn
                      - error
                      - skip
                    type: string
                  rule:
                    description: Rule is the name or identifier of the rule within the policy
                    type: string
                  scored:
                    description: Scored indicates if this result is scored
                    type: boolean
                  severity:
                    description: Severity indicates policy check result criticality
                    enum:
                      - critical
                      - high
                      - low
                      - medium
                      - info
                    type: string
                  source:
                    description: Source is an identifier for the policy engine that manages this report
                    type: string
                  timestamp:
                    description: Timestamp indicates the time the result was found
                    properties:
                      nanos:
                        description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                        format: int32
                        type: integer
                      seconds:
                        description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                        format: int64
                        type: integer
                    required:
                      - nanos
                      - seconds
                    type: object
                required:
                  - policy
                type: object
              type: array
            scope:
              description: Scope is an optional reference to the report scope (e.g. a Deployment, Namespace, or Node)
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            scopeSelector:
              description: ScopeSelector is an optional selector for multiple scopes (e.g. Pods). Either one of, or none of, but not both of, Scope or ScopeSelector should be specified.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                      - key
                      - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                  type: object
              type: object
              x-kubernetes-map-type: atomic
            summary:
              description: PolicyReportSummary provides a summary of results
              properties:
                error:
                  description: Error provides the count of policies that could not be evaluated
                  type: integer
                fail:
                  description: Fail provides the count of policies whose requirements were not met
                  type: integer
                pass:
                  description: Pass provides the count of policies whose requirements were met
                  type: integer
                skip:
                  description: Skip indicates the count of policies that were not selected for evaluation
                  type: integer
                warn:
                  description: Warn provides the count of non-scored policies whose requirements were not met
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: policies.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: Policy
    listKind: PolicyList
    plural: policies
    shortNames:
      - pol
    singular: policy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.background
          name: Background
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: Validate Action
          type: string
        - jsonPath: .spec.failurePolicy
          name: Failure Policy
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.rulecount.validate
          name: Validate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: Mutate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: Generate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: Verifyimages
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: 'Policy declares validation, mutation, and generation behaviors for matching resources. See: https://kyverno.io/docs/writing-policies/ for more information.'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines policy behaviors and contains one or more rules.
              properties:
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. This field should not be accessed directly, instead `GetFailurePolicy()` should be used. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                        x-kubernetes-preserve-unknown-fields: true
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates
                                            properties:
                                              cert:
                                                description: Certificate is an optional PEM encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys
                                            properties:
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            additionalExtensions:
                              additionalProperties:
                                type: string
                              description: AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
                              type: object
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: PredicateType defines the type of Predicate contained within the Statement.
                                    type: string
                                required:
                                  - predicateType
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates
                                          properties:
                                            cert:
                                              description: Certificate is an optional PEM encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys
                                          properties:
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            image:
                              description: 'Image is the image name consisting of the registry address, repository, image, and tag. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.'
                              type: string
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            issuer:
                              description: Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
                              type: string
                            key:
                              description: Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
                              type: string
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            roots:
                              description: Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
                              type: string
                            subject:
                              description: Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
                              type: string
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime information. Deprecated. Policy metrics are available via the metrics endpoint
              properties:
                autogen:
                  description: Autogen contains autogen status information
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities)
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates
                                                    properties:
                                                      cert:
                                                        description: Certificate is an optional PEM encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys
                                                    properties:
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: PredicateType defines the type of Predicate contained within the Statement.
                                        type: string
                                    required:
                                      - predicateType
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates
                                              properties:
                                                cert:
                                                  description: Certificate is an optional PEM encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys
                                              properties:
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: 'Image is the image name consisting of the registry address, repository, image, and tag. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.'
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                issuer:
                                  description: Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  description: Conditions is a list of conditions that apply to the policy
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Ready indicates if the policy is ready to serve the admission request. Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCount describes total number of rules in a policy
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.background
          name: Background
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: Validate Action
          type: string
        - jsonPath: .spec.failurePolicy
          name: Failure Policy
          priority: 1
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: Ready
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.rulecount.validate
          name: Validate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: Mutate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: Generate
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: Verifyimages
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: 'Policy declares validation, mutation, and generation behaviors for matching resources. See: https://kyverno.io/docs/writing-policies/ for more information.'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines policy behaviors and contains one or more rules.
              properties:
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but See: https://kyverno.io/docs/writing-policies/preconditions/'
                        properties:
                          all:
                            description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          any:
                            description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                properties:
                                  all:
                                    description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                  any:
                                    description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                type: object
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates
                                            properties:
                                              cert:
                                                description: Certificate is an optional PEM encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys
                                            properties:
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: PredicateType defines the type of Predicate contained within the Statement.
                                    type: string
                                required:
                                  - predicateType
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates
                                          properties:
                                            cert:
                                              description: Certificate is an optional PEM encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys
                                          properties:
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                autogen:
                  description: Autogen contains autogen status information
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates
                                                properties:
                                                  cert:
                                                    description: Certificate is an optional PEM encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys
                                                properties:
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: AdditionalExtensions are certificate-extensions used for keyless signing. Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs. Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities)
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates
                                                    properties:
                                                      cert:
                                                        description: Certificate is an optional PEM encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys
                                                    properties:
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: PredicateType defines the type of Predicate contained within the Statement.
                                        type: string
                                    required:
                                      - predicateType
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested AttestorSet used to specify a more complex set of match authorities
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates
                                              properties:
                                                cert:
                                                  description: Certificate is an optional PEM encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertificateChain is an optional PEM encoded set of certificates used to verify
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked and a root certificate chain is expected instead. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys
                                              properties:
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If the value is nil, Rekor is not checked. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public log https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: 'Image is the image name consisting of the registry address, repository, image, and tag. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images. Deprecated. Use ImageReferences instead.'
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                issuer:
                                  description: Issuer is the certificate issuer used for keyless signing. Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Key is the PEM encoded public key that the image or attestation is signed with. Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Roots is the PEM encoded Root certificate chain used for keyless signing Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Subject is the identity used for keyless signing, for example an email address Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  description: Conditions is a list of conditions that apply to the policy
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Ready indicates if the policy is ready to serve the admission request. Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCount describes total number of rules in a policy
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: policyexceptions.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: PolicyException
    listKind: PolicyExceptionList
    plural: policyexceptions
    shortNames:
      - polex
    singular: policyexception
  scope: Namespaced
  versions:
    - name: v2alpha1
      schema:
        openAPIV3Schema:
          description: PolicyException declares resources to be excluded from specified policies.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy exception behaviors.
              properties:
                background:
                  description: Background controls if exceptions are applied to existing policies during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                exceptions:
                  description: Exceptions is a list policy/rules to be excluded
                  items:
                    description: Exception stores infos about a policy and rules
                    properties:
                      policyName:
                        description: PolicyName identifies the policy to which the exception is applied. The policy name uses the format <namespace>/<name> unless it references a ClusterPolicy.
                        type: string
                      ruleNames:
                        description: RuleNames identifies the rules to which the exception is applied.
                        items:
                          type: string
                        type: array
                    required:
                      - policyName
                      - ruleNames
                    type: object
                  type: array
                match:
                  description: Match defines match clause used to check if a resource applies to the exception
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
              required:
                - exceptions
                - match
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: policyreports.wgpolicyk8s.io
spec:
  group: wgpolicyk8s.io
  names:
    kind: PolicyReport
    listKind: PolicyReportList
    plural: policyreports
    shortNames:
      - polr
    singular: policyreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .scope.kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .scope.name
          name: Name
          priority: 1
          type: string
        - jsonPath: .summary.pass
          name: Pass
          type: integer
        - jsonPath: .summary.fail
          name: Fail
          type: integer
        - jsonPath: .summary.warn
          name: Warn
          type: integer
        - jsonPath: .summary.error
          name: Error
          type: integer
        - jsonPath: .summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: PolicyReport is the Schema for the policyreports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            results:
              description: PolicyReportResult provides result details
              items:
                description: PolicyReportResult provides the result for an individual policy
                properties:
                  category:
                    description: Category indicates policy category
                    type: string
                  message:
                    description: Description is a short user friendly message for the policy rule
                    type: string
                  policy:
                    description: Policy is the name or identifier of the policy
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: Properties provides additional information for the policy rule
                    type: object
                  resourceSelector:
                    description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  resources:
                    description: Subjects is an optional reference to the checked Kubernetes resources
                    items:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  result:
                    description: Result indicates the outcome of the policy rule execution
                    enum:
                      - pass
                      - fail
                      - warn
                      - error
                      - skip
                    type: string
                  rule:
                    description: Rule is the name or identifier of the rule within the policy
                    type: string
                  scored:
                    description: Scored indicates if this result is scored
                    type: boolean
                  severity:
                    description: Severity indicates policy check result criticality
                    enum:
                      - critical
                      - high
                      - low
                      - medium
                      - info
                    type: string
                  source:
                    description: Source is an identifier for the policy engine that manages this report
                    type: string
                  timestamp:
                    description: Timestamp indicates the time the result was found
                    properties:
                      nanos:
                        description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                        format: int32
                        type: integer
                      seconds:
                        description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                        format: int64
                        type: integer
                    required:
                      - nanos
                      - seconds
                    type: object
                required:
                  - policy
                type: object
              type: array
            scope:
              description: Scope is an optional reference to the report scope (e.g. a Deployment, Namespace, or Node)
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            scopeSelector:
              description: ScopeSelector is an optional selector for multiple scopes (e.g. Pods). Either one of, or none of, but not both of, Scope or ScopeSelector should be specified.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                      - key
                      - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                  type: object
              type: object
              x-kubernetes-map-type: atomic
            summary:
              description: PolicyReportSummary provides a summary of results
              properties:
                error:
                  description: Error provides the count of policies that could not be evaluated
                  type: integer
                fail:
                  description: Fail provides the count of policies whose requirements were not met
                  type: integer
                pass:
                  description: Pass provides the count of policies whose requirements were met
                  type: integer
                skip:
                  description: Skip indicates the count of policies that were not selected for evaluation
                  type: integer
                warn:
                  description: Warn provides the count of non-scored policies whose requirements were not met
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: 3.0.8
    helm.sh/chart: kyverno-3.0.8
  name: updaterequests.kyverno.io
spec:
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: UpdateRequest
    listKind: UpdateRequestList
    plural: updaterequests
    shortNames:
      - ur
    singular: updaterequest
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.policy
          name: Policy
          type: string
        - jsonPath: .spec.requestType
          name: RuleType
          type: string
        - jsonPath: .spec.resource.kind
          name: ResourceKind
          type: string
        - jsonPath: .spec.resource.name
          name: ResourceName
          type: string
        - jsonPath: .spec.resource.namespace
          name: ResourceNamespace
          type: string
        - jsonPath: .status.state
          name: status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: UpdateRequest is a request to process mutate and generate rules in background.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ResourceSpec is the information to identify the trigger resource.
              properties:
                context:
                  description: Context ...
                  properties:
                    admissionRequestInfo:
                      description: AdmissionRequestInfoObject stores the admission request and operation details
                      properties:
                        admissionRequest:
                          description: AdmissionRequest describes the admission.Attributes for the admission request.
                          properties:
                            dryRun:
                              description: DryRun indicates that modifications will definitely not be persisted for this request. Defaults to false.
                              type: boolean
                            kind:
                              description: Kind is the fully-qualified type of object being submitted (for example, v1.Pod or autoscaling.v1.Scale)
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - kind
                                - version
                              type: object
                            name:
                              description: Name is the name of the object as presented in the request.  On a CREATE operation, the client may omit name and rely on the server to generate the name.  If that is the case, this field will contain an empty string.
                              type: string
                            namespace:
                              description: Namespace is the namespace associated with the request (if any).
                              type: string
                            object:
                              description: Object is the object from the incoming request.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            oldObject:
                              description: OldObject is the existing object. Only populated for DELETE and UPDATE requests.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            operation:
                              description: Operation is the operation being performed. This may be different than the operation requested. e.g. a patch can result in either a CREATE or UPDATE Operation.
                              type: string
                            options:
                              description: Options is the operation option structure of the operation being performed. e.g. `meta.k8s.io/v1.DeleteOptions` or `meta.k8s.io/v1.CreateOptions`. This may be different than the options the caller provided. e.g. for a patch request the performed Operation might be a CREATE, in which case the Options will a `meta.k8s.io/v1.CreateOptions` even though the caller provided `meta.k8s.io/v1.PatchOptions`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            requestKind:
                              description: "RequestKind is the fully-qualified type of the original API request (for example, v1.Pod or autoscaling.v1.Scale). If this is specified and differs from the value in \"kind\", an equivalent match and conversion was performed. \n For example, if deployments can be modified via apps/v1 and apps/v1beta1, and a webhook registered a rule of `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]` and `matchPolicy: Equivalent`, an API request to apps/v1beta1 deployments would be converted and sent to the webhook with `kind: {group:\"apps\", version:\"v1\", kind:\"Deployment\"}` (matching the rule the webhook registered for), and `requestKind: {group:\"apps\", version:\"v1beta1\", kind:\"Deployment\"}` (indicating the kind of the original API request). \n See documentation for the \"matchPolicy\" field in the webhook configuration type for more details."
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - kind
                                - version
                              type: object
                            requestResource:
                              description: "RequestResource is the fully-qualified resource of the original API request (for example, v1.pods). If this is specified and differs from the value in \"resource\", an equivalent match and conversion was performed. \n For example, if deployments can be modified via apps/v1 and apps/v1beta1, and a webhook registered a rule of `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]` and `matchPolicy: Equivalent`, an API request to apps/v1beta1 deployments would be converted and sent to the webhook with `resource: {group:\"apps\", version:\"v1\", resource:\"deployments\"}` (matching the resource the webhook registered for), and `requestResource: {group:\"apps\", version:\"v1beta1\", resource:\"deployments\"}` (indicating the resource of the original API request). \n See documentation for the \"matchPolicy\" field in the webhook configuration type."
                              properties:
                                group:
                                  type: string
                                resource:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - resource
                                - version
                              type: object
                            requestSubResource:
                              description: RequestSubResource is the name of the subresource of the original API request, if any (for example, "status" or "scale") If this is specified and differs from the value in "subResource", an equivalent match and conversion was performed. See documentation for the "matchPolicy" field in the webhook configuration type.
                              type: string
                            resource:
                              description: Resource is the fully-qualified resource being requested (for example, v1.pods)
                              properties:
                                group:
                                  type: string
                                resource:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - resource
                                - version
                              type: object
                            subResource:
                              description: SubResource is the subresource being requested, if any (for example, "status" or "scale")
                              type: string
                            uid:
                              description: UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are otherwise identical (parallel requests, requests when earlier requests did not modify etc) The UID is meant to track the round trip (request/response) between the KAS and the WebHook, not the user request. It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
                              type: string
                            userInfo:
                              description: UserInfo is information about the requesting user
                              properties:
                                extra:
                                  additionalProperties:
                                    description: ExtraValue masks the value so protobuf can generate
                                    items:
                                      type: string
                                    type: array
                                  description: Any additional information provided by the authenticator.
                                  type: object
                                groups:
                                  description: The names of groups this user is a part of.
                                  items:
                                    type: string
                                  type: array
                                uid:
                                  description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                                  type: string
                                username:
                                  description: The name that uniquely identifies this user among all active users.
                                  type: string
                              type: object
                          required:
                            - kind
                            - operation
                            - resource
                            - uid
                            - userInfo
                          type: object
                        operation:
                          description: Operation is the type of resource operation being checked for admission control
                          type: string
                      type: object
                    userInfo:
                      description: RequestInfo contains permission info carried in an admission request.
                      properties:
                        clusterRoles:
                          description: ClusterRoles is a list of possible clusterRoles send the request.
                          items:
                            type: string
                          nullable: true
                          type: array
                        roles:
                          description: Roles is a list of possible role send the request.
                          items:
                            type: string
                          nullable: true
                          type: array
                        userInfo:
                          description: UserInfo is the userInfo carried in the admission request.
                          properties:
                            extra:
                              additionalProperties:
                                description: ExtraValue masks the value so protobuf can generate
                                items:
                                  type: string
                                type: array
                              description: Any additional information provided by the authenticator.
                              type: object
                            groups:
                              description: The names of groups this user is a part of.
                              items:
                                type: string
                              type: array
                            uid:
                              description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                              type: string
                            username:
                              description: The name that uniquely identifies this user among all active users.
                              type: string
                          type: object
                      type: object
                  type: object
                deleteDownstream:
                  description: DeleteDownstream represents whether the downstream needs to be deleted.
                  type: boolean
                policy:
                  description: Specifies the name of the policy.
                  type: string
                requestType:
                  description: Type represents request type for background processing
                  enum:
                    - mutate
                    - generate
                  type: string
                resource:
                  description: ResourceSpec is the information to identify the trigger resource.
                  properties:
                    apiVersion:
                      description: APIVersion specifies resource apiVersion.
                      type: string
                    kind:
                      description: Kind specifies resource kind.
                      type: string
                    name:
                      description: Name specifies the resource name.
                      type: string
                    namespace:
                      description: Namespace specifies resource namespace.
                      type: string
                  type: object
                rule:
                  description: Rule is the associate rule name of the current UR.
                  type: string
                synchronize:
                  description: Synchronize represents the sync behavior of the corresponding rule Optional. Defaults to "false" if not specified.
                  type: boolean
              required:
                - context
                - deleteDownstream
                - policy
                - resource
                - rule
              type: object
            status:
              description: Status contains statistics related to update request.
              properties:
                generatedResources:
                  description: This will track the resources that are updated by the generate Policy. Will be used during clean up resources.
                  items:
                    properties:
                      apiVersion:
                        description: APIVersion specifies resource apiVersion.
                        type: string
                      kind:
                        description: Kind specifies resource kind.
                        type: string
                      name:
                        description: Name specifies the resource name.
                        type: string
                      namespace:
                        description: Namespace specifies resource namespace.
                        type: string
                    type: object
                  type: array
                handler:
                  description: Handler represents the instance ID that handles the UR Deprecated
                  type: string
                message:
                  description: Specifies request status message.
                  type: string
                state:
                  description: State represents state of the update request.
                  type: string
              required:
                - state
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator
  name: operatorconfigurations.acid.zalan.do
spec:
  group: acid.zalan.do
  names:
    categories:
      - all
    kind: OperatorConfiguration
    listKind: OperatorConfigurationList
    plural: operatorconfigurations
    shortNames:
      - opconfig
    singular: operatorconfiguration
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Spilo image to be used for Pods
          jsonPath: .configuration.docker_image
          name: Image
          type: string
        - description: Label for K8s resources created by operator
          jsonPath: .configuration.kubernetes.cluster_name_label
          name: Cluster-Label
          type: string
        - description: Name of service account to be used
          jsonPath: .configuration.kubernetes.pod_service_account_name
          name: Service-Account
          type: string
        - description: Minimum number of instances per Postgres cluster
          jsonPath: .configuration.min_instances
          name: Min-Instances
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              enum:
                - acid.zalan.do/v1
              type: string
            configuration:
              properties:
                aws_or_gcp:
                  properties:
                    additional_secret_mount:
                      type: string
                    additional_secret_mount_path:
                      default: /meta/credentials
                      type: string
                    aws_region:
                      default: eu-central-1
                      type: string
                    enable_ebs_gp3_migration:
                      default: false
                      type: boolean
                    enable_ebs_gp3_migration_max_size:
                      default: 1000
                      type: integer
                    gcp_credentials:
                      type: string
                    kube_iam_role:
                      type: string
                    log_s3_bucket:
                      type: string
                    wal_az_storage_account:
                      type: string
                    wal_gs_bucket:
                      type: string
                    wal_s3_bucket:
                      type: string
                  type: object
                connection_pooler:
                  properties:
                    connection_pooler_default_cpu_limit:
                      default: "1"
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    connection_pooler_default_cpu_request:
                      default: 500m
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    connection_pooler_default_memory_limit:
                      default: 100Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    connection_pooler_default_memory_request:
                      default: 100Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    connection_pooler_image:
                      default: registry.opensource.zalan.do/acid/pgbouncer:master-27
                      type: string
                    connection_pooler_max_db_connections:
                      default: 60
                      type: integer
                    connection_pooler_mode:
                      default: transaction
                      enum:
                        - session
                        - transaction
                      type: string
                    connection_pooler_number_of_instances:
                      default: 2
                      minimum: 1
                      type: integer
                    connection_pooler_schema:
                      default: pooler
                      type: string
                    connection_pooler_user:
                      default: pooler
                      type: string
                  type: object
                crd_categories:
                  items:
                    type: string
                  nullable: true
                  type: array
                debug:
                  properties:
                    debug_logging:
                      default: true
                      type: boolean
                    enable_database_access:
                      default: true
                      type: boolean
                  type: object
                docker_image:
                  default: ghcr.io/zalando/spilo-15:3.0-p1
                  type: string
                enable_crd_registration:
                  default: true
                  type: boolean
                enable_crd_validation:
                  default: true
                  description: deprecated
                  type: boolean
                enable_lazy_spilo_upgrade:
                  default: false
                  type: boolean
                enable_pgversion_env_var:
                  default: true
                  type: boolean
                enable_shm_volume:
                  default: true
                  type: boolean
                enable_spilo_wal_path_compat:
                  default: false
                  type: boolean
                enable_team_id_clustername_prefix:
                  default: false
                  type: boolean
                etcd_host:
                  default: ""
                  type: string
                ignore_instance_limits_annotation_key:
                  type: string
                kubernetes:
                  properties:
                    additional_pod_capabilities:
                      items:
                        type: string
                      type: array
                    cluster_domain:
                      default: cluster.local
                      type: string
                    cluster_labels:
                      additionalProperties:
                        type: string
                      default:
                        application: spilo
                      type: object
                    cluster_name_label:
                      default: cluster-name
                      type: string
                    custom_pod_annotations:
                      additionalProperties:
                        type: string
                      type: object
                    delete_annotation_date_key:
                      type: string
                    delete_annotation_name_key:
                      type: string
                    downscaler_annotations:
                      items:
                        type: string
                      type: array
                    enable_cross_namespace_secret:
                      default: false
                      type: boolean
                    enable_init_containers:
                      default: true
                      type: boolean
                    enable_pod_antiaffinity:
                      default: false
                      type: boolean
                    enable_pod_disruption_budget:
                      default: true
                      type: boolean
                    enable_readiness_probe:
                      default: false
                      type: boolean
                    enable_sidecars:
                      default: true
                      type: boolean
                    ignored_annotations:
                      items:
                        type: string
                      type: array
                    infrastructure_roles_secret_name:
                      type: string
                    infrastructure_roles_secrets:
                      items:
                        properties:
                          defaultrolevalue:
                            type: string
                          defaultuservalue:
                            type: string
                          details:
                            type: string
                          passwordkey:
                            type: string
                          rolekey:
                            type: string
                          secretname:
                            type: string
                          template:
                            type: boolean
                          userkey:
                            type: string
                        required:
                          - secretname
                          - userkey
                          - passwordkey
                        type: object
                      nullable: true
                      type: array
                    inherited_annotations:
                      items:
                        type: string
                      type: array
                    inherited_labels:
                      items:
                        type: string
                      type: array
                    master_pod_move_timeout:
                      default: 20m
                      type: string
                    node_readiness_label:
                      additionalProperties:
                        type: string
                      type: object
                    node_readiness_label_merge:
                      enum:
                        - AND
                        - OR
                      type: string
                    oauth_token_secret_name:
                      default: postgresql-operator
                      type: string
                    pdb_name_format:
                      default: postgres-{cluster}-pdb
                      type: string
                    pod_antiaffinity_preferred_during_scheduling:
                      default: false
                      type: boolean
                    pod_antiaffinity_topology_key:
                      default: kubernetes.io/hostname
                      type: string
                    pod_environment_configmap:
                      type: string
                    pod_environment_secret:
                      type: string
                    pod_management_policy:
                      default: ordered_ready
                      enum:
                        - ordered_ready
                        - parallel
                      type: string
                    pod_priority_class_name:
                      type: string
                    pod_role_label:
                      default: spilo-role
                      type: string
                    pod_service_account_definition:
                      default: ""
                      type: string
                    pod_service_account_name:
                      default: postgres-pod
                      type: string
                    pod_service_account_role_binding_definition:
                      default: ""
                      type: string
                    pod_terminate_grace_period:
                      default: 5m
                      type: string
                    secret_name_template:
                      default: '{username}.{cluster}.credentials.{tprkind}.{tprgroup}'
                      type: string
                    share_pgsocket_with_sidecars:
                      default: false
                      type: boolean
                    spilo_allow_privilege_escalation:
                      default: true
                      type: boolean
                    spilo_fsgroup:
                      type: integer
                    spilo_privileged:
                      default: false
                      type: boolean
                    spilo_runasgroup:
                      type: integer
                    spilo_runasuser:
                      type: integer
                    storage_resize_mode:
                      default: pvc
                      enum:
                        - ebs
                        - mixed
                        - pvc
                        - "off"
                      type: string
                    toleration:
                      additionalProperties:
                        type: string
                      type: object
                    watched_namespace:
                      type: string
                  type: object
                kubernetes_use_configmaps:
                  default: false
                  type: boolean
                load_balancer:
                  properties:
                    custom_service_annotations:
                      additionalProperties:
                        type: string
                      type: object
                    db_hosted_zone:
                      default: db.example.com
                      type: string
                    enable_master_load_balancer:
                      default: true
                      type: boolean
                    enable_master_pooler_load_balancer:
                      default: false
                      type: boolean
                    enable_replica_load_balancer:
                      default: false
                      type: boolean
                    enable_replica_pooler_load_balancer:
                      default: false
                      type: boolean
                    external_traffic_policy:
                      default: Cluster
                      enum:
                        - Cluster
                        - Local
                      type: string
                    master_dns_name_format:
                      default: '{cluster}.{namespace}.{hostedzone}'
                      type: string
                    master_legacy_dns_name_format:
                      default: '{cluster}.{team}.{hostedzone}'
                      type: string
                    replica_dns_name_format:
                      default: '{cluster}-repl.{namespace}.{hostedzone}'
                      type: string
                    replica_legacy_dns_name_format:
                      default: '{cluster}-repl.{team}.{hostedzone}'
                      type: string
                  type: object
                logging_rest_api:
                  properties:
                    api_port:
                      default: 8080
                      type: integer
                    cluster_history_entries:
                      default: 1000
                      type: integer
                    ring_log_lines:
                      default: 100
                      type: integer
                  type: object
                logical_backup:
                  properties:
                    logical_backup_azure_storage_account_key:
                      type: string
                    logical_backup_azure_storage_account_name:
                      type: string
                    logical_backup_azure_storage_container:
                      type: string
                    logical_backup_cpu_limit:
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    logical_backup_cpu_request:
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    logical_backup_docker_image:
                      default: registry.opensource.zalan.do/acid/logical-backup:v1.10.1
                      type: string
                    logical_backup_google_application_credentials:
                      type: string
                    logical_backup_job_prefix:
                      default: logical-backup-
                      type: string
                    logical_backup_memory_limit:
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    logical_backup_memory_request:
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    logical_backup_provider:
                      default: s3
                      enum:
                        - az
                        - gcs
                        - s3
                      type: string
                    logical_backup_s3_access_key_id:
                      type: string
                    logical_backup_s3_bucket:
                      type: string
                    logical_backup_s3_endpoint:
                      type: string
                    logical_backup_s3_region:
                      type: string
                    logical_backup_s3_retention_time:
                      type: string
                    logical_backup_s3_secret_access_key:
                      type: string
                    logical_backup_s3_sse:
                      type: string
                    logical_backup_schedule:
                      default: 30 00 * * *
                      pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                      type: string
                  type: object
                major_version_upgrade:
                  properties:
                    major_version_upgrade_mode:
                      default: "off"
                      type: string
                    major_version_upgrade_team_allow_list:
                      items:
                        type: string
                      type: array
                    minimal_major_version:
                      default: "11"
                      type: string
                    target_major_version:
                      default: "15"
                      type: string
                  type: object
                max_instances:
                  default: -1
                  description: -1 = disabled
                  minimum: -1
                  type: integer
                min_instances:
                  default: -1
                  description: -1 = disabled
                  minimum: -1
                  type: integer
                patroni:
                  properties:
                    enable_patroni_failsafe_mode:
                      default: false
                      type: boolean
                  type: object
                postgres_pod_resources:
                  properties:
                    default_cpu_limit:
                      default: "1"
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    default_cpu_request:
                      default: 100m
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    default_memory_limit:
                      default: 500Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    default_memory_request:
                      default: 100Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    max_cpu_request:
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    max_memory_request:
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    min_cpu_limit:
                      default: 250m
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    min_memory_limit:
                      default: 250Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                  type: object
                repair_period:
                  default: 5m
                  type: string
                resync_period:
                  default: 30m
                  type: string
                scalyr:
                  properties:
                    scalyr_api_key:
                      type: string
                    scalyr_cpu_limit:
                      default: "1"
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    scalyr_cpu_request:
                      default: 100m
                      pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                      type: string
                    scalyr_image:
                      type: string
                    scalyr_memory_limit:
                      default: 500Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    scalyr_memory_request:
                      default: 50Mi
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    scalyr_server_url:
                      default: https://upload.eu.scalyr.com
                      type: string
                  type: object
                set_memory_request_to_limit:
                  default: false
                  type: boolean
                sidecar_docker_images:
                  additionalProperties:
                    type: string
                  type: object
                sidecars:
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  nullable: true
                  type: array
                teams_api:
                  properties:
                    enable_admin_role_for_users:
                      default: true
                      type: boolean
                    enable_postgres_team_crd:
                      default: true
                      type: boolean
                    enable_postgres_team_crd_superusers:
                      default: false
                      type: boolean
                    enable_team_member_deprecation:
                      default: false
                      type: boolean
                    enable_team_superuser:
                      default: false
                      type: boolean
                    enable_teams_api:
                      default: true
                      type: boolean
                    pam_configuration:
                      default: https://info.example.com/oauth2/tokeninfo?access_token= uid realm=/employees
                      type: string
                    pam_role_name:
                      default: zalandos
                      type: string
                    postgres_superuser_teams:
                      items:
                        type: string
                      type: array
                    protected_role_names:
                      default:
                        - admin
                        - cron_admin
                      items:
                        type: string
                      type: array
                    role_deletion_suffix:
                      default: _deleted
                      type: string
                    team_admin_role:
                      default: admin
                      type: string
                    team_api_role_configuration:
                      additionalProperties:
                        type: string
                      default:
                        log_statement: all
                      type: object
                    teams_api_url:
                      default: https://teams.example.com/api/
                      type: string
                  type: object
                timeouts:
                  properties:
                    patroni_api_check_interval:
                      default: 1s
                      type: string
                    patroni_api_check_timeout:
                      default: 5s
                      type: string
                    pod_deletion_wait_timeout:
                      default: 10m
                      type: string
                    pod_label_wait_timeout:
                      default: 10m
                      type: string
                    ready_wait_interval:
                      default: 4s
                      type: string
                    ready_wait_timeout:
                      default: 30s
                      type: string
                    resource_check_interval:
                      default: 3s
                      type: string
                    resource_check_timeout:
                      default: 10m
                      type: string
                  type: object
                users:
                  properties:
                    additional_owner_roles:
                      items:
                        type: string
                      nullable: true
                      type: array
                    enable_password_rotation:
                      default: false
                      type: boolean
                    password_rotation_interval:
                      default: 90
                      type: integer
                    password_rotation_user_retention:
                      default: 180
                      type: integer
                    replication_username:
                      default: standby
                      type: string
                    super_username:
                      default: postgres
                      type: string
                  type: object
                workers:
                  default: 8
                  minimum: 1
                  type: integer
              type: object
            kind:
              enum:
                - OperatorConfiguration
              type: string
            status:
              additionalProperties:
                type: string
              type: object
          required:
            - kind
            - apiVersion
            - configuration
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator
  name: postgresqls.acid.zalan.do
spec:
  group: acid.zalan.do
  names:
    categories:
      - all
    kind: postgresql
    listKind: postgresqlList
    plural: postgresqls
    shortNames:
      - pg
    singular: postgresql
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: Team responsible for Postgres cluster
          jsonPath: .spec.teamId
          name: Team
          type: string
        - description: PostgreSQL version
          jsonPath: .spec.postgresql.version
          name: Version
          type: string
        - description: Number of Pods per Postgres cluster
          jsonPath: .spec.numberOfInstances
          name: Pods
          type: integer
        - description: Size of the bound volume
          jsonPath: .spec.volume.size
          name: Volume
          type: string
        - description: Requested CPU for Postgres containers
          jsonPath: .spec.resources.requests.cpu
          name: CPU-Request
          type: string
        - description: Requested memory for Postgres containers
          jsonPath: .spec.resources.requests.memory
          name: Memory-Request
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - description: Current sync status of postgresql resource
          jsonPath: .status.PostgresClusterStatus
          name: Status
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              enum:
                - acid.zalan.do/v1
              type: string
            kind:
              enum:
                - postgresql
              type: string
            spec:
              properties:
                additionalVolumes:
                  items:
                    properties:
                      mountPath:
                        type: string
                      name:
                        type: string
                      subPath:
                        type: string
                      targetContainers:
                        items:
                          type: string
                        nullable: true
                        type: array
                      volumeSource:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                      - name
                      - mountPath
                      - volumeSource
                    type: object
                  type: array
                allowedSourceRanges:
                  items:
                    pattern: ^(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\/(\d|[1-2]\d|3[0-2])$
                    type: string
                  nullable: true
                  type: array
                clone:
                  properties:
                    cluster:
                      type: string
                    s3_access_key_id:
                      type: string
                    s3_endpoint:
                      type: string
                    s3_force_path_style:
                      type: boolean
                    s3_secret_access_key:
                      type: string
                    s3_wal_path:
                      type: string
                    timestamp:
                      pattern: ^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])[Tt]([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\.[0-9]+)?(([+-]([01][0-9]|2[0-3]):[0-5][0-9]))$
                      type: string
                    uid:
                      format: uuid
                      type: string
                  required:
                    - cluster
                  type: object
                connectionPooler:
                  properties:
                    dockerImage:
                      type: string
                    maxDBConnections:
                      type: integer
                    mode:
                      enum:
                        - session
                        - transaction
                      type: string
                    numberOfInstances:
                      minimum: 1
                      type: integer
                    resources:
                      properties:
                        limits:
                          properties:
                            cpu:
                              pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                              type: string
                            memory:
                              pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                              type: string
                          type: object
                        requests:
                          properties:
                            cpu:
                              pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                              type: string
                            memory:
                              pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                              type: string
                          type: object
                      type: object
                    schema:
                      type: string
                    user:
                      type: string
                  type: object
                databases:
                  additionalProperties:
                    type: string
                  type: object
                dockerImage:
                  type: string
                enableConnectionPooler:
                  type: boolean
                enableLogicalBackup:
                  type: boolean
                enableMasterLoadBalancer:
                  type: boolean
                enableMasterPoolerLoadBalancer:
                  type: boolean
                enableReplicaConnectionPooler:
                  type: boolean
                enableReplicaLoadBalancer:
                  type: boolean
                enableReplicaPoolerLoadBalancer:
                  type: boolean
                enableShmVolume:
                  type: boolean
                env:
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  nullable: true
                  type: array
                init_containers:
                  description: deprecated
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  nullable: true
                  type: array
                initContainers:
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  nullable: true
                  type: array
                logicalBackupSchedule:
                  pattern: ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$
                  type: string
                maintenanceWindows:
                  items:
                    pattern: ^\ *((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))-((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(2[0-3]|[01]?\d):([0-5]?\d)|(2[0-3]|[01]?\d):([0-5]?\d))\ *$
                    type: string
                  type: array
                masterServiceAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                            type: object
                          weight:
                            format: int32
                            type: integer
                        required:
                          - preference
                          - weight
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - key
                                    - operator
                                  type: object
                                type: array
                            type: object
                          type: array
                      required:
                        - nodeSelectorTerms
                      type: object
                  type: object
                numberOfInstances:
                  minimum: 0
                  type: integer
                patroni:
                  properties:
                    failsafe_mode:
                      type: boolean
                    initdb:
                      additionalProperties:
                        type: string
                      type: object
                    loop_wait:
                      type: integer
                    maximum_lag_on_failover:
                      type: integer
                    pg_hba:
                      items:
                        type: string
                      type: array
                    retry_timeout:
                      type: integer
                    slots:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      type: object
                    synchronous_mode:
                      type: boolean
                    synchronous_mode_strict:
                      type: boolean
                    synchronous_node_count:
                      type: integer
                    ttl:
                      type: integer
                  type: object
                pod_priority_class_name:
                  description: deprecated
                  type: string
                podAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                podPriorityClassName:
                  type: string
                postgresql:
                  properties:
                    parameters:
                      additionalProperties:
                        type: string
                      type: object
                    version:
                      enum:
                        - "10"
                        - "11"
                        - "12"
                        - "13"
                        - "14"
                        - "15"
                      type: string
                  required:
                    - version
                  type: object
                preparedDatabases:
                  additionalProperties:
                    properties:
                      defaultUsers:
                        type: boolean
                      extensions:
                        additionalProperties:
                          type: string
                        type: object
                      schemas:
                        additionalProperties:
                          properties:
                            defaultRoles:
                              type: boolean
                            defaultUsers:
                              type: boolean
                          type: object
                        type: object
                      secretNamespace:
                        type: string
                    type: object
                  type: object
                replicaLoadBalancer:
                  description: deprecated
                  type: boolean
                replicaServiceAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                resources:
                  properties:
                    limits:
                      properties:
                        cpu:
                          pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                          type: string
                        memory:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                      type: object
                    requests:
                      properties:
                        cpu:
                          pattern: ^(\d+m|\d+(\.\d{1,3})?)$
                          type: string
                        memory:
                          pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                          type: string
                      type: object
                  type: object
                schedulerName:
                  type: string
                serviceAnnotations:
                  additionalProperties:
                    type: string
                  type: object
                sidecars:
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  nullable: true
                  type: array
                spiloFSGroup:
                  type: integer
                spiloRunAsGroup:
                  type: integer
                spiloRunAsUser:
                  type: integer
                standby:
                  oneOf:
                    - required:
                        - s3_wal_path
                    - required:
                        - gs_wal_path
                    - required:
                        - standby_host
                  properties:
                    gs_wal_path:
                      type: string
                    s3_wal_path:
                      type: string
                    standby_host:
                      type: string
                    standby_port:
                      type: string
                  type: object
                streams:
                  items:
                    properties:
                      applicationId:
                        type: string
                      batchSize:
                        type: integer
                      database:
                        type: string
                      filter:
                        additionalProperties:
                          type: string
                        type: object
                      tables:
                        additionalProperties:
                          properties:
                            eventType:
                              type: string
                            idColumn:
                              type: string
                            payloadColumn:
                              type: string
                          required:
                            - eventType
                          type: object
                        type: object
                    required:
                      - applicationId
                      - database
                      - tables
                    type: object
                  type: array
                teamId:
                  type: string
                tls:
                  properties:
                    caFile:
                      type: string
                    caSecretName:
                      type: string
                    certificateFile:
                      type: string
                    privateKeyFile:
                      type: string
                    secretName:
                      type: string
                  required:
                    - secretName
                  type: object
                tolerations:
                  items:
                    properties:
                      effect:
                        enum:
                          - NoExecute
                          - NoSchedule
                          - PreferNoSchedule
                        type: string
                      key:
                        type: string
                      operator:
                        enum:
                          - Equal
                          - Exists
                        type: string
                      tolerationSeconds:
                        type: integer
                      value:
                        type: string
                    type: object
                  type: array
                useLoadBalancer:
                  description: deprecated
                  type: boolean
                users:
                  additionalProperties:
                    items:
                      enum:
                        - bypassrls
                        - BYPASSRLS
                        - nobypassrls
                        - NOBYPASSRLS
                        - createdb
                        - CREATEDB
                        - nocreatedb
                        - NOCREATEDB
                        - createrole
                        - CREATEROLE
                        - nocreaterole
                        - NOCREATEROLE
                        - inherit
                        - INHERIT
                        - noinherit
                        - NOINHERIT
                        - login
                        - LOGIN
                        - nologin
                        - NOLOGIN
                        - replication
                        - REPLICATION
                        - noreplication
                        - NOREPLICATION
                        - superuser
                        - SUPERUSER
                        - nosuperuser
                        - NOSUPERUSER
                      type: string
                    nullable: true
                    type: array
                  type: object
                usersWithInPlaceSecretRotation:
                  items:
                    type: string
                  nullable: true
                  type: array
                usersWithSecretRotation:
                  items:
                    type: string
                  nullable: true
                  type: array
                volume:
                  properties:
                    iops:
                      type: integer
                    selector:
                      properties:
                        matchExpressions:
                          items:
                            properties:
                              key:
                                type: string
                              operator:
                                enum:
                                  - DoesNotExist
                                  - Exists
                                  - In
                                  - NotIn
                                type: string
                              values:
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        matchLabels:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                      type: object
                    size:
                      pattern: ^(\d+(e\d+)?|\d+(\.\d+)?(e\d+)?[EPTGMK]i?)$
                      type: string
                    storageClass:
                      type: string
                    subPath:
                      type: string
                    throughput:
                      type: integer
                  required:
                    - size
                  type: object
              required:
                - numberOfInstances
                - teamId
                - postgresql
                - volume
              type: object
            status:
              additionalProperties:
                type: string
              type: object
          required:
            - kind
            - apiVersion
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: postgres-operator
  name: postgresteams.acid.zalan.do
spec:
  group: acid.zalan.do
  names:
    categories:
      - all
    kind: PostgresTeam
    listKind: PostgresTeamList
    plural: postgresteams
    shortNames:
      - pgteam
    singular: postgresteam
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              enum:
                - acid.zalan.do/v1
              type: string
            kind:
              enum:
                - PostgresTeam
              type: string
            spec:
              properties:
                additionalMembers:
                  additionalProperties:
                    description: List of users who will also be added to the Postgres cluster
                    items:
                      type: string
                    nullable: true
                    type: array
                  description: Map for teamId and associated additional users
                  type: object
                additionalSuperuserTeams:
                  additionalProperties:
                    description: List of teams to become Postgres superusers
                    items:
                      type: string
                    nullable: true
                    type: array
                  description: Map for teamId and associated additional superuser teams
                  type: object
                additionalTeams:
                  additionalProperties:
                    description: List of teams whose members will also be added to the Postgres cluster
                    items:
                      type: string
                    nullable: true
                    type: array
                  description: Map for teamId and associated additional teams
                  type: object
              type: object
          required:
            - kind
            - apiVersion
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
