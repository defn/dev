VERSION 0.8

buildkite:
    ARG image=cache.defn.run:5000/dfd:buildkite
    FROM ghcr.io/buildkite/agent-stack-k8s/agent:0.7.0

    ENV BUILDKITE_GIT_MIRRORS_PATH=/cache/git
    ENV BUILDKITE_GIT_MIRRORS_SKIP_UPDATE=1

    RUN git clone --mirror -v -- https://github.com/defn/dev.git ${BUILDKITE_GIT_MIRRORS_PATH}/https---github-com-defn-dev-git
    RUN --no-cache cd ${BUILDKITE_GIT_MIRRORS_PATH}/https---github-com-defn-dev-git && git fetch origin
    SAVE IMAGE --push ${image}

class-init:
    ARG image=cache.defn.run:5000/dfd:class
    BUILD +build-class --image=${image}
    BUILD +build-class --image=${image}-latest
    BUILD +build-class-buildkite --image=${image}-buildkite
    BUILD +build-class-buildkite --image=${image}-buildkite-latest

class-latest:
    ARG image=cache.defn.run:5000/dfd:class-latest
    BUILD +latest-class --image=${image}

class-buildkite-latest:
    ARG image=cache.defn.run:5000/dfd:class-buildkite-latest
    BUILD +buildkite-latest-class --image=${image}

build-class:
    ARG image
    BUILD +image-class --image=${image}

build-class-latest:
    ARG image
    BUILD +image-class-latest --image=${image}

build-class-buildkite:
    ARG image
    BUILD +image-class --image=${image}

build-class-buildkite-latest:
    ARG image
    BUILD +image-class-buildkite-latest --image=${image}

image-class:
    ARG image
    FROM +class

    ENV BUILDKITE_GIT_MIRRORS_PATH=/cache/git
    ENV BUILDKITE_GIT_MIRRORS_SKIP_UPDATE=1

    SAVE IMAGE --push ${image}

image-class-latest:
    ARG image
    FROM +latest-class

    SAVE IMAGE --push ${image}

image-class-buildkite:
    ARG image
    FROM +buildkite-class

    ENV BUILDKITE_GIT_MIRRORS_PATH=/cache/git
    ENV BUILDKITE_GIT_MIRRORS_SKIP_UPDATE=1

    SAVE IMAGE --push ${image}

image-class-buildkite-latest:
    ARG image
    FROM +buildkite-latest-class

    SAVE IMAGE --push ${image}

class:
    FROM cache.defn.run:5000/dfd:base

    CACHE /home/ubuntu/work
    RUN sudo chown ubuntu:ubuntu /home/ubuntu/work && chmod 755 /home/ubuntu/work

    COPY script/800-defn-dev .
    RUN ./800-defn-dev && rm -f ./800-defn-dev

    RUN bash -c 'source .bash_profile && for e in vscodevim.vim jnoortheen.nix-ide hashicorp.terraform golang.go esbenp.prettier-vscode bazelbuild.vscode-bazel cuelang.cue marp-team.marp-vscode; do bin/nix/code-server serve-local --force --install-extension $e; done'
    RUN bash -c 'source .bash_profile && cd ~/m && ~/bin/persist-cache && go install golang.org/x/tools/gopls@latest && go install honnef.co/go/tools/cmd/staticcheck@latest && cd && git checkout .'

latest-class:
    FROM cache.defn.run:5000/dfd:class-latest

    CACHE /home/ubuntu/work

    RUN --no-cache git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git pull
    RUN bash -c 'source .bash_profile && make home && git checkout .'

    SAVE IMAGE --push ${image}

buildkite-class:
    FROM cache.defn.run:5000/dfd:class-latest

    RUN bin/persist-cache
    RUN --no-cache git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git pull
    RUN bash -c 'source .bash_profile && cd m && b build'

buildkite-latest-class:
    FROM cache.defn.run:5000/dfd:class-buildkite-latest

    RUN bin/persist-cache
    RUN --no-cache git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git pull
    RUN bash -c 'source .bash_profile && cd m && b build'

    SAVE IMAGE --push ${image}