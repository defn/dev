VERSION 0.8

buildkite:
    ARG image=cache.defn.run:5000/dfd:buildkite
    FROM ghcr.io/buildkite/agent-stack-k8s/agent:0.7.0

    ENV BUILDKITE_GIT_MIRRORS_PATH=/cache/git
    ENV BUILDKITE_GIT_MIRRORS_SKIP_UPDATE=1

    RUN git clone --mirror -v -- https://github.com/defn/dev.git ${BUILDKITE_GIT_MIRRORS_PATH}/https---github-com-defn-dev-git
    RUN --no-cache cd ${BUILDKITE_GIT_MIRRORS_PATH}/https---github-com-defn-dev-git && git fetch origin
    SAVE IMAGE --push ${image}

class:
    ARG image=cache.defn.run:5000/dfd:class
    ARG vsextensions="vscodevim.vim jnoortheen.nix-ide hashicorp.terraform golang.go esbenp.prettier-vscode bazelbuild.vscode-bazel cuelang.cue pbkit.vscode-pbkit marp-team.marp-vscode tailscale.vscode-tailscale geequlim.godot-tools alfish.godot-files ms-python.python"
    FROM cache.defn.run:5000/dfd:base

    CACHE /home/ubuntu/work

    ENV BUILDKITE_GIT_MIRRORS_PATH=/cache/git
    ENV BUILDKITE_GIT_MIRRORS_SKIP_UPDATE=1

    RUN sudo chown ubuntu:ubuntu /home/ubuntu/work && chmod 755 /home/ubuntu/work
    COPY script/800-defn-dev .
    RUN --privileged --secret tsauthkey bash -c "sudo apt update && sudo apt install -y screen dnsutils && curl -fsSL https://tailscale.com/install.sh | sudo sh && screen -d -m sudo /usr/sbin/tailscaled && sudo /usr/bin/tailscale up --authkey ${tsauthkey} && ./800-defn-dev && rm -f ./800-defn-dev /var/lib/tailscale"
    RUN git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git pull

    SAVE IMAGE --push ${image}-latest
    SAVE IMAGE --push ${image}-buildkite-latest

class-latest:
    ARG image=cache.defn.run:5000/dfd:class-latest
    FROM ${image}

    CACHE /home/ubuntu/work

    RUN --no-cache bash -c 'git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git pull'
    RUN --privileged --secret tsauthkey bash -c 'sudo sh && screen -d -m sudo /usr/sbin/tailscaled && sudo /usr/bin/tailscale up --authkey ${tsauthkey} && source .bash_profile && mkdir -p work && bin/persist-cache && make home'
    RUN git checkout .

    SAVE IMAGE --push ${image}

class-buildkite-latest:
    ARG image=cache.defn.run:5000/dfd:class-buildkite-latest
    FROM ${image}

    RUN bash -c 'source .bash_profile && for e in ${vsextensions}; do bin/nix/code-server serve-local --force --install-extension $e; done'
    RUN bash -c 'source .bash_profile && mkdir -p work && bin/persist-cache && cd m && go install golang.org/x/tools/gopls@latest && go install honnef.co/go/tools/cmd/staticcheck@latest'

    RUN --no-cache bash -c 'git config --global user.email "you@example.com" && git config --global user.name "Your Name" && git pull'
    RUN --privileged --secret tsauthkey bash -c 'sudo sh && screen -d -m sudo /usr/sbin/tailscaled && sudo /usr/bin/tailscale up --authkey ${tsauthkey} && source .bash_profile && make home && cd m && b build'
    RUN git checkout .

    SAVE IMAGE --push ${image}
