#!/usr/bin/env python

load("ext://restart_process", "custom_build_with_restart")


def main(
    app_build,
    app_release,
    app_entrypoint,
    host,
    registry,
    context="minikube",
    parent=os.getenv("DFD_PARENT"),
    env=os.getenv("DFD_NAME"),
    app_service="app",
):
    # local kubernetes
    allow_k8s_contexts(context)

    # local registry
    default_registry(registry)

    # deploy this app
    k8s_yaml(local("helm template chart"))

    # build this app
    local_resource("build", serve_cmd="make watch")

    # sync this app to workarea
    local_resource(
        name="build-to-workarea",
        cmd="make post-bazel build={build} release={release}".format(
            build=app_build, release=app_release
        ),
        deps=[app_build],
    )

    # app service
    k8s_resource(
        app_service,
    )

    # reload app service when workarea synced
    custom_build_with_restart(
        ref=app_service,
        command="make image",
        deps=[app_release],
        trigger=[app_release],
        entrypoint=app_entrypoint,
        live_update=[
            sync(app_release, app_entrypoint[0]),
        ],
    )
