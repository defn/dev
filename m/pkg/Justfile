import '../Justfile'

# Build the software
build:
    b build
    b run tutorial_html__copy
    chmod 0640 tutorial.html
    trunk fmt tutorial.html

# Run a python web service
server:
    python -m venv venv
    venv/bin/pip install -r requirements.txt
    venv/bin/python main.py

# Run a check script
check:
    true

# List latest GitHub releases
list:
	#!/usr/bin/env bash
	set -efuo pipefail

	mkdir -p ~/.config/gh
	yq --yaml-output -n --arg token "$(j github::token)" --arg handle "${GIT_AUTHOR_NAME}" '{"github.com": { users: { "\($handle)": { oauth_token: $token}}, git_protocol: "https", user: $handle, oauth_token: $token}}' > ~/.config/gh/hosts.yml

	set +f
	for a in */; do
		if grep ghrepo "${a}/flake.json" >/dev/null 2>/dev/null; then
			(
				cd "${a}"
				echo "${a} $(jq -r '.vendor' <flake.json || true) $(../az/bin/n-latest || true)" | while read -r slug current latest real_tag; do
					echo "${slug} ${current} ${latest} https://github.com/$(jq -r .ghrepo <flake.json || true)/releases/tag/${real_tag}"
				done
			)
		fi
	done | while read -r slug current latest real_tag; do
		if [[ ${current} != "${latest}" ]]; then
			echo "${slug} ${current} ${latest} ${real_tag}"
		fi
	done | (grep -E -v 'workerd/ 1.20241230.0 1.20250109.0|cloudnuke/ 0.38.0 0.38.1|kubeseal/ 0.* 2|step/ 0.28.0 0.28.1|coder/ 2.17.* 2.|argoworkflows/ 3.5.* 3.(3|4)|cloudnuke/ 0.35.0 0.37.0|argocd/ 2.12.* 2.(8|9|10|11)|vcluster/ 0.19.7 0.19.6' || true)

# Upgrade to the latest GitHub releases
latest:
	@env NIX_CONFIG="access-tokens = github.com=$(j github::token)" just update upgrade
	@git commit --allow-empty -m "finished upgrade"
	git push

# Update flakes to the latest GitHub release
[private]
update:
	#!/usr/bin/env bash
	set -exfuo pipefail

	just list | while read -r slug current latest _; do
		(
			mark "${slug}"
			cd "${slug}"
			../az/bin/n-bump "${latest}"
			../az/bin/n-release "${slug} ${current} -> ${latest}"
			nix build
		)
	done

# Upgrade all flake dependencies
[private]
upgrade:
	@n upgrade && n all update pkg deps
	@n upgrade && n all update pkg deps || true

# Rebuild and cache all flakes
[private]
cache:
	@cd attic && nix develop --command just cache-inner

cache-inner:
	@runmany "$(echo "$(nproc)/4" | bc)" 'cd $1 && nix build && n cache result' */
	@b build
	@cd /nix/store && runmany "$(nproc)" 'attic push hello $1 || true' */