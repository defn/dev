---
import Layout from "../layouts/Layout.astro";
import Counter from "../components/Counter.svelte";
import Button from "../components/Button.astro";

import { library, icon } from "@fortawesome/fontawesome-svg-core";
import { faEnvelope, faGamepad } from "@fortawesome/free-solid-svg-icons";

library.add(faEnvelope, faGamepad);
const gamepadIcon = icon({ prefix: "fas", iconName: faGamepad.iconName });
const envelopeIcon = icon({ prefix: "fas", iconName: faEnvelope.iconName });

const kv = Astro.locals.runtime.env.kv;
var kv_value = parseFloat(await kv.get("key"));
if (isNaN(kv_value)) {
  kv_value = 1;
}
await kv.put("key", kv_value + 1);

const bucket = Astro.locals.runtime.env.bucket;
var key_value = await bucket.get("key");
var r2_value = "new";
if (key_value !== null) {
  r2_value = await key_value.text();
}
await bucket.put("key", `${kv_value}:${Math.floor(Date.now() / 1000)}`);
---

<Layout>
  <Counter client:visible>
    <Button>
      <Fragment set:html={gamepadIcon.html} />
      <Fragment set:html={envelopeIcon.html} />
      <div>kv_value: {kv_value}</div>
      <div>r2_value: {r2_value}</div>
    </Button>
  </Counter>
</Layout>

<style is:global>
  .svg-inline--fa {
    overflow: visible;
    box-sizing: content-box;
    display: inline-block;
    height: 1em;
    vertical-align: -0.125em;
  }
</style>
