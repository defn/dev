VERSION --shell-out-anywhere --use-chmod --use-host-command --earthly-version-arg --use-copy-link --use-registry-for-with-docker --ci-arg 0.6

IMPORT github.com/defn/pkg:0.0.100

build-k3d:
    ARG image
    BUILD --platform=linux/amd64 +k3d --image=${image}
    BUILD --platform=linux/arm64 +k3d --image=${image}

k3d:
    ARG K3S=1.24.9-k3s1
    ARG image=ghcr.io/defn/dev:latest-k3d
    ARG arch

    FROM rancher/k3s:v${K3S}

    RUN echo root:x:0: >> /etc/group \
        && echo ubuntu:x:1000: >> /etc/group \
        && echo root:x:0:0:root:/root:/bin/sh >> /etc/passwd \
        && echo ubuntu:x:1000:1000:root:/home/ubuntu:/bin/sh >> /etc/passwd \
        && install -d -m 0700 -o root -g root /root \
        && mkdir -p /home && install -d -m 0700 -o ubuntu -g ubuntu /home/ubuntu

    RUN mv /bin/k3s /bin/k3s-real

    RUN for a in /bin/kubectl /bin/k3s-server /bin/k3s-secrets-encrypt /bin/k3s-etcd-snapshot /bin/k3s-completion /bin/k3s-certificate /bin/k3s-agent /bin/crictl /bin/ctr; do ln -nfs k3s-real $a; done

    RUN mkdir -p /var/lib/rancher/k3s/agent/etc/containerd
    COPY k3d-config.toml var/lib/rancher/k3s/agent/etc/containerd/config.toml

    COPY k3s-wrapper.sh /bin/k3s

    USER ubuntu
    WORKDIR /home/ubuntu

    COPY --dir --chown=ubuntu:ubuntu +nix/nix /nix
    RUN mkdir -p /home/ubuntu/.config/nix
    COPY nix.conf  /home/ubuntu/.config/nix/nix.conf

    RUN ln -nfs /nix/var/nix/profiles/per-user/ubuntu/profile /home/ubuntu/.nix-profile \
        && (echo export USER=ubuntu; echo export HOME=/home/ubuntu; echo export PATH="/bin:/usr/bin"; echo . /home/ubuntu/.nix-profile/etc/profile.d/nix.sh) > /home/ubuntu/.profile

    RUN . /home/ubuntu/.profile \
        && for a in bashInteractive git gnumake nix-direnv direnv; do \
            nix profile install nixpkgs#$a; done
    
    USER root
    RUN ln -nfs $(ls -trhd /nix/store/*bash-interactive*/bin/bash | head -1) /bin/bash
    RUN sed 's#/bin/sh#/bin/bash#' -i /etc/passwd

    USER ubuntu
    RUN . /home/ubuntu/.profile \
        && git clone https://github.com/defn/dev dev \
        && mv dev/.git . \
        && rm -rf dev \
        && git reset --hard \     
        && make nix \
        && nix profile install github:defn/pkg/tailscale-1.34.1-2?dir=tailscale 

    RUN --no-cache . /home/ubuntu/.profile && git pull

    USER root
    WORKDIR /

    IF [ "$image" != "" ]
        SAVE IMAGE --push ${image}
    END

nix:
    FROM pkg+root

    # nix
    RUN bash -c 'sh <(curl -L https://nixos.org/nix/install) --no-daemon --no-modify-profile' && mkdir -p .config/nix
    COPY nix.conf  .config/nix/nix.conf

    SAVE ARTIFACT /nix nix