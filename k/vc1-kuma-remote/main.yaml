---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/ingress-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-ingress
  namespace: kuma
  labels:
    app: kuma-ingress
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-tls-cert
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYVENDQWtXZ0F3SUJBZ0lSQVBzeTk4UDNUODZYSXF5Uk9vcmdadWd3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFphRncwek1qQTNNRGN3TWpVNApNRFphTUIweEd6QVpCZ05WQkFNVEVtdDFiV0V0WTI5dWRISnZiQzF3YkdGdVpUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNalQ3SnUvd0FKcFdzWmZkcS9UUzdDc3FSYW52bHhDTHliWWVYdWYKQ3lQaU53WnQvVFpISFhtNGFwK0FxS0NsamM2OGwzUFpEYTg0YUE4WjVDcFdudXNRZkdzUTZVM2UwbUZreHVFYQpGYmZreC82djNlMlludGtiOGF0Q2NLeVkxNTY0dW9JaHlzT2FLNVA3ajVKdFB5aUNLUS8wVDVRUVhRYWw5UTA3ClBPRkNUYXgxaUZ6K3c2SGhXS09wLzl2SEc3RUE1T1h4VmlVSUFYVDN3VmxWcDB4ZE0yQngydTlxTmdpYmt2dVAKQzM1Rlp1N3VSRHRNdVJUVDViRmx5SmtvRDRUemRodlZoMTZvNDlyNjJOSC82bWpoYUFaanQzUVBiL3M1U1lSUQpRclQ5REx1ZTNIWThWMWJUTGNUdzZFdVpYejB4S2wxWmQzYjVRdVFjOWwxckp3MENBd0VBQWFPQm9qQ0JuekFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVRNlpXa2NKVzdJakdyRVRYMTZvTnZINWFsR293UHdZRApWUjBSQkRnd05vSVhhM1Z0WVMxamIyNTBjbTlzTFhCc1lXNWxMbXQxYldHQ0cydDFiV0V0WTI5dWRISnZiQzF3CmJHRnVaUzVyZFcxaExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBbXIrbVI4VUVqOU14RFBRcnlLb2YKRlZpN0NoL1h4RXdRVUZGYVQwRTJuUmRxSUpQWHRCOCtWdGlDNCtsL1N3TlpxM2Q1bngyQno4QkdqblM1OEJiLwpGMHpXcmYvK2ZUaWlweGE5dUpvUzJBYTJKbWlHNU4xdmo2aHNCSEJ4bHFkM1JjR21SM1lZZFRKRnc1V2ZZM21hCklXbHRrL2FuNE5Dc0RGNWNEdm4xbWFCcnN1Q213dEhxU09qbWJNYW9venVSZndyV1ZPamZwRGtxWnFQQlJGSFUKWTdqSkc1VkpneEVBMnB1TkJMUUpUR25iVWZoZzBOZDNQcU9lUWZOZUo3MS9pOWpxdExmeHk0SU1jRitpaXJBYQovUDN0bVhWc3NZRlRnVlhNNDZaZW5TelM2dHFzWjdobVFrWkpheXNVYmVCN2h1WXhoRlJHQVpHRFM4Nzl4YVhFClhnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeU5Qc203L0FBbWxheGw5MnI5TkxzS3lwRnFlK1hFSXZKdGg1ZTU4TEkrSTNCbTM5Ck5rY2RlYmhxbjRDb29LV056cnlYYzlrTnJ6aG9EeG5rS2xhZTZ4QjhheERwVGQ3U1lXVEc0Um9WdCtUSC9xL2QKN1ppZTJSdnhxMEp3ckpqWG5yaTZnaUhLdzVvcmsvdVBrbTAvS0lJcEQvUlBsQkJkQnFYMURUczg0VUpOckhXSQpYUDdEb2VGWW82bi8yOGNic1FEazVmRldKUWdCZFBmQldWV25URjB6WUhIYTcybzJDSnVTKzQ4TGZrVm03dTVFCk8weTVGTlBsc1dYSW1TZ1BoUE4yRzlXSFhxamoydnJZMGYvcWFPRm9CbU8zZEE5dit6bEpoRkJDdFAwTXU1N2MKZGp4WFZ0TXR4UERvUzVsZlBURXFYVmwzZHZsQzVCejJYV3NuRFFJREFRQUJBb0lCQURPNTRnZDdyQWp5K2Q1KwpXQ09SV0wxNHUxU0tnQTFqUHFIU3YvZUhUMmMrck0yTEp0MEVGQ04xeklDb3NzWXQzZ2lScXJDOEJ6cEtYUU1HCnVDM3ZnWjhwNytIanlUTzFZSnFWU21SUVE2ZkoxWGxUOHVWdm1mcHhxQjFrVDRFbEhPUlUwRFVVWHhWaWNEYjkKWkUxaXRoSEk5S3FYVXFmZ1R4V1hTVGJQT3k4Slg4NjV1VVJpdGJzYUdhc2orZmkweU42U0lyUVRsRnZmdjg4Sgo0WVBGeGkyejd4TGxrSkxqT3NEclRUcXF3ZzVTTmlxU0gxY2E2MUpWTmVPUlBqdTYvMHdCc0toUzh1SkdVcnV0CjRRUC84NzdYdkl3S3cwR050QXpMS0xKMlZCdTBiTlE4Q055Skc4UENoRjRIWDMrcEhGaFNwVkVpMFUrK0l3eTUKeW40eUxrRUNnWUVBMU5YK2h4c3N0TEFmRXcyVFZlYUc1dDNzWWdFYXhqNUliNUFyWnIydW5FWXVMR0xzWnY4QQpmWXF6Q3pLRkozTFppQ0JBTkh4N2tzMmtuSFhpVi9JZHhTZ2NlUUg0QzFRdzFXVHVFRmRQbWozY0ZBa1lUNDFQCnRIT2NMM1VQVnFYNG81WnFEbFNvelVxTGhkMEpxeHJpbElCUTVkVHlZZkVpY0lsQmJ5TnhROThDZ1lFQThZNSsKcGd4QlNIeVBQZndKOStaM3dBNmJLanNncjdLRDhVWnczVzhpNDJzM2thOVEvS3IwekJWNXFtVHhyTk1QbUFCTQpYVUUxa2swQUZpUmFaM3BBZWsxTGcyRW1tSmhJTFgyUUcreDZrYlB5T25RVmpCellwQk5rOXlkS2gxT1BGRlBuCmNVNnVHdlc5T0ViWWVZRWxCSGU4SmVhcjlmQmZaTURSOUlyVWtwTUNnWUJaa3c2aVVmK0l0QzcvMTlEUWNFc0sKVXhBdlZ3T3J0MzdJNVVZKzRVbmhuMi9EWW9iWCtpNThwNmtlNTA0L0Fna25UMXQyTzRYT2pSbmdkNFNoT3RibwpxUzhDaHArY05QeXdjdC8ycEtodDQrY0J6Nm9ab1FHUWtxK0RFYU00OW5Va2RDT0NrSUxTazdNUXpheEtCUENqClN6WEE1TlIyQUFSY2xJZWpmS2tveFFLQmdGeEFoR1BjQ0U2cnEzVUx2YTdjYU4yRGRvVHhZZkZYNXdZTlZldHIKbDFKdFR5S25adkdvUktkd2lDK29MNWhHWHcwNUIvRVJoMmtoV1NnYnFCOGUxR01oQS9iZjhvS1NuZllwbnhEYgpCcENBdmNEUE5xOTFFTlBReUYyUHR1bnA0cG5yMVZjenFsQ0hpMFZqNFNhK1NLbmxKSWtCQ0tsN3JLTG85UVpFCnd4eGJBb0dBRnNRNS9hYnJSeExyWVNCZmI3eE1FWUp3Mm0xWE5RRXhDUkxRQ1RpdHlULzExRnN2ZzVmZ3QwazIKdVZuM3pKOXRSZGFWQUg0SWptT1prZWZYMHArd1dHNFJxLzEzQ25jMmxPUGpnU0VvUXhzaFJ3SGxyaGtoMmVMdgpwWVF0Q2VQa015YzEvcG1Tb2RvQXVNTTZhSFUxdFA4QStlN3Z3R0VCVVl1eFJpaFlkZHc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
      - gateways
      - referencepolicies
      - httproutes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses/status
      - gateways/status
      - httproutes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - delete
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - zoneegresses
      - zoneegressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
      - virtualoutbounds
      - containerpatches
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshgateways
      - meshgatewayroutes
      - meshgatewayinstances
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshgatewayinstances/status
    verbs:
      - get
      - patch
      - update
  # for the OwnerReferencesPermissionEnforcement plugin
  - apiGroups:
      - kuma.io
    resources:
      - meshgatewayinstances/finalizers
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - kuma.io
    resources:
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma
---
# Source: kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5680
      name: diagnostics
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
    - port: 5676
      name: mads-server
    - port: 5678
      name: dp-server
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-ingress
  namespace: kuma
  labels:
    app: kuma-ingress
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 10001
      protocol: TCP
      targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: 7a31b2caba8f733a897fe97ce38046ce4bad25358b36f13e24430d4050aeffa8
        checksum/tls-secrets: e19b4b7cb65c0032dfe0cb327566e60c830f892ebbb26c0d34521821a0fd9b59
      labels:
        app: kuma-control-plane
        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - 'kuma'
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - 'kuma'
                - key: app
                  operator: In
                  values:
                  - 'kuma-control-plane'
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: kuma-control-plane
      automountServiceAccountToken: true
      nodeSelector:

        kubernetes.io/os: linux
      hostNetwork: false
      terminationGracePeriodSeconds: 30
      containers:
        - name: control-plane
          image: "docker.io/kumahq/kuma-cp:1.7.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_AUTHN_LOCALHOST_IS_ADMIN
              value: "false"
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-init:1.7.0"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
              value: "grpcs://169.254.32.1:5685"
            - name: KUMA_MULTIZONE_ZONE_NAME
              value: "vc1"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-dp:1.7.0"
            - name: KUMA_RUNTIME_KUBERNETES_SERVICE_ACCOUNT_NAME
              value: "system:serviceaccount:kuma:kuma-control-plane"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kuma"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5680
              name: diagnostics
              protocol: TCP
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi

          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/tls.crt
              subPath: tls.crt
              readOnly: true
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/tls.key
              subPath: tls.key
              readOnly: true
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/ca.crt
              subPath: ca.crt
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kuma-tls-cert
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
# Source: kuma/templates/ingress-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-ingress
  namespace: kuma
  labels:
    app: kuma-ingress
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-ingress
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - 'kuma'
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - 'kuma'
                - key: app
                  operator: In
                  values:
                  - kuma-ingress
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: kuma-ingress
      nodeSelector:

        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 30
      containers:
        - name: ingress
          image: "docker.io/kumahq/kuma-dp:1.7.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUMA_CONTROL_PLANE_URL
              value: "https://kuma-control-plane.kuma:5678"
            - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
              value: /var/run/secrets/kuma.io/tls-cert/ca.crt
            - name: KUMA_DATAPLANE_NAME
              value: $(POD_NAME).$(POD_NAMESPACE)
            - name: KUMA_DATAPLANE_DRAIN_TIME
              value: 30s
            - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: KUMA_DATAPLANE_PROXY_TYPE
              value: "ingress"
          args:
            - run
            - --log-level=info
          ports:
            - containerPort: 10001
          livenessProbe:
            httpGet:
              path: "/ready"
              port: 9901
            failureThreshold: 12
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: "/ready"
              port: 9901
            failureThreshold: 12
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 64Mi

          volumeMounts:
            - name: kuma-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
      volumes:
        - name: kuma-tls-cert
          secret:
            secretName: kuma-tls-cert
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - meshgateways
          - meshgatewayroutes
          - proxytemplates
          - ratelimits
          - retries
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds


    sideEffects: None
  - name: namespace-kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchLabels:
        kuma.io/sidecar-injection: enabled
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - name: pods-kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    objectSelector:
      matchLabels:
        kuma.io/sidecar-injection: enabled
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - name: kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: kuma
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - gatewayinstances
          - healthchecks
          - meshes
          - meshgateways
          - meshgatewayroutes
          - proxytemplates
          - ratelimits
          - retries
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
          - zones
          - containerpatches


    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
  - name: gateway.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /validate-v1alpha2-gateway
    rules:
      - apiGroups:
          - "gateway.networking.k8s.io"
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
        resources:
          - gatewayclasses
    sideEffects: None
  - name: validate.gateway.networking.k8s.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtqbGFpaGhqNFowR0MxWlM4cXhtRTR3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEzTVRBd01qVTRNRFZhRncwek1qQTNNRGN3TWpVNApNRFZhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEVktKYUl0Nkp5TFltZVNxSGRJUm52dTl3T0FpY2g2NlRxaWwvRkg4bnkvdmpPSnAzOWVJUGsKcTByWENSOGxsWGI1S29ZWUlsT2lTNDE0bkdXcWVPdXc0c2YyazR3SUttSVZnekwrdkt2RVJvUC9Ec0JTcVVqcwowMHB4ZzRPTG85NitlNmF5NkJGV0M4Q0hxUVY0cWFkQnVRVlkyblRhd0xENEZ0VlhBdmc0dTZYYis0cjFiSVovCndUQW1HdVNCSlVqMndaOWUwWHdxVTBna2tYUGhyUTB6a291OUhHYlBNQXhxNDJ4Sjc0OVBjZWNTTG9ySWh1ZUoKQUtlYU5JZ3NOSEFUZmtqZTArZjNscGNZd2VMWFZpVG5mOUZFVk14alpFTWxwMUoweTNBbFlWMnNPbTZMQ2Jnago1VGVRN0NqTEpmUUUrbmZ4eGhFS2xndXFxWUtENDBxOUFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVE2WldrY0pXN0lqR3JFVFgxNm9Odkg1YWxHb3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUs0WEFwb1JWa3M0d3pkSEdkQ2tORHNRVXZIcFlwb0dBVW9tRko0Qm9KYnNhODBjS2Znb1JvcjlUeS9yCjQ3Nkw4Z215bk16M2RpU0E0Nkc5OTFNTlRvRzdpbWtNSUZ4bTE4a0EzUGpGN0dSWFd1ZFFSNDlFV2g4L3dNV2MKQTF6V0NYTUpBS0VZSHdGM2ErVm9hUVhPaWpDTmlHNkd5SStQSGd2MVRkSVVrdHVpa2I0RUpFWi81OUlPRXJWZQpuOGxUZ1JpU1hDS1BpYjNscUR3RkdBejZzSHpkbUxpR2g5RTA2dm9lYVN0UFdUeVplSGk1blNDYVNXbTJCVi9ICjBtcGlNNEo4dnd3RmwxY3o3S0RJWFZ5VTFLd2FCUVp4WkxSTDBlMndtY0tZR1dvc0ZjaHBFVjZoT0lrWkV6aXMKZERvaGRLcytHd2VjazQ3U3JnNUpldExWNSt3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma
        name: kuma-control-plane
        path: /validate-v1alpha2-gateway-upstream
    rules:
      - apiGroups:
          - "gateway.networking.k8s.io"
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - gateways
          - gatewayclasses
          - httproutes
    sideEffects: None
---
# Source: kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-pre-delete-job
  namespace: kuma
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-patch-ns-job
  namespace: kuma
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-install-missing-crds-scripts
  namespace: kuma
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing )"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kuma-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-patch-ns-job
  namespace: kuma
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - kuma
    verbs:
      - get
      - patch
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - list
      - get
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kuma-pre-delete-job
    namespace: kuma
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-patch-ns-job
  namespace: kuma
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kuma-patch-ns-job
    namespace: kuma
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
  - kind: ServiceAccount
    name: kuma-install-missing-crds
    namespace: kuma
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-delete-webhook
  namespace: kuma
  labels:

    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"

    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-delete-webhook
      labels:

        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-pre-delete-job
      nodeSelector:

        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "kumahq/kubectl:v1.20.15"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kuma-validating-webhook-configuration
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-patch-ns
  namespace: kuma
  labels:

    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"

    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-patch-ns-script
      labels:

        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-patch-ns-job
      nodeSelector:

        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-install-job
          image: "kumahq/kubectl:v1.20.15"
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "kuma"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-install-missing-crds
  namespace: kuma
  labels:

    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kuma-install-missing-crds-job
      labels:

        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-install-missing-crds
      nodeSelector:

        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "kumahq/kubectl:v1.20.15"
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          command:
            - '/kuma/scripts/install_missing_crds.sh'
          volumeMounts:
            - mountPath: /kuma/missing
              name: missing-crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kumahq/kumactl:1.7.0"
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          volumeMounts:
          - mountPath: /kuma/missing
            name: missing-crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command:
          - '/kuma/scripts/save_missing_crds.sh'
      volumes:
        - name: scripts
          configMap:
            name: kuma-install-missing-crds-scripts
            defaultMode: 0755
        - name: missing-crds
          emptyDir: {}
