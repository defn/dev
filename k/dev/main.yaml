apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: dev
spec:
  selector:
    matchLabels:
      app: dev
  serviceName: dev
  replicas: 1
  template:
    metadata:
      labels:
        app: dev
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: dev
          image: k3d-registry:5000/defn/dev:latest
          imagePullPolicy: Always
          command: ["/usr/bin/tini", "--"]
          args: ["make", "monitor-loop"]
          volumeMounts:
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: work
              mountPath: /home/ubuntu/work
        - name: buildkitd
          image: earthly/buildkitd:v0.6.19
          volumeMounts:
            - name: earthly
              mountPath: /tmp/earthly
          tty: true
          securityContext:
            privileged: true
      volumes:
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: work
          hostPath:
            path: /mnt/work
        - name: earthly
          hostPath:
            path: /mnt/earthly
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dev
subjects:
  - kind: ServiceAccount
    namespace: default
    name: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: local-registry-hosting
  namespace: kube-public
data:
  localRegistryHosting.v1: |
    host: localhost:5000
    hostFromClusterNetwork: k3d-registry:5000
    hostFromContainerRuntime: k3d-registry:5000
