---
# Source: crds/kuma.io_circuitbreakers.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: circuitbreakers.kuma.io
spec:
  group: kuma.io
  names:
    kind: CircuitBreaker
    listKind: CircuitBreakerList
    plural: circuitbreakers
    singular: circuitbreaker
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma CircuitBreaker resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_containerpatches.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: containerpatches.kuma.io
spec:
  group: kuma.io
  names:
    kind: ContainerPatch
    listKind: ContainerPatchList
    plural: containerpatches
    singular: containerpatch
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ContainerPatch stores a list of patches to apply to init and
          sidecar containers.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            type: string
          metadata:
            type: object
          spec:
            description: ContainerPatchSpec specifies the options available for a
              ContainerPatch
            properties:
              initPatch:
                description: InitPatch specifies jsonpatch to apply to an init container.
                items:
                  description: JsonPatchBlock is one json patch operation block.
                  properties:
                    from:
                      description: From is a jsonpatch from string, used by move and
                        copy operations.
                      type: string
                    op:
                      description: Op is a jsonpatch operation string.
                      enum:
                      - add
                      - remove
                      - replace
                      - move
                      - copy
                      type: string
                    path:
                      description: Path is a jsonpatch path string.
                      type: string
                    value:
                      description: Value must be a string representing a valid json
                        object used by replace and add operations. String has to be
                        escaped with " to be valid a json object.
                      type: string
                  required:
                  - op
                  - path
                  type: object
                type: array
              sidecarPatch:
                description: SidecarPatch specifies jsonpatch to apply to a sidecar
                  container.
                items:
                  description: JsonPatchBlock is one json patch operation block.
                  properties:
                    from:
                      description: From is a jsonpatch from string, used by move and
                        copy operations.
                      type: string
                    op:
                      description: Op is a jsonpatch operation string.
                      enum:
                      - add
                      - remove
                      - replace
                      - move
                      - copy
                      type: string
                    path:
                      description: Path is a jsonpatch path string.
                      type: string
                    value:
                      description: Value must be a string representing a valid json
                        object used by replace and add operations. String has to be
                        escaped with " to be valid a json object.
                      type: string
                  required:
                  - op
                  - path
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_dataplaneinsights.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: dataplaneinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: DataplaneInsight
    listKind: DataplaneInsightList
    plural: dataplaneinsights
    singular: dataplaneinsight
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          status:
            description: Status is the status the Kuma resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_dataplanes.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: dataplanes.kuma.io
spec:
  group: kuma.io
  names:
    kind: Dataplane
    listKind: DataplaneList
    plural: dataplanes
    singular: dataplane
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Dataplane resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_externalservices.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: externalservices.kuma.io
spec:
  group: kuma.io
  names:
    kind: ExternalService
    listKind: ExternalServiceList
    plural: externalservices
    singular: externalservice
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ExternalService resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_faultinjections.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: faultinjections.kuma.io
spec:
  group: kuma.io
  names:
    kind: FaultInjection
    listKind: FaultInjectionList
    plural: faultinjections
    singular: faultinjection
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma FaultInjection resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_healthchecks.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: healthchecks.kuma.io
spec:
  group: kuma.io
  names:
    kind: HealthCheck
    listKind: HealthCheckList
    plural: healthchecks
    singular: healthcheck
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma HealthCheck resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_meshes.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshes.kuma.io
spec:
  group: kuma.io
  names:
    kind: Mesh
    listKind: MeshList
    plural: meshes
    singular: mesh
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Mesh resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_meshgatewayinstances.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshgatewayinstances.kuma.io
spec:
  group: kuma.io
  names:
    kind: MeshGatewayInstance
    listKind: MeshGatewayInstanceList
    plural: meshgatewayinstances
    singular: meshgatewayinstance
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MeshGatewayInstance represents a managed instance of a dataplane
          proxy for a Kuma Gateway.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MeshGatewayInstanceSpec specifies the options available for
              a GatewayDataplane.
            properties:
              replicas:
                default: 1
                description: Replicas is the number of dataplane proxy replicas to
                  create. For now this is a fixed number, but in the future it could
                  be automatically scaled based on metrics.
                format: int32
                minimum: 1
                type: integer
              resources:
                description: Resources specifies the compute resources for the proxy
                  container. The default can be set in the control plane config.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              serviceTemplate:
                description: ServiceTemplate configures the Service owned by this
                  config.
                properties:
                  metadata:
                    description: Metadata holds metadata configuration for a Service.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations holds annotations to be set on a
                          Service.
                        type: object
                    type: object
                type: object
              serviceType:
                default: LoadBalancer
                description: ServiceType specifies the type of managed Service that
                  will be created to expose the dataplane proxies to traffic from
                  outside the cluster. The ports to expose will be taken from the
                  matching Gateway resource. If there is no matching Gateway, the
                  managed Service will be deleted.
                enum:
                - LoadBalancer
                - ClusterIP
                - NodePort
                type: string
              tags:
                additionalProperties:
                  type: string
                description: Tags specifies the Kuma tags that are propagated to the
                  managed dataplane proxies. These tags should include exactly one
                  `kuma.io/service` tag, and should match exactly one Gateway resource.
                type: object
            type: object
          status:
            description: MeshGatewayInstanceStatus holds information about the status
              of the gateway instance.
            properties:
              conditions:
                description: Conditions is an array of gateway instance conditions.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              loadBalancer:
                description: LoadBalancer contains the current status of the load-balancer,
                  if one is present.
                properties:
                  ingress:
                    description: Ingress is a list containing ingress points for the
                      load-balancer. Traffic intended for the service should be sent
                      to these ingress points.
                    items:
                      description: 'LoadBalancerIngress represents the status of a
                        load-balancer ingress point: traffic intended for the service
                        should be sent to an ingress point.'
                      properties:
                        hostname:
                          description: Hostname is set for load-balancer ingress points
                            that are DNS based (typically AWS load-balancers)
                          type: string
                        ip:
                          description: IP is set for load-balancer ingress points
                            that are IP based (typically GCE or OpenStack load-balancers)
                          type: string
                        ports:
                          description: Ports is a list of records of service ports
                            If used, every port defined in the service should have
                            an entry in it
                          items:
                            properties:
                              error:
                                description: 'Error is to record the problem with
                                  the service port The format of the error shall comply
                                  with the following rules: - built-in error values
                                  shall be specified in this file and those shall
                                  use CamelCase names - cloud provider specific error
                                  values must have names that comply with the format
                                  foo.example.com/CamelCase. --- The regex it matches
                                  is (dns1123SubdomainFmt/)?(qualifiedNameFmt)'
                                maxLength: 316
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              port:
                                description: Port is the port number of the service
                                  port of which status is recorded here
                                format: int32
                                type: integer
                              protocol:
                                default: TCP
                                description: 'Protocol is the protocol of the service
                                  port of which status is recorded here The supported
                                  values are: "TCP", "UDP", "SCTP"'
                                type: string
                            required:
                            - port
                            - protocol
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_meshgatewayroutes.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshgatewayroutes.kuma.io
spec:
  group: kuma.io
  names:
    kind: MeshGatewayRoute
    listKind: MeshGatewayRouteList
    plural: meshgatewayroutes
    singular: meshgatewayroute
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshGatewayRoute resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_meshgateways.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshgateways.kuma.io
spec:
  group: kuma.io
  names:
    kind: MeshGateway
    listKind: MeshGatewayList
    plural: meshgateways
    singular: meshgateway
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshGateway resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_meshinsights.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: meshinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: MeshInsight
    listKind: MeshInsightList
    plural: meshinsights
    singular: meshinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma MeshInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_proxytemplates.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: proxytemplates.kuma.io
spec:
  group: kuma.io
  names:
    kind: ProxyTemplate
    listKind: ProxyTemplateList
    plural: proxytemplates
    singular: proxytemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ProxyTemplate resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_ratelimits.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: ratelimits.kuma.io
spec:
  group: kuma.io
  names:
    kind: RateLimit
    listKind: RateLimitList
    plural: ratelimits
    singular: ratelimit
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma RateLimit resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_retries.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: retries.kuma.io
spec:
  group: kuma.io
  names:
    kind: Retry
    listKind: RetryList
    plural: retries
    singular: retry
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Retry resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_serviceinsights.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: serviceinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ServiceInsight
    listKind: ServiceInsightList
    plural: serviceinsights
    singular: serviceinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ServiceInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_timeouts.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: timeouts.kuma.io
spec:
  group: kuma.io
  names:
    kind: Timeout
    listKind: TimeoutList
    plural: timeouts
    singular: timeout
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Timeout resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_trafficlogs.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: trafficlogs.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficLog
    listKind: TrafficLogList
    plural: trafficlogs
    singular: trafficlog
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficLog resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_trafficpermissions.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: trafficpermissions.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficPermission
    listKind: TrafficPermissionList
    plural: trafficpermissions
    singular: trafficpermission
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficPermission resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_trafficroutes.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: trafficroutes.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficRoute
    listKind: TrafficRouteList
    plural: trafficroutes
    singular: trafficroute
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficRoute resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_traffictraces.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: traffictraces.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficTrace
    listKind: TrafficTraceList
    plural: traffictraces
    singular: traffictrace
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma TrafficTrace resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_virtualoutbounds.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: virtualoutbounds.kuma.io
spec:
  group: kuma.io
  names:
    kind: VirtualOutbound
    listKind: VirtualOutboundList
    plural: virtualoutbounds
    singular: virtualoutbound
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma VirtualOutbound resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_zoneegresses.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: zoneegresses.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneEgress
    listKind: ZoneEgressList
    plural: zoneegresses
    singular: zoneegress
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneEgress resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_zoneegressinsights.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: zoneegressinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneEgressInsight
    listKind: ZoneEgressInsightList
    plural: zoneegressinsights
    singular: zoneegressinsight
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneEgressInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_zoneingresses.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: zoneingresses.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneIngress
    listKind: ZoneIngressList
    plural: zoneingresses
    singular: zoneingress
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneIngress resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_zoneingressinsights.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: zoneingressinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneIngressInsight
    listKind: ZoneIngressInsightList
    plural: zoneingressinsights
    singular: zoneingressinsight
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneIngressInsight
              resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_zoneinsights.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: zoneinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneInsight
    listKind: ZoneInsightList
    plural: zoneinsights
    singular: zoneinsight
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma ZoneInsight resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: crds/kuma.io_zones.yaml
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: zones.kuma.io
spec:
  group: kuma.io
  names:
    kind: Zone
    listKind: ZoneList
    plural: zones
    singular: zone
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          mesh:
            description: Mesh is the name of the Kuma mesh this resource belongs to.
              It may be omitted for cluster-scoped resources.
            type: string
          metadata:
            type: object
          spec:
            description: Spec is the specification of the Kuma Zone resource.
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/ingress-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-ingress
  namespace: default
  labels:
    app: kuma-ingress
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-tls-cert
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRTGpIVTNNMW90RGV4cXRRMTI0T2NSVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXlNRFl5T1RBME16Z3hPRm9YRFRNeU1EWXlOakEwTXpneApPRm93SFRFYk1Ca0dBMVVFQXhNU2EzVnRZUzFqYjI1MGNtOXNMWEJzWVc1bE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXRjcmNZU3JlTmZGSDkrMk9tbnpVc1VCRDN5Sk5OUGVBUGJVMXA1L3kKc3JhSWgrYjlPbzRQV0hYTFFwWlp6MGRjTHVsK3RDR1NTY0dsS1NQUkN5ZVJhRjVyY3RONUc4aXpFb0d1NG42aApvUk5pbzZpaW4zMVE5OHpKVXY1dFl3disrTElBWS9FMm15R3ZrRklEaVM2RW4yb3E5bEJLUlg0amdiT1d0N0FZCllKZ3BJY1VYaGF2MHQwMmlkN09iUGhHWHYzdVU1UWpCUzg5dW9XbmlPZzhuY2VkdHV1UFEyMEhiSUttcTI1eHkKRVhGMWVtRDBPL2FaOFduZnNDTG00NGZnY0prVTE2RXhhYTV6amx1eldUMVhBLzg4akVtcys0NTRaSE9DL3pISwpRZ2ZvUWFSUzNKbS9tRmZFd2VQeGhJQXFjdjdGM0QwaHBYVEo3RG5PTVp5NlN3SURBUUFCbzRHb01JR2xNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUVozSUZqODhreFBqOUt5TjdQckhUNDRLUHlGekJGQmdOVgpIUkVFUGpBOGdocHJkVzFoTFdOdmJuUnliMnd0Y0d4aGJtVXVaR1ZtWVhWc2RJSWVhM1Z0WVMxamIyNTBjbTlzCkxYQnNZVzVsTG1SbFptRjFiSFF1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQjRTN2tpNm1EY2NDMDcKdzhpUytLZ0p3QVFEZ0owUmZoU2Nhd3UyclBUMzV1ZzFnYlJoN1R4dG9RaFUyTUN4ZGliM0Rwb3VmWUhtMmpmbwpXZnhPc25ZdmxTeG1pM1o3Ri80QlJZSDZGTyt2aVVnekhVN0NjUEwrWlJVSGsyUnBhNUxka09qOHRZd2RiOUV1ClViMWlpUUx1ZUtRaTNMdFNvc29XcHVGVldyNnRTeFg2WS8yclE2c2RVZzU0MnRxT1JTS1dsbCtRU1JwZGpIWEoKL1NTekVWdVdndEkxek1sSDFtdkJhdzhJMHVySHpBYXlheStCdXUxOHI5N0VmRXYvZVR1dk51SzVjL1FwMkNVcgpKYVI4WndUYkZMdDJ0QVcvTm5QYTNRNTNqV3lmMjZBWjl5SGlMeUdyL3Y1clN6ZFZNNittVEZ5OGZBOGpzVDdICmF2NFhRejZVCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdGNyY1lTcmVOZkZIOSsyT21uelVzVUJEM3lKTk5QZUFQYlUxcDUveXNyYUloK2I5Ck9vNFBXSFhMUXBaWnowZGNMdWwrdENHU1NjR2xLU1BSQ3llUmFGNXJjdE41RzhpekVvR3U0bjZob1JOaW82aWkKbjMxUTk4ekpVdjV0WXd2KytMSUFZL0UybXlHdmtGSURpUzZFbjJvcTlsQktSWDRqZ2JPV3Q3QVlZSmdwSWNVWApoYXYwdDAyaWQ3T2JQaEdYdjN1VTVRakJTODl1b1duaU9nOG5jZWR0dXVQUTIwSGJJS21xMjV4eUVYRjFlbUQwCk8vYVo4V25mc0NMbTQ0ZmdjSmtVMTZFeGFhNXpqbHV6V1QxWEEvODhqRW1zKzQ1NFpIT0MvekhLUWdmb1FhUlMKM0ptL21GZkV3ZVB4aElBcWN2N0YzRDBocFhUSjdEbk9NWnk2U3dJREFRQUJBb0lCQUErVXVIaTNoTjRZdFBOaAo3L1A3dVBzTUtBVUsycFVzbFZnMG5NbW1JdFlBWVFsTTJlMVgyYWJhU2JhR1RtSSttbjhHMGk0OEpsNmQ4enJvCmIvVkZ5ZWVwR0FwNlo0bmpGTDRFVVdubU1wSXNxQ3FndkhkdzlTeVg1N1Z1U3cvUEttWkVVMVk5aVZHWWZJU2gKRXQ2Q0Z5blducUlIMWFYSkh0L3g5WHYrNHNmOGZaTkxrSC80aGw1Um1aN2k2Z0QzQi8rWit6MUIwOU13WUVPZwpNZ21VYU9YMzZDV2M4SnhIK3B5VFpxV0QxenAxbnlieVVjMUhRemRLbVVmRU42ekl1TkY4NW96UTlPMDdCaUIyCmxZNW5TcWRlbVZ4eHZKYkJGLzQreGZ2RzBzemtMUlMxUFhLREY0dlZTQ28zOXpKMEtQN1JOeXI1QnlBdmlpM08KYTl0ZEVVa0NnWUVBeWkyKy9kaUxpenB5R3hXUFZiQW5jN0lpcCt1WnArQlpNMHZ4cXdjRk5reVVRMWdJMDEvVgpmWUVBbWNqNFh1TTcrSUwxc1c4OWxQalhKRXBjZ1U5TkppallSZGRiZU1HWkpMVjA1TnY3UnJLd0lVMTB0L1ZWCmFaUi96cmFwKzVtWHFkN2VDL2tydjR4eGlLbzlLbGswYnVuY1JkcHBwTW1kZ0o2U2Z2TlRDdGNDZ1lFQTVpL1EKSmRJV2FseGRBMGc2N1kyQXViSFU4ZTVtelB6NkJFY3U4ZU45QzRSY0RERHlJZTdMY1NhRTNvaHV0NXJTdmlqawptSFNIeGw2M24xb0tEcE1TYVR5WmtPVGJyWWNLL2RZdUljMTZoNXJ5dkgyNDRYN1V6V1U1U2NyNlJJZkM5eHhCCkFYelFUZ2ZDZ05mNTJBOEZ3TWNuYkVPZy9EQXI4eVlvVGdYRzhhMENnWUJmRGJycDVkRlZtQmpsbXZGVXZBa1EKWUFQakp1V0xBL05zSnB4c2FGU08vdG9GLzNIR3p4dTBjZDR5YjBZMmRtZFBvMktZRlZEQ3BXdWc2RVV0bG5jVApKY2pvclNPWVZvMEZzVHBRRHd6SVpHSmloZVFHU1JYckdhSXRNYndoU2tqLzJJUlU1TVVvdllMeldmWi8zb2pFClRMYi9NSHpTdU9lUC9QMnJLZ00wNlFLQmdRQ0c5UkY4bXlnNVE5M2t4cnlGK3FpMk51VTYweVBDbTYrYVFvSHIKb0F6NGE2bnNHK1phcnI3b29FVFdrL2NWL3RnQVZjbHcrU0dCMUphai93NVdiVFFtTHpsNkVqUWFFVXNJZUVLagozdTB3QkZDODRwazYzRG00RXRqN3d0M293QkEzQVlHN2RZcEx0WkQ4S2FSNllKUm02bHpheE92bDcvaFVudEtTCnJDQndJUUtCZ0RkYVBucGw3eEptaVc5bDV1YStFMzhON0VXVEdQczdrbzRCR3c5S0JSWlFtMWZzQnVwS0tadU0KTjkrZ1ZjeFpVenlMaEl6Qi9DVytUOFdkWkhLY1hMZmtzU3VRRzM1SzdtZ2J6WjM3SHh1cFVGeHFxNWNyNlo2NwpSbWZiNTZ1U2xkYll5VXczS0U3cGM0eGVQc2M4dUR0WUE2dlcrTnRaWGFTNnRvZUVKY3Y4Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "apps"
    resources:
      - deployments
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses
      - gateways
      - referencepolicies
      - httproutes
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - gatewayclasses/status
      - gateways/status
      - httproutes/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - delete
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - zoneegresses
      - zoneegressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
      - virtualoutbounds
      - containerpatches
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshgateways
      - meshgatewayroutes
      - meshgatewayinstances
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshgatewayinstances/status
    verbs:
      - get
      - patch
      - update
  # for the OwnerReferencesPermissionEnforcement plugin
  - apiGroups:
      - kuma.io
    resources:
      - meshgatewayinstances/finalizers
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - kuma.io
    resources:
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: default
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: default
---
# Source: kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5680
      name: diagnostics
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
    - port: 5676
      name: mads-server
    - port: 5678
      name: dp-server
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-ingress
  namespace: default
  labels:
    app: kuma-ingress
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 10002
      protocol: TCP
      targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: a003bb631788dbbee1ac2048ce9cc61096fd7cbe6a4bb8b732c20d11be04440f
        checksum/tls-secrets: 7c056f3afe6984ba6847cab8c70025f7b6aae198bc239ed67dda3bdce6523603
      labels:
        app: kuma-control-plane
        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - 'kuma'
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - 'kuma'
                - key: app
                  operator: In
                  values:
                  - 'kuma-control-plane'
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: kuma-control-plane
      automountServiceAccountToken: true
      nodeSelector:

        kubernetes.io/os: linux
      hostNetwork: false
      terminationGracePeriodSeconds: 30
      containers:
        - name: control-plane
          image: "docker.io/kumahq/kuma-cp:1.7.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_AUTHN_LOCALHOST_IS_ADMIN
              value: "false"
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-init:1.7.0"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
              value: "grpcs://10.43.247.237:5685"
            - name: KUMA_MULTIZONE_ZONE_NAME
              value: "vc2"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-dp:1.7.0"
            - name: KUMA_RUNTIME_KUBERNETES_SERVICE_ACCOUNT_NAME
              value: "system:serviceaccount:default:kuma-control-plane"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "default"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5680
              name: diagnostics
              protocol: TCP
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi

          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/tls.crt
              subPath: tls.crt
              readOnly: true
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/tls.key
              subPath: tls.key
              readOnly: true
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert/ca.crt
              subPath: ca.crt
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kuma-tls-cert
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
# Source: kuma/templates/ingress-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-ingress
  namespace: default
  labels:
    app: kuma-ingress
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-ingress
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - 'kuma'
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - 'kuma'
                - key: app
                  operator: In
                  values:
                  - kuma-ingress
              topologyKey: kubernetes.io/hostname
            weight: 100
      serviceAccountName: kuma-ingress
      nodeSelector:

        kubernetes.io/os: linux
      terminationGracePeriodSeconds: 30
      containers:
        - name: ingress
          image: "docker.io/kumahq/kuma-dp:1.7.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUMA_CONTROL_PLANE_URL
              value: "https://kuma-control-plane.default:5678"
            - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
              value: /var/run/secrets/kuma.io/tls-cert/ca.crt
            - name: KUMA_DATAPLANE_NAME
              value: $(POD_NAME).$(POD_NAMESPACE)
            - name: KUMA_DATAPLANE_DRAIN_TIME
              value: 30s
            - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: KUMA_DATAPLANE_PROXY_TYPE
              value: "ingress"
          args:
            - run
            - --log-level=info
          ports:
            - containerPort: 10001
          livenessProbe:
            httpGet:
              path: "/ready"
              port: 9901
            failureThreshold: 12
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: "/ready"
              port: 9901
            failureThreshold: 12
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            limits:
              cpu: 1000m
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 64Mi

          volumeMounts:
            - name: kuma-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
      volumes:
        - name: kuma-tls-cert
          secret:
            secretName: kuma-tls-cert
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - meshgateways
          - meshgatewayroutes
          - proxytemplates
          - ratelimits
          - retries
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds


    sideEffects: None
  - name: namespace-kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    namespaceSelector:
      matchLabels:
        kuma.io/sidecar-injection: enabled
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - name: pods-kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    objectSelector:
      matchLabels:
        kuma.io/sidecar-injection: enabled
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
  - name: kuma-injector.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: default
  labels:
    app: kuma-control-plane
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - gatewayinstances
          - healthchecks
          - meshes
          - meshgateways
          - meshgatewayroutes
          - proxytemplates
          - ratelimits
          - retries
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
          - zones
          - containerpatches


    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
  - name: gateway.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /validate-v1alpha2-gateway
    rules:
      - apiGroups:
          - "gateway.networking.k8s.io"
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
        resources:
          - gatewayclasses
    sideEffects: None
  - name: validate.gateway.networking.k8s.io
    admissionReviewVersions: ["v1"]
    failurePolicy: Fail
    matchPolicy: Equivalent
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9tb3VFMmtQSTh4MXI5UnhCQ0o3UWN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNakEyTWprd05ETTRNVGhhRncwek1qQTJNall3TkRNNApNVGhhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEUjBRVzR1WmY4RVRsY0JzL3JMckJpcXlPd2tpS0dzNDFkQ1MvbThXdXRNMGxEaHR4SkFxSHcKOVdhcnY1UjZyUDB1Q0p5dCtYaTdDY1d3NVhxT2JqeHA0cTJLdkFjVVN4bzU0UEZvR1hxQnlyYUpEK3N3bUJkWgprbkU0WEVkV1cza2ZXOHg1Z3ZudGRuMDRyV0pDb3lhblB5Y0J2bVF5SUp0SnZsUFkwV0dRc3lUMlg5TDZ5NGZOCkpaUjcweHhJQlJhNm4zTGh1Z3BKdXNLSm05Ujh0eEx1ZGpudDkzZklrTlZ4d2RwUUVYdnRhRGY5SHNEa1hxbmsKZ2o4RGl0RHVFMW9xYWRHL3VCL0JFbytMWFRyTXBPS1B2QUdPZW8zNGRzRzFsUlhCNjdKY2tTSWhmSmhxRU5NeApmZlpURElkUkI1WUZFdXdQYmF5VWtlb3pGTnNxeFZXaEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUdkeUJZL1BKTVQ0L1NzamV6NngwK09DajhoY3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUI1NjJoWFI3VlRNWk1HT0RXSEZ1QUZQOFR1bm9Za09LWnYrbk1jUGQybVAralY0bWdPRUlSb2FSaFlWCmZDUDEvZUlGQTVpQTdXaG5KWVV4RlVlUjlySzVYSCs0alk1dUVwSUxuVnI1N3greWZRbHFCQjNwYUVubzdaTnIKYkQ5OFlyVk9KQUNNRzQwb2pPNnZMQXAxRkZZN3R2Y1QrMkJ3VzB5aDJZOVB2dGwyOUVwOXJXZWlmRUhLMm01RwpNYmIxRGExL25QenVXc2RreW1lVDMwSFF1dGVsc1ZJM0wwdGhhaVMvRGttQndYRDNNRGhhOWxNS0dQUDRUTXRlCmtEZkNDOEhkajl4alVnUG5CbUNNWWVzQWVaWkxFS3ZQeStaOG5zU0JBS1JRek9QblBaY09wMDVaM3NtMThsU00KVC9xZGlCa1VoTWlRcXpEakkrWml1T3BVT1VRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: default
        name: kuma-control-plane
        path: /validate-v1alpha2-gateway-upstream
    rules:
      - apiGroups:
          - "gateway.networking.k8s.io"
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - gateways
          - gatewayclasses
          - httproutes
    sideEffects: None
---
# Source: kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-pre-delete-job
  namespace: default
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-patch-ns-job
  namespace: default
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-install-missing-crds-scripts
  namespace: default
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing )"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kuma-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-patch-ns-job
  namespace: default
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - default
    verbs:
      - get
      - patch
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - list
      - get
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kuma-pre-delete-job
    namespace: default
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-patch-ns-job
  namespace: default
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kuma-patch-ns-job
    namespace: default
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
  - kind: ServiceAccount
    name: kuma-install-missing-crds
    namespace: default
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-delete-webhook
  namespace: default
  labels:

    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"

    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-delete-webhook
      labels:

        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-pre-delete-job
      nodeSelector:

        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "kumahq/kubectl:v1.20.15"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kuma-validating-webhook-configuration
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-patch-ns
  namespace: default
  labels:

    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"

    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-patch-ns-script
      labels:

        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-patch-ns-job
      nodeSelector:

        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-install-job
          image: "kumahq/kubectl:v1.20.15"
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "default"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-install-missing-crds
  namespace: default
  labels:

    helm.sh/chart: kuma-1.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.7.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade,pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kuma-install-missing-crds-job
      labels:

        helm.sh/chart: kuma-1.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.7.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-install-missing-crds
      nodeSelector:

        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "kumahq/kubectl:v1.20.15"
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          command:
            - '/kuma/scripts/install_missing_crds.sh'
          volumeMounts:
            - mountPath: /kuma/missing
              name: missing-crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kumahq/kumactl:1.7.0"
          resources:
             requests:
               cpu: "100m"
               memory: "256Mi"
             limits:
               cpu: "100m"
               memory: "256Mi"
          volumeMounts:
          - mountPath: /kuma/missing
            name: missing-crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command:
          - '/kuma/scripts/save_missing_crds.sh'
      volumes:
        - name: scripts
          configMap:
            name: kuma-install-missing-crds-scripts
            defaultMode: 0755
        - name: missing-crds
          emptyDir: {}
