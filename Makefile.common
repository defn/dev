dummy_ip ?= 169.254.32.1

first = $(word 1, $(subst -, ,$@))
second = $(word 2, $(subst -, ,$@))
first_ = $(word 1, $(subst _, ,$@))
second_ = $(word 2, $(subst _, ,$@))

macos:
	-$(shell which gpg-agent) --daemon --pinentry-program $$(which pinentry-mac)
	-$(shell which dirmngr) --daemon
	for ip in $(dummy_ip); do if ! ifconfig lo0 | grep "inet $$ip"; then sudo -A ifconfig lo0 alias "$$ip" netmask 255.255.255.255; fi; done;
	ifconfig lo0
	defaults write -g ApplePressAndHoldEnabled -bool false
	-docker context create host --docker host=unix:///var/run/docker.sock
	(echo "rdr pass inet proto tcp from any to any port 80 -> 127.0.0.1 port 5555"; echo "rdr pass inet proto tcp from any to any port 443 -> 127.0.0.1 port 5556") | sudo -A pfctl -ef -

symlinks:
	@mark configure symlinks
	bash -x bin/persist-cache
	ln -nfs ~/.nix-profile /tmp/
	echo "token_helper=\"$(which vault-token-helper)\"" > ~/.vault

perms:
	@mark configure permissions
	if [[ "Linux" == "$(shell uname -s)" ]]; then if test -S /var/run/docker.sock; then sudo chgrp ubuntu /var/run/docker.sock; sudo chmod 770 /var/run/docker.sock; fi; fi
	if test -S /run/containerd/containerd.sock; then sudo chgrp ubuntu /run/containerd/containerd.sock; sudo chmod 770 /run/containerd/containerd.sock; fi
	-chmod 0700 ~/.gnupg/. ~/.gnupg2/.
	-if ! test -f ~/.kube/config; then touch ~/.kube/config; fi
	-chmod 0600 ~/.kube/config

install:
	$(MAKE) nix
	. ~/.nix-profile/etc/profile.d/nix.sh && bin/withde ~ $(MAKE) install-inner

install-inner:
	$(MAKE) symlinks perms

	@mark configure password-store
	mkdir -p ~/work/password-store
	if test -n "$${GIT_AUTHOR_NAME:-}"; then \
		if ! test -d ~/work/password-store/.git/.; then \
			git clone https://github.com/$${GIT_AUTHOR_NAME}/password-store ~/work/password-store; \
		fi; \
	fi

	@mark configure gpg
	if test -d ~/.password-store/config/gnupg-config/.; then rsync -ia ~/.password-store/config/gnupg-config/. ~/.gnupg/.; fi
	$(MAKE) perms

	@mark dotfiles
	if test -n "$${GIT_AUTHOR_NAME:-}"; then \
		mkdir -p ~/.config/coderv2/dotfiles; \
		mkdir -p ~//work/.codespaces/.persistedshare; \
		rm -rf ~/work/.codespaces/.persistedshare/dotfiles; \
		ln -nfs ~/.config/coderv2/dotfiles ~/work/.codespaces/.persistedshare/dotfiles; \
		if ! test -d ~/.dotfiles/.git/.; then \
			nix run .#coder -- dotfiles --yes https://github.com/$${GIT_AUTHOR_NAME}/dotfiles; \
		else \
			(cd ~/.dotfiles && ./bootstrap); \
		fi; \
	fi

	@mark docker
	docker context create pod --docker host=tcp://localhost:2375 || true \
		&& docker context create host --docker host=unix:///var/run/docker.sock || true \
        && docker context use host

	@mark dev
	if echo "$${VSCODE_GIT_ASKPASS_NODE:-}" | grep ^/vscode; then \
		nix develop github:defn/pkg/godev-0.0.3?dir=godev --command bash -c 'sudo ln -nfs "$$(which go)" "$${VSCODE_GIT_ASKPASS_NODE%/node}/bin/"'; \
		fi

	this-login

	@mark doctor
	pass hello; echo; echo
	ssh-add -L; echo; echo

	@mark up
	this-up

nix-Darwin-upgrade:
	sudo -i sh -c 'nix-channel --update && nix-env -iA nixpkgs.nix && launchctl remove org.nixos.nix-daemon && launchctl load /Library/LaunchDaemons/org.nixos.nix-daemon.plist'

nix:
	$(MAKE) nix-$(shell uname -s)

nix-Linux:
	export LC_ALL=C.UTF-8 && if ! type -P nix; then $(MAKE) nix-Linux-bootstrap; fi
	. ~/.nix-profile/etc/profile.d/nix.sh && if test "$(shell which direnv nixpkgs-fmt | grep /nix | wc -l)" != "2"; then export LC_ALL=C.UTF-8 && nix profile install nixpkgs\#{nix-direnv,nixpkgs-fmt}; fi

nix-Darwin:
	. ~/.nix-profile/etc/profile.d/nix.sh && if test "$(shell which direnv nixpkgs-fmt | grep /nix | wc -l)" != "2"; then export LC_ALL=C.UTF-8 && nix profile install nixpkgs\#{nix-direnv,nixpkgs-fmt}; fi

nix-Linux-bootstrap:
	sh <(curl -L https://nixos.org/nix/install) --no-daemon
	git checkout .bash_profile

nix-Darwin-bootstrap:
	sh <(curl -L https://nixos.org/nix/install) --darwin-use-unencrypted-nix-store-volume --daemon
	git checkout .bash_profile

nix-reinstall:
	nix profile list | tail -n +2 | awk '{print $$NF}' | xargs nix profile remove
	$(MAKE) nix
