test:
	pre-commit run --all

asdf:
	cat .tool-versions| awk '{print $$1}' | while read -r a; do asdf list-all "$$a" | sed "s#^#$$a #"; done | sort > .tool-versions-all

cache:
	dotenv run docker build -f Dockerfile.base -t registry.fly.io/docker:defn-dev-cache-base --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg IMAGE=ubuntu:20.04 $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .
	dotenv run docker build -f Dockerfile.tower -t registry.fly.io/docker:defn-dev-cache-tower --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg IMAGE=registry.fly.io/docker:defn-dev-base $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .
	docker push registry.fly.io/docker:defn-dev-cache-base
	docker push registry.fly.io/docker:defn-dev-cache-tower

images:
	$(MAKE) base tower push

base:
	dotenv run docker build -f Dockerfile.base -t registry.fly.io/docker:defn-dev-base --cache-from registry.fly.io/docker:defn-dev-cache-base --build-arg IMAGE=ubuntu:20.04 $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .

tower:
	dotenv run docker build -f Dockerfile.tower -t registry.fly.io/docker:defn-dev-tower --cache-from registry.fly.io/docker:defn-dev-cache-tower --build-arg IMAGE=registry.fly.io/docker:defn-dev-base $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .
	dotenv run docker build -f Dockerfile.ci -t registry.fly.io/docker:defn-dev-ci --cache-from registry.fly.io/docker:defn-dev-cache-tower --build-arg IMAGE=registry.fly.io/docker:defn-dev-tower $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .

push:
	docker push registry.fly.io/docker:defn-dev-base
	docker push registry.fly.io/docker:defn-dev-tower
	docker push registry.fly.io/docker:defn-dev-ci

ci:
	while ! docker ps 2>/dev/null; do date; sleep 5; done
	$(MAKE) test
	$(MAKE) tower
	git push
	@figlet success | /usr/games/lolcat

up:
	cd fly && $(MAKE) login up
	~/bin/e tilt up

down:
	cd fly && $(MAKE) down

live:
	env SSH_AUTH_SOCK="$(shell ls -td /tmp/vscode-ssh-auth-sock-* | head -1)" ssh-add -L

monitor:
	rm -f .dead; while true; do if ! $M(AKE) live > /dev/null; then touch .dead; for a in 1 2 3 4 5 6; do if $(MAKE) live; then rm -f .dead; break; fi; echo MAYBE DEAD; sleep 10; done; fi; if test -f .dead; then echo DEAD; pgrep [t]ilt; pkill [t]ilt; break; fi; date; sleep 60; done

dev:
	while true; do if $(MAKE) live; then $(MAKE) up; fi; sleep 5 ; done
