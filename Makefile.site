include Makefile.common

init-site:
	@true

reboot:
	git pull
	$(MAKE) reboot-inner

restart:
	k3d cluster stop
	k3d cluster start
	while true; do if kubectl rollout status statefulset dev --watch; then break; fi; sleep 5; done
	$(MAKE) attach

recreate:
	kubectl delete pod/dev-0
	while true; do if kubectl rollout status statefulset dev --watch; then break; fi; sleep 5; done
	$(MAKE) attach

reboot-inner:
	$(MAKE) dummy
	$(MAKE) registry
	$(MAKE) cluster
	$(MAKE) attach

images amd arm:
	git push
	if [[ -d work/dev ]]; then cd work/dev && git pull && $(MAKE) $@-inner; else $(MAKE) $@-inner; fi

images-inner:
	earthly --remote-cache=$(cache)defn/cache:images $(push) +amd64 --repo=$(repo)
	earthly --remote-cache=$(cache)defn/cache:images $(push) +arm64 --repo=$(repo)
	earthly --remote-cache=$(cache)defn/cache:images $(push) +images --repo=$(repo)

amd-inner:
	earthly --remote-cache=$(cache)defn/cache:images $(push) +amd64 --repo=$(repo)

arm-inner:
	earthly --remote-cache=$(cache)defn/cache:images $(push) +arm64 --repo=$(repo)

updates:
	git push
	if [[ -d work/dev ]]; then cd work/dev && git pull && $(MAKE) $@-inner; else $(MAKE) $@-inner; fi

updates-inner:
	earthly --remote-cache=$(cache)defn/cache:updates $(push) +updates --repo=$(repo) --repo_from=$(repo_from)

push:
	$(MAKE) updates repo= repo_from=localhost:5000/ cache=localhost:5000/

shell:
	docker run --rm -ti $(repo)defn/dev bash -l
