test:
	pre-commit run --all

asdf:
	cat .tool-versions| awk '{print $$1}' | while read -r a; do asdf list-all "$$a" | sed "s#^#$$a #"; done | sort > .tool-versions-all

images:
	$(MAKE) base tower push

cache:
	dotenv run docker build -f Dockerfile.base -t registry.fly.io/defn:dev-cache-base --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg IMAGE=ubuntu:20.04 $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .
	dotenv run docker build -f Dockerfile.tower -t registry.fly.io/defn:dev-cache-tower --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg IMAGE=registry.fly.io/defn:dev-base $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .
	docker push registry.fly.io/defn:dev-cache-base
	docker push registry.fly.io/defn:dev-cache-tower
	#earthly --remote-cache=registry.fly.io/docker:cache-platform --push +warm
	#earthly --remote-cache=registry.fly.io/docker:cache-platform +warm
	earthly +warm

base:
	dotenv run docker build -f Dockerfile.base -t registry.fly.io/defn:dev-base --squash --cache-from registry.fly.io/defn:dev-cache-base --build-arg IMAGE=ubuntu:20.04 $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .

tower:
	dotenv run docker build -f Dockerfile.tower -t registry.fly.io/defn:dev-tower --cache-from registry.fly.io/defn:dev-cache-tower --build-arg IMAGE=registry.fly.io/defn:dev-base $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .
	dotenv run docker build -f Dockerfile.ci -t registry.fly.io/defn:dev-ci --cache-from registry.fly.io/defn:dev-cache-tower --build-arg IMAGE=registry.fly.io/defn:dev-tower $(shell cat .env | cut -d= -f1 | while read -r a; do echo --build-arg $$a; done) .

push:
	docker push registry.fly.io/defn:dev-base
	docker push registry.fly.io/defn:dev-tower
	docker push registry.fly.io/defn:dev-ci

clean:
	earthly prune --all
	docker system prune -f

ci:
	$(MAKE) test
	$(MAKE) images
	$(MAKE) cache
	@figlet success | /usr/games/lolcat

up:
	cd fly && $(MAKE) login up
	~/bin/e tilt up --stream

down:
	-bash -c 'rm -vf "$${SSH_AUTH_SOCK}"'
	-echo yes | gh auth logout --hostname github.com
	-cd ~/.password-store && sudo -u ubuntu git-crypt lock
	-cd fly && $(MAKE) down
	-pkill [t]ilt

live:
	@env SSH_AUTH_SOCK="$(shell ls -td /tmp/vscode-ssh-auth-sock-* 2>/dev/null | head -1)" ssh-add -L 2>/dev/null >/dev/null

monitor:
	@rm -f .dead; \
		if ! $(MAKE) live 2>/dev/null >/dev/null; then \
			touch .dead; \
			for a in 1 2 3 4 5 6 7 8 9 0; do \
				if $(MAKE) live 2>/dev/null >/dev/null; then rm -f .dead; break; fi; \
				echo MAYBE DEAD $$a; sleep 10; done; \
		fi; \
		if test -f .dead; then \
			~/bin/e $(MAKE) down; \
		fi; \
		if test "$(shell find .alive -mmin +30)"; then
			~/bin/e $(MAKE) down; \
		fi

dev:
	@test "$(shell pass hello)" == "world"
	@git pull
	@git checkout .
	$(MAKE) dev_inner

dev_inner:
	@~/bin/e pre-commit run --all
	@while true; do if ~/bin/e $(MAKE) live 2>/dev/null >/dev/null; then ~/bin/e $(MAKE) up; fi; echo "$$(date) zzz"; sleep 5 ; done

trigger:
	while true; do (cd fly && ~/bin/e $(MAKE) trigger-devcontainer); sleep 5; done
