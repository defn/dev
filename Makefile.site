include Makefile.common

init-site:
	@true

reset: # Reset cluster
	-k3d cluster delete
	-docker rm -f ignore
	$(MAKE) restart-docker
	$(MAKE) cluster

restart: # Restart everything
	git pull
	$(MAKE) restart-inner

restart-inner:
	k3d cluster stop
	-osascript -e 'quit app "Docker"'
	open -a Docker
	while ! docker ps; do date; sleep 5; done
	k3d cluster start
	while true; do if kubectl rollout status statefulset dev --watch; then break; fi; sleep 5; done
	$(MAKE) attach

restart-docker: # Restart Docker Desktop
	-osascript -e 'quit app "Docker"'
	open -a Docker
	while ! docker ps; do date; sleep 5; done

restart-cluster: # Restart k3d
	-k3d cluster stop
	-k3d cluster start
	while true; do if kubectl rollout status statefulset dev --watch; then break; fi; sleep 5; done
	$(MAKE) attach

recreate: # Recreate pod
	kubectl delete pod/dev-0
	while true; do if kubectl rollout status statefulset dev --watch; then break; fi; sleep 5; done
	$(MAKE) attach

stop: # Stop k3d
	k3d cluster stop

images amd arm:
	git push
	if [[ -d work/dev ]]; then cd work/dev && git pull && $(MAKE) $@-inner; else $(MAKE) $@-inner; fi

images-inner:
	earthly --remote-cache=$(cache)defn/cache:images $(push) +amd64 --repo=$(repo)
	earthly --remote-cache=$(cache)defn/cache:images $(push) +arm64 --repo=$(repo)
	earthly --remote-cache=$(cache)defn/cache:images $(push) +images --repo=$(repo)

amd-inner:
	earthly --remote-cache=$(cache)defn/cache:images $(push) +amd64 --repo=$(repo)

arm-inner:
	earthly --remote-cache=$(cache)defn/cache:images $(push) +arm64 --repo=$(repo)

updates:
	git push
	if [[ -d work/dev ]]; then cd work/dev && git pull && $(MAKE) $@-inner; else $(MAKE) $@-inner; fi

updates-inner:
	earthly --remote-cache=$(cache)defn/cache:updates $(push) +updates --repo=$(repo) --repo_from=$(repo_from)

push:
	$(MAKE) updates repo= repo_from=k3d-registry:5000/ cache=k3d-registry:5000/

shell:
	docker run --rm -ti $(repo)defn/dev bash -l

cert:
	touch meh.json; chmod 0600 meh.json
	-k --context pod create -n traefik secret generic default-certificate --from-file=meh.json
	v write pki/issue/gyre.defn.dev common_name="remocal.net" ip_sans="169.254.32.1" alt_names="hello.demo.svc.cluster.local,169-254-32-1.sslip.io" tl=120h -format=json | jq .data > meh.json
	k --context pod patch -n traefik secret default-certificate --type='json' -p='[{"op" : "replace" ,"path" : "/data/tls.key" ,"value" : "'$$(cat meh.json | jq -r '.private_key | @base64')'"}]'
	k --context pod patch -n traefik secret default-certificate --type='json' -p='[{"op" : "replace" ,"path" : "/data/tls.crt" ,"value" : "'$$(cat meh.json | jq -r '.certificate | @base64')'"}]'
	rm -f meh.json
