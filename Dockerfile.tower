#syntax=docker/dockerfile:1.4

ARG IMAGE

FROM ${IMAGE} AS credential_pass
ARG CREDENTIAL_PASS
RUN cd /usr/local/bin && curl -sSL https://github.com/docker/docker-credential-helpers/releases/download/v${CREDENTIAL_PASS}/docker-credential-pass-v${CREDENTIAL_PASS}-amd64.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS powerline
ARG POWERLINE
RUN cd /usr/local/bin && sudo curl -sSL -o powerline https://github.com/justjanne/powerline-go/releases/download/v${POWERLINE}/powerline-go-linux-amd64 \
    && sudo chmod 755 powerline

FROM ${IMAGE} AS hof
ARG HOF
RUN cd /usr/local/bin && sudo curl -sSL -o hof https://github.com/hofstadter-io/hof/releases/download/v${HOF}/hof_${HOF}_Linux_x86_64 \
    && sudo chmod 755 hof

FROM ${IMAGE} AS step
ARG STEP
RUN curl -sSL -o step.deb https://dl.step.sm/gh-release/cli/gh-release-header/v${STEP}/step-cli_${STEP}_amd64.deb \
    && sudo dpkg -i step.deb && rm -f step.deb

FROM ${IMAGE} AS cilium
ARG CILIUM
RUN cd /usr/local/bin && curl -sSL https://github.com/cilium/cilium-cli/releases/download/v${CILIUM}/cilium-linux-amd64.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS hubble
ARG HUBBLE
RUN cd /usr/local/bin && curl -sSL https://github.com/cilium/hubble/releases/download/v${HUBBLE}/hubble-linux-amd64.tar.gz \
    | sudo tar xzvf -

FROM ${IMAGE} AS linkerd
ARG LINKERD
RUN cd /usr/local/bin && sudo curl -sSL -o linkerd https://github.com/linkerd/linkerd2/releases/download/${LINKERD}/linkerd2-cli-${LINKERD}-linux-amd64 \
    && sudo chmod 755 linkerd

FROM ${IMAGE} AS vcluster
ARG VCLUSTER
RUN cd /usr/local/bin && sudo curl -sSL -o vcluster https://github.com/loft-sh/vcluster/releases/download/v${VCLUSTER}/vcluster-linux-amd64 \
    && sudo chmod 755 vcluster

FROM ${IMAGE} AS loft
ARG LOFT
RUN cd /usr/local/bin && sudo curl -sSL -o loft https://github.com/loft-sh/loft/releases/download/v${LOFT}/loft-linux-amd64 \
    && sudo chmod 755 loft

FROM ${IMAGE} AS steampipe
ARG STEAMPIPE
RUN cd /usr/local/bin && curl -sSL https://github.com/turbot/steampipe/releases/download/v${STEAMPIPE}/steampipe_linux_amd64.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS jless
ARG JLESS
RUN (curl -sSL https://github.com/PaulJuliusMartinez/jless/releases/download/v${JLESS}/jless-v${JLESS}-x86_64-unknown-linux-gnu.zip | gunzip -c - > jless) \
    && chmod 755 jless && sudo mv jless /usr/local/bin/

FROM ${IMAGE} AS babashka
ARG BABASHKA
RUN cd /usr/local/bin && curl -sSL https://github.com/babashka/babashka/releases/download/v${BABASHKA}/babashka-${BABASHKA}-linux-amd64.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS gh
ARG GH
RUN cd /usr/local/bin && curl -sSL https://github.com/cli/cli/releases/download/v${GH}/gh_${GH}_linux_amd64.tar.gz \
    | sudo tar xvfz - --wildcards '*/bin/gh' && sudo mv */bin/gh . && sudo rm -rf gh_*

FROM ${IMAGE} AS goreleaser
ARG GORELEASER
RUN cd /usr/local/bin && curl -sSL https://github.com/goreleaser/goreleaser/releases/download/v${GORELEASER}/goreleaser_Linux_x86_64.tar.gz \
    | sudo tar xvfz - goreleaser

FROM ${IMAGE} AS golangcilint
ARG GOLANGCILINT
RUN cd /usr/local/bin && curl -sSL https://github.com/golangci/golangci-lint/releases/download/v${GOLANGCILINT}/golangci-lint-${GOLANGCILINT}-linux-amd64.tar.gz \
    | sudo tar xvfz - --wildcards '*/golangci-lint' && sudo mv golangci-lint-*/golangci-lint . && sudo rm -rf golangci-lint-*

FROM ${IMAGE} AS flyctl
ARG FLYCTL
RUN cd /usr/local/bin && curl -sSL https://github.com/superfly/flyctl/releases/download/v${FLYCTL}/flyctl_${FLYCTL}_Linux_x86_64.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS yaegi
ARG YAEGI
RUN cd /usr/local/bin && curl -sSL https://github.com/traefik/yaegi/releases/download/v${YAEGI}/yaegi_v${YAEGI}_linux_amd64.tar.gz \
    | sudo tar xvfz - yaegi

FROM ${IMAGE} AS earthly
ARG EARTHLY
RUN cd /usr/local/bin && sudo curl -sSL -o earthly https://github.com/earthly/earthly/releases/download/v${EARTHLY}/earthly-linux-amd64 \
    && sudo chmod 755 earthly

FROM ${IMAGE} AS buildkite
ARG BUILDKITE
RUN cd /usr/local/bin && curl -sSL https://github.com/buildkite/agent/releases/download/v${BUILDKITE}/buildkite-agent-linux-amd64-${BUILDKITE}.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS hlb
ARG HLB
RUN cd /usr/local/bin && sudo curl -sSL -o hlb https://github.com/openllb/hlb/releases/download/v${HLB}/hlb-linux-amd64 \
    && sudo chmod 755 hlb

FROM ${IMAGE} AS difft
ARG DIFFT
RUN cd /usr/local/bin && curl -sSL https://github.com/Wilfred/difftastic/releases/download/${DIFFT}/difft-x86_64-unknown-linux-gnu.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} AS litestream
ARG LITESTREAM
RUN cd /usr/local/bin && curl -sSL https://github.com/benbjohnson/litestream/releases/download/v${LITESTREAM}/litestream-v${LITESTREAM}-linux-amd64.tar.gz \
    | sudo tar xvfz -

FROM ${IMAGE} as pants
RUN python -m pipx install pantsbuild.pants

FROM ${IMAGE} as asdf
ARG ASDF
RUN git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v${ASDF}

FROM ${IMAGE} as kubernetes
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add kubectl'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install kubectl'

RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add krew'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install krew'

RUN /home/ubuntu/.asdf/shims/kubectl-krew install ns
RUN /home/ubuntu/.asdf/shims/kubectl-krew install ctx
RUN /home/ubuntu/.asdf/shims/kubectl-krew install stern
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf reshim krew'

FROM ${IMAGE} as k9s
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add k9s'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install k9s'

FROM ${IMAGE} as kustomize
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add kustomize'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install kustomize'

FROM ${IMAGE} as helm
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add helm'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install helm'

FROM ${IMAGE} as k3d
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add k3d'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install k3d'

FROM ${IMAGE} as tilt
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add tilt'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install tilt'

FROM ${IMAGE} as teleport
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add teleport-ent'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install teleport-ent'

FROM ${IMAGE} as vault
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add vault'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install vault'

FROM ${IMAGE} as consul
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add consul'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install consul'

FROM ${IMAGE} as cloudflared
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add cloudflared'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install cloudflared '

FROM ${IMAGE} as shell
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add shellcheck'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install shellcheck'

RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add shfmt'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install shfmt'

FROM ${IMAGE} as cue
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add cue'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install cue'

FROM ${IMAGE} as terraform
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add terraform'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install terraform'

FROM ${IMAGE} as golang
COPY --link --chown=ubuntu:ubuntu --from=asdf /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add golang'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install golang'

FROM ${IMAGE} as precommit
COPY --link --chown=ubuntu:ubuntu --from=golang /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN git init
RUN pipx install pre-commit
COPY --link --chown=ubuntu:ubuntu .pre-commit-config.yaml .
RUN /home/ubuntu/.local/bin/pre-commit install
RUN env PATH=$PATH:$HOME/.asdf/shims /home/ubuntu/.local/bin/pre-commit run --all

FROM ${IMAGE}
COPY --from=credential_pass --link /usr/local/bin/docker-credential-pass /usr/local/bin/docker-credential-pass
COPY --from=powerline --link /usr/local/bin/powerline /usr/local/bin/powerline
COPY --from=hof --link /usr/local/bin/hof /usr/local/bin/hof
COPY --from=step --link /usr/bin/step* /usr/local/bin/
COPY --from=cilium --link /usr/local/bin/cilium /usr/local/bin/cilium
COPY --from=hubble --link /usr/local/bin/hubble /usr/local/bin/hubble
COPY --from=linkerd --link /usr/local/bin/linkerd /usr/local/bin/linkerd
COPY --from=vcluster --link /usr/local/bin/vcluster /usr/local/bin/vcluster
COPY --from=loft --link /usr/local/bin/loft /usr/local/bin/loft
COPY --from=steampipe --link /usr/local/bin/steampipe /usr/local/bin/steampipe
COPY --from=jless --link /usr/local/bin/jless /usr/local/bin/jless
COPY --from=babashka --link /usr/local/bin/bb /usr/local/bin/bb
COPY --from=gh --link /usr/local/bin/gh /usr/local/bin/gh
COPY --from=goreleaser --link /usr/local/bin/goreleaser /usr/local/bin/goreleaser
COPY --from=golangcilint --link /usr/local/bin/golangci-lint /usr/local/bin/golangci-lint
COPY --from=flyctl --link /usr/local/bin/flyctl /usr/local/bin/flyctl
COPY --from=yaegi --link /usr/local/bin/yaegi /usr/local/bin/yaegi
COPY --from=earthly --link /usr/local/bin/earthly /usr/local/bin/earthly
COPY --from=buildkite --link /usr/local/bin/buildkite-agent /usr/local/bin/buildkite-agent
COPY --from=hlb --link /usr/local/bin/hlb /usr/local/bin/hlb
COPY --from=difft --link /usr/local/bin/difft /usr/local/bin/difft
COPY --from=litestream --link /usr/local/bin/litestream /usr/local/bin/litestream

COPY --link --chown=ubuntu:ubuntu --from=shell /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=kubernetes /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=cue /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=k9s /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=kustomize /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=helm /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=k3d /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=tilt /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=teleport /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=vault /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=consul /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=cloudflared /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=terraform /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu --from=golang /home/ubuntu/.asdf /home/ubuntu/.asdf
COPY --link --chown=ubuntu:ubuntu .tool-versions .
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install && asdf reshim'

COPY --link --chown=ubuntu:ubuntu --from=precommit /home/ubuntu/.local/pipx/venvs/pre-commit /home/ubuntu/.local/pipx/venvs/pre-commit
COPY --link --chown=ubuntu:ubuntu --from=precommit /home/ubuntu/.local/bin/pre-commit* /home/ubuntu/.local/bin/
COPY --link --chown=ubuntu:ubuntu --from=precommit /home/ubuntu/.cache/pre-commit /home/ubuntu/.cache/pre-commit
COPY --link --chown=ubuntu:ubuntu .pre-commit-config.yaml .

COPY --link --chown=ubuntu:ubuntu --from=pants /home/ubuntu/.local/pipx/venvs/pantsbuild-pants /home/ubuntu/.local/pipx/venvs/pantsbuild-pants
COPY --link --chown=ubuntu:ubuntu --from=pants /home/ubuntu/.local/bin/pants /home/ubuntu/.local/bin/pants

COPY --link --chown=ubuntu:ubuntu . .
