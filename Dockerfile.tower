ARG IMAGE

FROM ${IMAGE}

RUN python3.9 -m pipx install pantsbuild.pants

ARG CREDENTIAL_PASS
RUN cd /usr/local/bin && curl -sSL https://github.com/docker/docker-credential-helpers/releases/download/v${CREDENTIAL_PASS}/docker-credential-pass-v${CREDENTIAL_PASS}-amd64.tar.gz \
    | sudo tar xvfz -

ARG POWERLINE
RUN cd /usr/local/bin && sudo curl -sSL -o powerline https://github.com/justjanne/powerline-go/releases/download/v${POWERLINE}/powerline-go-linux-amd64 \
    && sudo chmod 755 powerline

ARG HOF
RUN cd /usr/local/bin && sudo curl -sSL -o hof https://github.com/hofstadter-io/hof/releases/download/v${HOF}/hof_${HOF}_Linux_x86_64 \
    && sudo chmod 755 hof

ARG STEP
RUN curl -sSL -o step.deb https://dl.step.sm/gh-release/cli/gh-release-header/v${STEP}/step-cli_${STEP}_amd64.deb \
    && sudo dpkg -i step.deb && rm -f step.deb

ARG CILIUM
RUN cd /usr/local/bin && curl -sSL https://github.com/cilium/cilium-cli/releases/download/v${CILIUM}/cilium-linux-amd64.tar.gz \
    | sudo tar xvfz -

ARG HUBBLE
RUN cd /usr/local/bin && curl -sSL https://github.com/cilium/hubble/releases/download/v${HUBBLE}/hubble-linux-amd64.tar.gz \
    | sudo tar xzvf -

ARG LINKERD
RUN cd /usr/local/bin && sudo curl -sSL -o linkerd https://github.com/linkerd/linkerd2/releases/download/${LINKERD}/linkerd2-cli-${LINKERD}-linux-amd64 \
    && sudo chmod 755 linkerd

ARG VCLUSTER
RUN cd /usr/local/bin && sudo curl -sSL -o vcluster https://github.com/loft-sh/vcluster/releases/download/v${VCLUSTER}/vcluster-linux-amd64 \
    && sudo chmod 755 vcluster

ARG LOFT
RUN cd /usr/local/bin && sudo curl -sSL -o loft https://github.com/loft-sh/loft/releases/download/v${LOFT}/loft-linux-amd64 \
    && sudo chmod 755 loft

ARG STEAMPIPE
RUN cd /usr/local/bin && curl -sSL https://github.com/turbot/steampipe/releases/download/v${STEAMPIPE}/steampipe_linux_amd64.tar.gz \
    | sudo tar xvfz -

ARG JLESS
RUN (curl -sSL https://github.com/PaulJuliusMartinez/jless/releases/download/v${JLESS}/jless-v${JLESS}-x86_64-unknown-linux-gnu.zip | gunzip -c - > jless) \
    && chmod 755 jless && sudo mv jless /usr/local/bin/

ARG CIRRUS
RUN cd /usr/local/bin && curl -sSL https://github.com/cirruslabs/cirrus-cli/releases/download/v${CIRRUS}/cirrus-linux-amd64.tar.gz \
    | sudo tar xvfz - cirrus

ARG BABASHKA
RUN cd /usr/local/bin && curl -sSL https://github.com/babashka/babashka/releases/download/v${BABASHKA}/babashka-${BABASHKA}-linux-amd64.tar.gz \
    | sudo tar xvfz -

ARG GH
RUN cd /usr/local/bin && curl -sSL https://github.com/cli/cli/releases/download/v${GH}/gh_${GH}_linux_amd64.tar.gz \
    | sudo tar xvfz - --wildcards '*/bin/gh' && sudo mv */bin/gh . && sudo rm -rf gh_*

ARG ASDF
COPY --chown=ubuntu:ubuntu .tool-versions .
RUN git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v${ASDF}
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add shellcheck'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add shfmt'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add cue'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add kubectl'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add krew'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add k9s'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add kustomize'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add helm'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add k3d'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add tilt'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add golang'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add teleport-ent'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add vault'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf plugin-add consul'
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf install'

RUN /home/ubuntu/.asdf/shims/kubectl-krew install ns
RUN /home/ubuntu/.asdf/shims/kubectl-krew install ctx
RUN /home/ubuntu/.asdf/shims/kubectl-krew install stern
RUN bash -c 'source $HOME/.asdf/asdf.sh && asdf reshim krew'

RUN python3.9 -m pipx install pantsbuild.pants

COPY --chown=ubuntu:ubuntu . .

RUN ./bin/e /home/ubuntu/.local/bin/pre-commit run --all
