#!/bin/bash

set -efu
mkdir ~/tmp
cd ~/tmp

SSHKEY=AAAAB3NzaC1yc2EAAAADAQABAAABAQDqGiNI0Co9JAKytfce4UVhEJj+HMaoZ7TFiLg8SBeRDxV+OLma9rqDVkVqrxW5rkGMco3/Xhm/uGu+rkODJD/aZD/1fpzEsNUQIKhP9VXlVx98CMYOMCXTrgXZGdNPs0CzIb0TDI3W1tOGAA0VOZL+DGb/pUFiWeADLA9GiA8qnhahQp6yCNf8zpt3ATawSOGDLttB+PQPvwwUGMozihCcn84Kbf2Q0aQEl5J0kPLQTgBTJ1pPjTqBmkBWhP1KKAEDz3ziUmFF2eoZax7B+VXYlI6nPeETqFWkke6/EVLRqOXC4nYXKUbX2HloiEGkv4ifzzuGyS2Tdiysx0dthVcv

echo "ssh-rsa $SSHKEY" > authorized_keys
install -m 0600 -o ubuntu -g ubuntu authorized_keys ~ubuntu/.ssh/authorized_keys
rm -f authorized_keys

(
echo FROM ghcr.io/defn/dev:latest-k3d-base
echo ARG TSKEY
echo ENV DEFN_DEV_TSKEY='$TSKEY'
) > Dockerfile

docker build -t k3d-control --build-arg TSKEY=_TSKEY_ .
rm -f Dockerfile

#chown 165536:165536 /dev/net/tun
env DEFN_DEV_PRIVILEGED=true \
    k3d node create "$(uname -n)" \
        --image k3d-control \
        --token _K3STOKEN_ \
        --role agent \
        --cluster https://_CONTROLIP_:6443

curl -sSL -o /usr/local/bin/k3d-real \
    https://github.com/k3d-io/k3d/releases/download/v5.4.6/k3d-linux-amd64
chmod 755 /usr/local/bin/k3d-real

k3d-real cluster create global \
    --image k3d-control
